{"version":3,"sources":["Enum.tsx","Api.tsx","images/demande.jpg","images/offre.jpg","components/auth/dashboardAuth.ts","components/auth/useAuthProvider.ts","components/auth/AuthProvider.tsx","components/auth/useAuth.ts","components/AppelAction.tsx","components/CardDernieresAnnonces.tsx","components/DerniersAnnonces.tsx","components/OffresVedettes.tsx","components/Accueil.tsx","images/apropos1.jpg","images/apropos2.jpg","images/apropos3.jpg","images/apropos4.jpg","components/APropos.tsx","components/auth/PrivateRoute.tsx","components/auth/ProtectedLogin.tsx","components/Confidentialite.tsx","components/Footer.tsx","components/auth/ProtectedDashboardRoutes.tsx","components/Dashboard/DashboardCardDemande.tsx","components/Dashboard/DashboardCardOffre.tsx","components/Dashboard/DashboardAccueil.tsx","components/Dashboard/DashboardDemandes.tsx","components/Selects/SelectRegion.tsx","components/Selects/SelectRemuneration.tsx","components/Selects/SelectSecteur.tsx","components/Selects/SelectStagiaire.tsx","components/Dashboard/DashboardEditDemande.tsx","components/Selects/SelectEntreprise.tsx","components/Dashboard/DashboardEditOffre.tsx","components/Dashboard/DashboardEditProfil.tsx","components/Dashboard/DashboardEditUsers.tsx","components/Dashboard/DashboardFicheUser.tsx","components/Dashboard/DashboardNouveauUser.tsx","components/Dashboard/DashboardNouvelleDemande.tsx","components/Dashboard/DashboardNouvelleOffre.tsx","components/Dashboard/DashboardOffreDemandeDetails.tsx","components/Dashboard/DashBoardOffres.tsx","components/Dashboard/DashboardRegions.tsx","components/Dashboard/DashboardSecteurs.tsx","components/Dashboard/DashBoardUsersCard.tsx","components/Dashboard/DashBoardUsers.tsx","components/Dashboard/DashBoardContent.tsx","components/Dashboard/DashBoardHeader.tsx","components/Dashboard/Dashboard.tsx","components/ListRegions.tsx","components/ListSecteurs.tsx","components/DetailsAnnonces.tsx","components/Header.tsx","components/Login.tsx","images/contact.jpg","components/NousJoindre.tsx","components/ListOffresDemandes.tsx","components/OffresDemandes.tsx","images/accueil.jpg","components/formSubmittedMerci.tsx","images/notFound.jpg","components/NotFound.tsx","App.tsx","index.tsx"],"names":["Size","Appel","Menu","AccessLevel","ENDPOINT","fetchOffresDemandes","a","fetch","json","data","updateOffreDemande","offreDemande","_id","offreDemandeToEdit","method","headers","body","JSON","stringify","updated","addOffreDemande","OffreDemande","offreDemandeToAdd","added","fetchRegions","fetchRegion","id","updateRegion","region","regionToEdit","addRegion","console","log","regionToAdd","fetchSecteursActivite","fetchSecteur","updateSecteurActivite","secteur","secteurToEdit","addSecteurActivite","secteurToAdd","fetchUtilisateurs","fetchUtilisateur","updateUtilisateur","user","userToEdit","addUtilisateur","utilisateur","utilisateurToAdd","dashboardAuth","signIn","cb","setTimeout","signOut","useAuthProvider","useState","setUser","AuthContext","createContext","AuthProvider","children","auth","Provider","value","useAuth","useContext","AppelAction","type","toast","history","useHistory","theme","useTheme","matchesMD","useMediaQuery","breakpoints","down","Wrapper","Grid","container","OFFRE","item","xs","sm","md","style","backgroundColor","paddingTop","paddingBottom","className","alignContent","direction","Typography","variant","fontWeight","color","marginTop","marginBottom","Button","size","borderRadius","textTransform","onClick","NiveauAcces","stagiaire","push","DEMANDE","Image","src","imgDemande","fluid","alt","width","imgOffre","entreprise","styled","div","CardDernieresAnnonces","cardType","undefined","auteur","setAuteur","useEffect","getAuteur","Auteur","data-testid","height","Card","display","flexDirection","justifyContent","CardHeader","title","Titre","subheader","NomEntreprise","Ville","getAuteurNom","CardContent","alignItems","Description","justify","Logo","getLogo","CardActions","name","pathname","state","dejaPostule","Communications","find","communication","EnvoyeParID","Date","Message","NbMessages","DerniersAnnonces","offresDemandes","setOffresDemandes","getOffresDemandes","filter","Supprime","Type","Valide","sort","b","DateParution","splice","length","textAlign","lg","spacing","map","text","OffresVedettes","offres","setOffres","getOffres","offre","Vedette","position","xl","Accueil","APropos","Container","fontSize","apropos1","rounded","apropos2","apropos3","padding","apropos4","PrivateRoute","rest","token","Cookies","get","to","ProtectedLogin","Confidentialite","Footer","location","useLocation","includes","ProtectedDashboardRoutes","DashboardCardDemande","demande","updateDemande","setUpdate","setUpdatingOffreDemande","formatDate","date","d","month","getMonth","day","getDate","year","getFullYear","join","offreDemandeUpdated","update","handleSupprimer","borderTop","borderBottom","icon","faUserGraduate","Prenom","Nom","Ecole","ProgrammesSuivi","DateDebut","DateFin","startIcon","faEdit","faTimes","DashboardCardOffre","updateOffre","faUserTie","admin","FormControlLabel","control","Switch","checked","onChange","label","DashboardAccueil","demandes","setDemandes","getDemandes","faLevelDownAlt","top","DashboardDemandes","recherche","setRecherche","TextField","e","target","InputProps","endAdornment","InputAdornment","toLowerCase","SelectRegion","selectedId","regions","setRegions","selectedRegion","setSelectedRegion","getRegions","Name","handleChange","event","FormControl","minWidth","defaultValue","required","select","fullWidth","margin","MenuItem","SelectRemuneration","selected","React","remuneration","setRemuneration","index","SelectSecteur","secteurs","setSecteurs","selectedSecteur","setSelectedsecteur","getsecteurs","maxWidth","whiteSpace","overflow","textOverflow","SelectStagiaire","stagiaires","setStagiaires","selectedStagiaire","setSelectedStagiaire","getstagiaires","Entreprise","NomComplet","DashboardEditDemande","setDemande","setUpdatingDemande","handleSave","preventDefault","demandeUpdated","DureeSemaines","onSubmit","SecteurActivite","Region","utils","DateFnsUtils","autoOk","inputVariant","format","InputAdornmentProps","differenceInWeeks","placeholder","NombreHeuresSemaine","remu","Remuneration","multiline","rows","CompetencesAcquises","InformationsSuplementaires","AutresFormations","SelectEntreprise","entreprises","setEntreprises","selectedEntreprise","setSelectedEntreprise","getEntreprises","DashboardEditOffre","setOffre","setUpdatingOffre","handleChangeCheck","OffreUpdated","component","EmploiApresStage","inputProps","CompetencesRecherches","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","useStyles","makeStyles","createStyles","formControl","chips","flexWrap","chip","noLabel","input","border","DashboardProfil","classes","secteursActivites","setSecteursActivites","setUpdatingUser","getSecteursActivites","getUser","Field","key","handleChangeTextField","pattern","getTitres","ids","titres","userEdited","PremierConnexion","userUpdated","Adresse","Courriel","Telephone","SiteWeb","CV","MessageMotivation","InputLabel","Select","labelId","multiple","SecteursActivites","Input","renderValue","Chip","PostesStagiaires","endIcon","DashboardEditUsers","Actif","DashBoardFicheUser","handleEdit","faUserNinja","DashboardNouveauUser","setUpdatingUtilisateur","setAddedUtilisateur","error","setError","lastLocation","useLastLocation","password","confirmation","nom","prenom","email","showPassword","showConfirmation","nomEntreprise","values","setValues","prop","handleMouseDownPassword","handleCreation","newUser","MotdePasse","utilisateurAdded","FormLabel","ButtonGroup","disableElevation","FormHelperText","htmlFor","OutlinedInput","IconButton","aria-label","onMouseDown","edge","Visibility","VisibilityOff","labelWidth","DashboardNouvelleDemande","SecteursActivite","DureeStage","TypeStage","dif","toString","demandeAdded","Number","DescriptionPosteRecherche","AutresInformations","newOffre","DashboardNouvelleOffre","offreAdded","DashBoardOffreDemandeDetails","setRegion","setSecteur","getRegion","getSecteur","DashboardOffres","vedette","setVedette","Checkbox","DashboardSecteurs","edit","setEdit","oldValue","setOldValue","setUpdatingRegion","setAddingRegion","add","setAdd","newRegion","handleAddRegion","regionAdded","FormGroup","Table","TableHead","TableRow","TableCell","align","TableBody","colSpan","autoFocus","Tooltip","stopPropagation","hover","regionOldValue","handleEditChange","regionUpdated","setUpdatingSecteur","setAddingSecteur","newSecteur","handleAddSecteurActivite","secteurAdded","secteurOldValue","secteurUpdated","DashBoardUsersCard","supprimer","usersType","DashboardCandidats","utilisateurs","setUtilisateurs","getUtilisateurs","users","getFullName","DashboardContent","path","DashBoardUsers","DashboardRegions","DashboardFicheUser","DashboardHeader","logout","profil","anchorEl","setAnchorEl","matchesXS","matchesSM","handleClose","faPlus","Box","getUserName","userAccessLevel","getAccessLevel","Avatar","charAt","getInitials","currentTarget","faAngleDown","keepMounted","open","Boolean","onClose","ListItemIcon","faUser","ListItemText","primary","faSignOutAlt","Badge","overlap","faBell","menuItems","accueil","faHome","link","accessLevel","faArrowAltCircleRight","faArrowAltCircleLeft","candidats","admins","faMapMarkedAlt","faBriefcase","Dashboard","menuItemSelected","setMenuItemSelected","minHeight","List","ListItem","button","boxSizing","borderLeft","paddingLeft","disableGutters","disableTypography","DashboardEditProfil","ListRegions","selectedRegionId","dense","ListSecteurs","selectedSecteurId","setSelectedSecteur","DetailsAnnonces","setSelectedSecteurID","setSelectedRegionID","Breadcrumbs","separator","Header","imageURL","imgSize","backgroundUrl","marginLeft","marginRight","InputBase","props","Login","login","addedUtilisateur","handleClickShowPassword","handleConnection","set","erreur","faSignInAlt","Divider","NousJoindre","bgContact","action","ListOffresDemandes","selectedSecteurID","selectedRegionID","OffresDemandes","toUpperCase","slice","FormSubmittedMerci","NotFound","imgNotFound","App","customToast","document","useLayoutEffect","window","scrollTo","remove","handleConnectionfromCookie","BGImage","SMALLER","BIG","exact","from","limit","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.f51bc1f6.chunk.js","sourcesContent":["\r\nexport enum Size {\r\n    SMALL = 400,\r\n    BIG = 600,\r\n    SMALLER = 300,\r\n  }\r\n  \r\n  export enum Appel {\r\n    DEMANDE = 'demande',\r\n    OFFRE = 'offre'\r\n  }\r\n\r\n  export enum Menu {\r\n    accueil = 'Accueil',\r\n    offres = 'Offres de stage',\r\n    demandes = 'Demandes de stage',\r\n    candidats = 'Candidats',\r\n    entreprises = 'Entreprises',\r\n    profil = 'Profil',\r\n    regions = 'Regions',\r\n    secteurs = \"Secteurs d'activité\",\r\n    admins = 'Administrateurs'\r\n  }\r\n\r\n  export enum AccessLevel {\r\n    stagiaire = 111,\r\n    entreprise = 333,\r\n    admin = 999\r\n  }\r\n\r\n","import { OffresDemandesType, RegionsType, SecteursActiviteType, UtilisateursType } from './Types';\r\n\r\n\r\nconst ENDPOINT='https://apiestage.herokuapp.com/api/'\r\n\r\nexport const fetchOffresDemandes = async (): Promise<OffresDemandesType[]> => {\r\n  const data = await (await fetch(ENDPOINT+\"offreDemande\")).json();\r\n  return data;\r\n};\r\n\r\nexport const updateOffreDemande = async (offreDemande: OffresDemandesType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  //</string>console.log(offreDemande);\r\n  const {_id, ...offreDemandeToEdit} = offreDemande;\r\n\r\n  var updated= await (await fetch(ENDPOINT+ \"offreDemande/\"+ offreDemande._id, {\r\n    method: 'put', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(offreDemandeToEdit) // Envoie du data en format JSON \r\n   })).json()\r\n    \r\n\r\n    return updated;\r\n}\r\n\r\nexport const addOffreDemande = async (OffreDemande: OffresDemandesType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  //console.log(OffreDemande);\r\n  const {_id, ...offreDemandeToAdd} = OffreDemande;\r\n  var added= await fetch(ENDPOINT+ \"offreDemande/\", {\r\n    method: 'post', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(offreDemandeToAdd) // Envoie du data en format JSON \r\n   })\r\n\r\n    return added.json();\r\n}\r\n\r\nexport const fetchRegions = async (): Promise<RegionsType[]> => {\r\n  const data = await (await fetch(ENDPOINT+\"regions\")).json();\r\n  return data;\r\n};\r\n\r\nexport const fetchRegion = async (id: string): Promise<RegionsType> => {\r\n  const data = await (await fetch(ENDPOINT+\"regions/\"+id)).json();\r\n  return data;\r\n  \r\n};\r\n\r\nexport const updateRegion = async (region: RegionsType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  //console.log(region);\r\n  const {_id, ...regionToEdit} = region;\r\n  var updated= await fetch(ENDPOINT+ \"regions/\"+ region._id, {\r\n    method: 'put', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(regionToEdit) // Envoie du data en format JSON \r\n  })\r\n\r\n    return updated.json();\r\n}\r\n\r\nexport const addRegion = async (region: RegionsType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  console.log(region);\r\n  const {_id, ...regionToAdd} = region;\r\n  var added = await (await fetch(ENDPOINT+ \"regions/\"+ region._id, {\r\n    method: 'post', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(regionToAdd) // Envoie du data en format JSON \r\n   })).json();\r\n\r\n    return added;\r\n}\r\n\r\nexport const fetchSecteursActivite = async (): Promise<SecteursActiviteType[]> => {\r\n  const data = await (await fetch(ENDPOINT+\"secteurs\")).json();\r\n  return data;\r\n};\r\n\r\nexport const fetchSecteur = async (id: string): Promise<SecteursActiviteType> => {\r\n  const data = await (await fetch(ENDPOINT+\"secteurs/\"+id)).json();\r\n  return data;\r\n  \r\n};\r\n\r\nexport const updateSecteurActivite = async (secteur: SecteursActiviteType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  console.log(secteur);\r\n  const {_id, ...secteurToEdit} = secteur;\r\n  var updated= await fetch(ENDPOINT+ \"secteurs/\"+ secteur._id, {\r\n    method: 'put', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(secteurToEdit) // Envoie du data en format JSON \r\n   })\r\n    \r\n\r\n    return updated.json();\r\n}\r\n\r\nexport const addSecteurActivite = async (secteur: SecteursActiviteType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  console.log(secteur);\r\n  const {_id, ...secteurToAdd} = secteur;\r\n  \r\n  var added = await fetch(ENDPOINT+ \"secteurs/\"+secteur._id, {\r\n    method: 'post', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(secteurToAdd) // Envoie du data en format JSON \r\n   })\r\n\r\n    return added.json();\r\n}\r\n\r\n\r\nexport const fetchUtilisateurs = async (): Promise<UtilisateursType[]> => {\r\n  const data = await (await fetch(ENDPOINT+\"utilisateurs\")).json();\r\n  return data;\r\n  \r\n};\r\n\r\nexport const fetchUtilisateur = async (id: string): Promise<UtilisateursType> => {\r\n  const data = await (await fetch(ENDPOINT+\"utilisateurs/\"+id)).json();\r\n  return data;\r\n  \r\n};\r\n\r\n\r\nexport const updateUtilisateur = async (user: UtilisateursType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  const {_id, ...userToEdit} = user;\r\n  var updated= await fetch(ENDPOINT+ \"utilisateurs/\"+user._id, {\r\n    method: 'put', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu  \r\n    },\r\n    body: JSON.stringify(userToEdit) // Envoie du data en format JSON \r\n   })\r\n  \r\n    return updated.json();\r\n}\r\n\r\nexport const addUtilisateur = async (utilisateur: UtilisateursType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  console.log(utilisateur);\r\n  const {_id, ...utilisateurToAdd} = utilisateur;\r\n  var added= await fetch(ENDPOINT+ \"utilisateurs/\"+ utilisateur._id, {\r\n    method: 'post', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(utilisateurToAdd) // Envoie du data en format JSON \r\n   })\r\n\r\n    return added.json();\r\n}\r\n","export default __webpack_public_path__ + \"static/media/demande.ba6633a2.jpg\";","export default __webpack_public_path__ + \"static/media/offre.343d1d6c.jpg\";","//fonctions callback de connexion et déconnexion\r\nconst dashboardAuth={\r\n    signIn (cb:()=> void){\r\n        setTimeout(cb,100);\r\n    },\r\n    signOut (cb:()=> void){\r\n        setTimeout(cb,100);\r\n    },\r\n};\r\n\r\nexport default dashboardAuth;","import { useState } from 'react';\r\n\r\nimport { UtilisateursType } from '../../Types';\r\nimport dashboardAuth from './dashboardAuth';\r\n\r\nexport interface IUseAuthProvider {\r\n    signIn: (user: UtilisateursType) => void;\r\n    signOut: () => void;\r\n    user: null | UtilisateursType;\r\n}\r\n\r\n//Provider d'authentication\r\nconst useAuthProvider =() : IUseAuthProvider =>{\r\n    const [user, setUser] = useState<null |UtilisateursType>(null);\r\n\r\n    \r\n\r\n    const signIn = (user: UtilisateursType) =>{\r\n        dashboardAuth.signIn(()=>{\r\n            setUser(user);\r\n            //history.push('/dashboard');\r\n            \r\n        })\r\n    };\r\n    const signOut = () =>{\r\n        dashboardAuth.signOut(()=>{\r\n            setUser(null);\r\n            //Cookies.remove(user);\r\n        })\r\n    };\r\n\r\n    return {\r\n        user,\r\n        signIn, \r\n        signOut\r\n    }\r\n};\r\n\r\nexport default useAuthProvider;","import { createContext } from 'react';\r\n\r\nimport { IUseAuthProvider } from './useAuthProvider';\r\nimport useAuthProvider from './useAuthProvider';\r\n\r\nexport const AuthContext = createContext<IUseAuthProvider | null>(null);\r\n\r\n//Provider d'authentication\r\nconst AuthProvider: React.FC = ({ children }) => {\r\n    const auth = useAuthProvider();\r\n    return <AuthContext.Provider value={auth}> {children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthProvider;","import { useContext } from 'react';\r\n\r\nimport { AuthContext } from './AuthProvider';\r\n\r\n//context authentication\r\nconst useAuth=()=> useContext(AuthContext);\r\nexport default useAuth;","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { useHistory } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nimport { AccessLevel, Appel } from '../Enum';\r\nimport imgDemande from '../images/demande.jpg';\r\nimport imgOffre from '../images/offre.jpg';\r\nimport useAuth from './auth/useAuth';\r\n\r\n\r\n\r\ntype Props = {\r\n    type: Appel,\r\n    toast?:()=>void\r\n};\r\n\r\n\r\n\r\nconst AppelAction: React.FC<Props> =({type, toast})=>{\r\n    const history = useHistory();\r\n    const auth = useAuth();\r\n    //MediaQueries\r\n    const theme = useTheme();\r\n    const matchesMD = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const handlePublierOffre=()=>{\r\n       if(auth?.user && auth?.user?.NiveauAcces !== AccessLevel.stagiaire){\r\n        history.push('/dashboard/newOffre')\r\n       }  else if(auth?.user && auth?.user?.NiveauAcces === AccessLevel.stagiaire){\r\n        console.log('here')\r\n\r\n        toast && toast();\r\n        }\r\n        else{\r\n            console.log('here')\r\n\r\n            toast && toast();\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const handlePublierDemande=()=>{\r\n        if(auth?.user && auth?.user?.NiveauAcces !== AccessLevel.entreprise){\r\n            history.push('/dashboard/NewDemande');\r\n        } else if(auth?.user && auth?.user?.NiveauAcces === AccessLevel.entreprise){\r\n            toast && toast();\r\n        }\r\n        else{\r\n            console.log('here')\r\n            toast && toast();\r\n            history.push('/login');\r\n        }\r\n     }\r\n\r\n    return(\r\n        <Wrapper >\r\n        <Grid container>\r\n            {type===Appel.OFFRE ?  \r\n            <Grid item  xs={12} sm={12} md={6}  \r\n                style={{backgroundColor: '#4d6d81', paddingTop: matchesMD? '20px': '0',paddingBottom: matchesMD? '20px': '0'}} \r\n                className='zoneText'>\r\n                \r\n                <Grid container  alignContent='center' direction='column'>\r\n                    <Grid item xs={9} >\r\n                        <Typography variant={matchesMD? 'h4': 'h3'} style={{fontWeight: 'bold', color: 'white'}}>Pourquoi publier une offre de stage?</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={9} style={{marginTop: '5px', marginBottom: '15px'}}>\r\n                        <Typography style={{color: 'Gainsboro'}}>Lorem Ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={9} style={{marginBottom: '25px'}}>\r\n                        <li><span>Lorem Ipsum dolor sit amet</span></li>\r\n                        <li><span>Consectetur adipiscing elit</span></li>\r\n                        <li><span>Ut enim ad minim veniam</span></li>\r\n                    </Grid>\r\n                    <Grid item xs={9} >\r\n                        <Button variant=\"contained\" size=\"medium\"  style={{borderRadius: '0',textTransform: 'none'}}\r\n                        onClick={handlePublierOffre}\r\n                        >\r\n                                Publier une offre de stage maintenant!\r\n                        </Button>\r\n                    </Grid>\r\n                       \r\n                </Grid>\r\n            </Grid>\r\n            : null}\r\n            \r\n            <Grid item  xs={12} sm={12} md={6} >\r\n            {\r\n                type===Appel.DEMANDE ?\r\n                <Image src={imgDemande} fluid alt=\"demande de stage\" style={{width: '100%'}}/> :\r\n                <Image src={imgOffre} fluid alt=\"offre de stage\" style={{width: '100%'}}/> \r\n            }\r\n            </Grid>\r\n            {type===Appel.DEMANDE ?  \r\n            <Grid item xs={12} sm={12} md={6} style={{backgroundColor: '#4d6d81', paddingTop: matchesMD? '20px': '0',paddingBottom: matchesMD? '20px': '0'}} \r\n            className='zoneText'>\r\n                    <Grid container alignContent='center' direction='column'>\r\n                        <Grid item xs={9}>\r\n                            <Typography variant={matchesMD? 'h4': 'h3'} style={{fontWeight: 'bold', color: 'white'}}>Pourquoi publier une demande de stage?</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={9} style={{marginTop: '5px', marginBottom: '15px'}} >\r\n                            <Typography style={{color: 'Gainsboro'}}>Lorem Ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={9}  style={{marginBottom: '25px'}}>\r\n                            <li><span>Lorem Ipsum dolor sit amet</span></li>\r\n                            <li><span>Consectetur adipiscing elit</span></li>\r\n                            <li><span>Ut enim ad minim veniam</span></li>\r\n                        </Grid>\r\n                        <Grid item xs={9} >\r\n                            <Button variant=\"contained\" size=\"medium\" style={{borderRadius: '0',textTransform: 'none'}}\r\n                            onClick={handlePublierDemande}\r\n                            >\r\n                                    Publier une demande de stage maintenant!\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n            </Grid>\r\n            : null}\r\n        </Grid>\r\n        \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default AppelAction;\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.zoneText{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    \r\n}\r\n\r\nli { color: dodgerblue; } /* bullet */\r\nli span { color: white; } /* text */\r\n\r\nbutton{\r\n    background-color: dodgerblue;\r\n    color: white;\r\n}\r\n\r\nbutton:hover{\r\n    color: black;\r\n}\r\n    \r\n`","import { Button, Card, CardActions, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport useAuth from './auth/useAuth';\r\n\r\nimport { fetchUtilisateur, updateOffreDemande } from '../Api';\r\nimport { Appel, AccessLevel } from '../Enum';\r\nimport { OffresDemandesType, UtilisateursType } from '../Types';\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n    type: Appel,\r\n    offreDemande?: OffresDemandesType |undefined,\r\n    cardType?: string,\r\n    toast?: (text: string) => void,\r\n};\r\n\r\n\r\nconst CardDernieresAnnonces: React.FC<Props> =({type,offreDemande,cardType, toast})=>{\r\n    const [auteur, setAuteur] = useState<UtilisateursType | undefined>(undefined);\r\n    const history= useHistory();\r\n    const auth = useAuth();\r\n\r\n    useEffect(()=>{\r\n        offreDemande && getAuteur(offreDemande.Auteur);\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n      //fetch l'auteur dans l'api\r\n    const getAuteur = async (id: string) => {\r\n        let auteur : UtilisateursType| undefined = await fetchUtilisateur(id);\r\n        //console.log(auteur);\r\n        setAuteur(auteur);\r\n    }\r\n\r\n   //retourne le nom d'entreprise si c'est une offre sinon ça retourne la ville de la demande de stage\r\n    const getAuteurNom = (auteur:UtilisateursType)=>{\r\n        let auteurNom = type==='offre' ? auteur.NomEntreprise : auteur.Ville;\r\n        return auteurNom;\r\n    }\r\n\r\n    //retourne le logo de l'entreprise\r\n    const getLogo = (auteur:UtilisateursType)=>{\r\n        return auteur.Logo;\r\n    }\r\n\r\n    const handlePostulerContacter =()=>{\r\n        if(auth?.user?.NiveauAcces===AccessLevel.stagiaire && type===Appel.OFFRE){\r\n            let dejaPostule=offreDemande?.Communications.find(communication=>communication.EnvoyeParID===auth?.user?._id);\r\n            \r\n            let communication= {\r\n                Date: new Date(),\r\n                EnvoyeParID: auth.user._id,\r\n                Message: 'Postulation',\r\n                NbMessages: 0,\r\n            };\r\n\r\n            if(!dejaPostule){\r\n                offreDemande?.Communications.push(communication);\r\n                offreDemande && updateOffreDemande(offreDemande);\r\n            }  else {\r\n                toast && toast('Vous avez déjà postulé pour cette offre de stage.');\r\n            } \r\n\r\n        } else if ( auth?.user?.NiveauAcces===AccessLevel.entreprise && type===Appel.DEMANDE){\r\n            console.log('contacter');\r\n        } else if (type===Appel.OFFRE && auth?.user?.NiveauAcces!==AccessLevel.stagiaire) {\r\n            toast && toast('Vous devez être connecté en tant que stagiaire pour pouvoir postuler sur une offre de stage.');\r\n            if(!auth?.user)\r\n            history.push('/login');\r\n        } else {\r\n            toast && toast(\"Vous devez être connecté en tant qu'entreprise pour pouvoir contacter le candidat d'une demande de stage.\");\r\n            if(!auth?.user)\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div data-testid='CardDerniersAnnonces' style={{width: '100%'}}>\r\n        <Wrapper className='card' style={{height: '100%'}} >\r\n            \r\n            {offreDemande!==undefined && \r\n            <Card style={{height: '100%',display: 'flex',flexDirection: 'column', justifyContent:'space-between'}}>\r\n                <CardHeader \r\n                    title={offreDemande.Titre}\r\n                    subheader={auteur? getAuteurNom(auteur) : null}\r\n                    \r\n                />\r\n                <CardContent>\r\n                    <Grid container alignItems='center'>\r\n                        <Grid item xs={type===Appel.OFFRE && cardType!== 'mini' ? 8:12}>\r\n                            <Typography className='descriptionEllipsis'>\r\n                                {offreDemande.Description}\r\n                            </Typography> \r\n                        </Grid >\r\n                        { type===Appel.OFFRE && cardType!== 'mini' &&\r\n                        <Grid item xs={12} sm={12} md={4} >\r\n                            <Grid container justify='center' >\r\n                                {auteur && <Typography variant='h2'>{getLogo(auteur)}</Typography>}\r\n                            </Grid>\r\n                        </Grid>\r\n                        }\r\n                    </Grid>\r\n                    \r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button \r\n                        className='actionbutton1 button' \r\n                        variant=\"contained\" \r\n                        size=\"medium\"\r\n                        name='buttonDetails'\r\n                        onClick={()=>history.push({\r\n                            pathname: type===Appel.OFFRE ? '/accueil/offre/'+offreDemande._id : '/accueil/demande/'+offreDemande._id ,\r\n                            state: {data: offreDemande}\r\n                        })}\r\n                    >\r\n                        Détails\r\n                    </Button>\r\n                    <Button className='actionbutton2 button'  variant=\"contained\" size=\"medium\" name='buttonPostuler' \r\n                    onClick={handlePostulerContacter}\r\n                    >\r\n                        {type===Appel.OFFRE? 'Postuler' : 'Contacter candidat'}\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n            }\r\n        </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDernieresAnnonces;\r\n\r\nexport const Wrapper = styled.div`\r\nwidth: 100%;\r\n\r\n.actionbutton1{\r\n    color: dodgerblue;\r\n    background-color: white;\r\n} \r\n\r\n.actionbutton2 {\r\n    color: white;\r\n    background-color: dodgerblue;\r\n}\r\n.button {\r\n    text-transform: none;\r\n    border-radius: 0px;\r\n}\r\n\r\n.descriptionEllipsis{\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2; //Limite le text à 2 lignes\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.MuiTypography-h2{\r\n    font-weight: bold\r\n}\r\n\r\n`","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchOffresDemandes } from '../Api';\r\nimport { Appel } from '../Enum';\r\nimport { OffresDemandesType } from '../Types';\r\nimport CardDernieresAnnonces from './CardDernieresAnnonces';\r\n\r\n\r\ntype Props = {\r\n    type: Appel,\r\n    toast: (text: string)=> void\r\n};\r\n\r\nconst DerniersAnnonces: React.FC<Props> =({type, toast})=>{\r\n    const history= useHistory();\r\n\r\n    const [offresDemandes, setOffresDemandes] = useState<OffresDemandesType[]>([]);\r\n    \r\n    useEffect(()=>{\r\n        getOffresDemandes();\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n\r\n      //fetch les offres/demandes dans l'api\r\n    const getOffresDemandes = async () => {\r\n        let offresDemandes : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        \r\n        // Filtre les offres valides\r\n        offresDemandes = offresDemandes.filter(offreDemande=> offreDemande.Supprime===false && offreDemande.Type===type && offreDemande.Valide );\r\n        // Trié par date\r\n        offresDemandes.sort((a, b) => (a.DateParution < b.DateParution) ? 1 : -1);\r\n         // Garde juste les 4 offre vedettes les plus récentes\r\n         offresDemandes.splice(4,offresDemandes.length-4);\r\n\r\n        console.log(offresDemandes);\r\n        setOffresDemandes(offresDemandes);  \r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Grid container direction='column' alignItems=\"center\" style={{textAlign:'center', paddingTop: '50px'}}>\r\n                {type===Appel.OFFRE ?\r\n                <Grid item xs={10} sm={8} md={6} lg={4}>\r\n                    <Typography variant=\"h4\">Tu es à la recherche de ton stage de fin d'etudes?</Typography>\r\n                </Grid> :\r\n                <Grid item xs={10} sm={8} md={6} lg={4}>\r\n                    <Typography variant=\"h4\">Votre futur stagiaire se trouve ici.</Typography>\r\n                </Grid>\r\n                }    \r\n                <Grid item xs={10} sm={8} md={6} lg={3}>\r\n                    <Typography style={{color: 'darkgray'}}>Lorem Ipsum dolor sit amet, consectetur adipiscing elit, \r\n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justify='center' >\r\n                <Grid item xs={11} lg={9} style={{marginTop: '50px'}}>\r\n                    <Grid container spacing={2} justify='center' >\r\n                {offresDemandes.length>0 &&\r\n                    offresDemandes.map(offreDemande=>(\r\n                        <Grid item xs={12} sm={6} md={4} lg={3} key={offreDemande._id}>\r\n                            <Grid container style={{height: '100%'}} >\r\n                                <CardDernieresAnnonces type={type} offreDemande={offreDemande} cardType='mini' toast={(text)=>toast(text)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                ))\r\n                }\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        \r\n            <Grid container justify='center' style={{marginTop: '50px',paddingBottom: '50px'}}>\r\n                <Grid item>\r\n                    <Button variant=\"contained\" size=\"medium\" color=\"secondary\" style={{borderRadius: '0',textTransform: 'none'}}\r\n                    onClick={()=>{\r\n                        history.push('/accueil/'+type+'s');\r\n                    }}\r\n                    >\r\n                    {type===Appel.OFFRE? 'Voir toutes les offres de stage' : 'Voir tous les candidats'} \r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DerniersAnnonces;\r\n\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color: WhiteSmoke;\r\n    \r\n`","import { Grid, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchOffresDemandes } from '../Api';\r\nimport { Appel } from '../Enum';\r\nimport { OffresDemandesType } from '../Types';\r\nimport CardDernieresAnnonces from './CardDernieresAnnonces';\r\n\r\n\r\ntype Props = {\r\n    toast: (text: string)=> void\r\n};\r\n\r\n//section offre vedettes\r\nconst OffresVedettes: React.FC<Props> =({toast})=>{\r\n    const [offres, setOffres] = useState<OffresDemandesType[]>([]);\r\n    \r\n    useEffect(()=>{\r\n        getOffres();\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getOffres = async () => {\r\n        let offres : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        // Filtre les offres, valides et vedettes\r\n        offres = offres.filter(offre=> offre.Supprime===false && offre.Type==='offre' && offre.Valide && offre.Vedette);\r\n        // Trié par date\r\n        offres.sort((a, b) => (a.DateParution < b.DateParution) ? 1 : -1);\r\n        // Garde juste les 4 offre vedettes les plus récentes\r\n        offres.splice(4,offres.length-4);\r\n        console.log(offres);\r\n        setOffres(offres);  \r\n    }\r\n    \r\n    return(\r\n        <Wrapper >\r\n\r\n            <Grid container style={{position: 'relative'}} justify='center'>\r\n            <div className=\"corner-ribbon top-right sticky golden\" >VEDETTE</div>\r\n\r\n                <Grid item>\r\n                    <Grid container  justify='center' >\r\n                        <Grid item xs={6} sm={8}>\r\n                            <Typography variant='h3' className='title'>Offres de stage</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify='center' >\r\n                        <Grid item xs={11} lg={9}>\r\n                            <Grid container spacing={2} alignItems='stretch' justify='center'>\r\n                                {offres.length>0 && offres.map(offre=>(\r\n                                    <Grid item key={offre._id} xs={12} sm={6} md={3} lg={3} xl={3} style={{display: 'flex'}}>\r\n                                        <CardDernieresAnnonces type={Appel.OFFRE}  offreDemande={offre} cardType='mini' toast={(text)=>toast(text)}/>\r\n                                    </Grid>\r\n                                ))}\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n       </Wrapper>\r\n    )\r\n}\r\n\r\nexport default OffresVedettes;\r\n\r\nexport const Wrapper = styled.div`\r\nbackground-color: #4d6d81;\r\npadding-bottom: 50px;\r\noverflow: hidden;\r\n.title{\r\n    color: #e1e1e1;\r\n    font-weight: bold;\r\n    padding-top: 50px;\r\n    padding-bottom: 50px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n}\r\n.corner-ribbon.top-right{\r\n  top: 25px;\r\n  right: -50px;\r\n  left: auto;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n  overflow: hidden;\r\n}\r\n\r\n.corner-ribbon{\r\n  width: 200px;\r\n  background: #e43;\r\n  position: absolute;\r\n  top: 25px;\r\n  left: -50px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  letter-spacing: 1px;\r\n  color: #f0f0f0;\r\n  font-weight: bold;\r\n  transform: rotate(-45deg);\r\n  -webkit-transform: rotate(-45deg);\r\n}\r\n\r\n.corner-ribbon.golden {\r\n    background: radial-gradient(ellipse farthest-corner at right bottom, #FEDB37 20%, #FDB931 25%, #9f7928 60%, #8A6E2F 50%, transparent 20%), \r\n    radial-gradient(ellipse farthest-corner at left top, #FFFFFF 5%, #FFFFAC 15%, #D1B464 35%, #5d4a1f 95%, #5d4a1f 90%);\r\n}\r\n\r\n`","\r\n\r\nimport { Appel } from '../Enum';\r\nimport AppelAction from './AppelAction';\r\nimport DerniersAnnonces from './DerniersAnnonces';\r\nimport OffresVedettes from './OffresVedettes';\r\n\r\ntype Props = {\r\n    toast:(toastType: string)=> any\r\n};\r\n\r\nconst Accueil: React.FC<Props> =({toast})=>{\r\n\r\n    return(\r\n        <div data-testid=\"accueil-1\">\r\n            <OffresVedettes toast={(text)=>toast(text)}/>\r\n            <DerniersAnnonces type={Appel.OFFRE} toast={(text)=>toast(text)}/> \r\n            <AppelAction type={Appel.OFFRE} toast={toast('offre')}/>\r\n            <DerniersAnnonces type={Appel.DEMANDE} toast={(text)=>toast(text)}/> \r\n            <AppelAction type={Appel.DEMANDE} toast={toast('demande')}/> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accueil;","export default __webpack_public_path__ + \"static/media/apropos1.8c2860e5.jpg\";","export default __webpack_public_path__ + \"static/media/apropos2.2ed51f7e.jpg\";","export default __webpack_public_path__ + \"static/media/apropos3.2a7285aa.jpg\";","export default __webpack_public_path__ + \"static/media/apropos4.5c5c4159.jpg\";","import { Container, Grid, Typography } from '@material-ui/core';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport apropos1 from '../images/apropos1.jpg';\r\nimport apropos2 from '../images/apropos2.jpg';\r\nimport apropos3 from '../images/apropos3.jpg';\r\nimport apropos4 from '../images/apropos4.jpg';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\nconst APropos: React.FC<Props> =()=>{\r\n    return(\r\n        <Container>\r\n            <Grid container style={{marginTop: '50px'}}>\r\n                <Grid item xs={5}>\r\n                    <Typography id='apropos-1' variant='h1' style={{fontWeight: 'bold'}}><GestureIcon style={{fontSize: '5rem'}} />eStage</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <p id='apropos-1'>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2} style={{marginTop: '50px'}}>\r\n                <Grid item xs={4}>\r\n                    <Grid container direction='column' spacing={4}>\r\n                        <Grid item>\r\n                            <Image src={apropos1} rounded fluid/>\r\n\r\n                        </Grid>\r\n                        <Grid item style={{textAlign: 'center'}}><Typography variant='h5' style={{fontWeight: 'bold'}}>FORCES AVENIR</Typography></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet. </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <Grid container direction='column' spacing={4}>\r\n                        <Grid item> <Image src={apropos2} rounded fluid /></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}><Typography variant='h5' style={{fontWeight: 'bold'}}>CENTRE AIDE</Typography></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet. </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <Grid container direction='column' spacing={4}>\r\n                        <Grid item> <Image src={apropos3} rounded fluid/></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}><Typography variant='h5' style={{fontWeight: 'bold'}}>FONDATION RÉNO-JOUET</Typography></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet. </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style={{marginTop: '50px',marginBottom: '50px'}} >\r\n                <Grid item xs={12} className='dashBackgroundColor' style={{padding: '50px', color:'white'}} >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>     \r\n                            <Typography variant='h5'>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \r\n                            Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</p>   \r\n                         </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <Image src={apropos4} rounded fluid/>\r\n                        </Grid>\r\n                        <Grid item xs={6} style={{backgroundColor: '#404040', color: 'white',padding: '50px', display: 'flex', alignItems:'center'}}>\r\n                            <Typography variant='h5'> Donec magna dolor, venenatis ac hendrerit eget, gravida vulputate arcu. Nullam mollis eros quis nulla dapibus sagittis. \r\n                            Morbi tortor nisi, volutpat et nulla ac, vulputate aliquet erat. Sed sit amet augue arcu.</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>    \r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default APropos;","import Cookies from 'js-cookie';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nimport useAuth from './useAuth';\r\n\r\ninterface PrivateRouteProps extends RouteProps { \r\n\r\n}\r\n\r\n\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({...rest}) => { \r\nconst auth = useAuth();\r\n//console.log(auth?.user);\r\n\r\nconst token = Cookies.get('connected');\r\n\r\n//Private route utilisé pour le dashboard - si pas d'utilisateur connecté redirectionne vers login sinon ça continue son chemin \r\n    if (auth?.user === null && !token) return <Redirect to=\"/login\" /> \r\n    else return (\r\n            <Route {...rest} />\r\n        )\r\n    \r\n};\r\n\r\nexport default PrivateRoute;","import { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nimport useAuth from './useAuth';\r\n\r\ninterface ProtectedLoginProps extends RouteProps { \r\n\r\n}\r\n\r\nconst ProtectedLogin: React.FC<ProtectedLoginProps> = ({...rest}) => {\r\n     \r\nconst auth = useAuth();\r\n//console.log(auth?.user);\r\n\r\n// utilisé quand on essaye d'acceder au composant login, si utilisateur la route redirectionne vers le dashboard sinon ça va vers login\r\nif (auth?.user !== null) {\r\n       return <Redirect to=\"/dashboard/\" />;\r\n}\r\nreturn (\r\n        <Route {...rest} />\r\n    )\r\n    \r\n};\r\n\r\nexport default ProtectedLogin;","import { Container, Typography } from '@material-ui/core';\r\n\r\n\r\ntype Props = {\r\n    \r\n};\r\n//page statique\r\nconst Confidentialite: React.FC<Props> =()=>{\r\n    return(\r\n        <Container className='politique'>\r\n            <Typography variant='h3' >Politique et confidentialité!</Typography>  \r\n            <p>\r\n                Lorem ipsum odor amet, consectetuer adipiscing elit. Ac purus in massa egestas mollis varius;\r\n                dignissim elementum. Mollis tincidunt mattis hendrerit dolor eros enim, nisi ligula ornare.\r\n                Hendrerit parturient habitant pharetra rutrum gravida porttitor eros feugiat. Mollis elit\r\n                sodales taciti duis praesent id. Consequat urna vitae morbi nunc congue.\r\n            </p>\r\n            <p>\r\n                Non etiam tempor id arcu magna ante eget. Nec per posuere cubilia cras porttitor condimentum\r\n                orci suscipit. Leo maecenas in tristique, himenaeos elementum placerat. Taciti rutrum nostra,\r\n                eget cursus velit ultricies. Quam molestie tellus himenaeos cubilia congue vivamus ultricies.\r\n                Interdum praesent ut penatibus fames eros ad consectetur sed.\r\n            </p>\r\n            <ul>\r\n                <li>\r\n                    Leo maecenas in tristique\r\n                </li>\r\n                <li>\r\n                Taciti rutrum nostra,\r\n                eget cursus velit ultricies.\r\n                </li>\r\n                <li>\r\n                Mollis elit\r\n                sodales taciti duis praesent id.\r\n                </li>\r\n                <li>\r\n                Non etiam tempor id arcu magna ante eget.\r\n                </li>\r\n            </ul>        \r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit tenetur minus quisquam dolores unde dolor natus cumque, tempore velit, ex vero eum quia inventore, necessitatibus dicta ut sint quaerat blanditiis?\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis incidunt aliquid assumenda ab, dicta, totam ut quibusdam voluptas error dolorem dolorum. Deserunt similique sequi nam accusantium quia harum exercitationem numquam?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe minima, quos provident quo recusandae sit. Illo rem culpa, sint laborum dolorum dolores reiciendis quaerat odio ipsum recusandae quidem fugit asperiores.\r\n            \r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro blanditiis quisquam vitae odit. Dolore magni nam architecto optio exercitationem ducimus nostrum dolorum, asperiores veniam officia consequuntur, eius aperiam consectetur eaque.\r\n                Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quod nam et praesentium alias beatae mollitia rem eos consequuntur fuga nemo, tenetur quisquam nisi neque. Doloribus eaque debitis minus velit cumque.\r\n            </p>\r\n            <p>\r\n                Lorem, ipsum dolor sit amet consectetur adipisicing elit. Animi, quod neque. Sunt, nemo non, iure harum repudiandae esse consequatur hic ab perspiciatis officiis, culpa accusantium fugiat velit magnam molestiae a!\r\n            </p>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default Confidentialite;","import { Grid, Typography } from '@material-ui/core';\r\nimport Cookies from 'js-cookie';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport useAuth from './auth/useAuth';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\nconst Footer: React.FC<Props> =()=>{\r\n    const location = useLocation(); \r\n    const token = Cookies.get('connected');\r\n\r\n    const auth = useAuth();\r\n    return(\r\n        <Wrapper location={location}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={3} lg={3} xl={3}>\r\n                    <Typography>© 2021 <Link to=\"/accueil\" className='eStage'>eStage</Link> - Projet de Synthèse - Eric Martins</Typography>  \r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={9} lg={9} xl={9}>\r\n                    <Grid container justify='flex-end'>\r\n                        <Grid item className='item'>\r\n                            <Typography>\r\n                                <Link to=\"/accueil\" style={{fontWeight: location.pathname=== \"/accueil\" ? 'bold': 'normal' }}>\r\n                                    Accueil\r\n                                </Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item className='item'>\r\n                            <Typography>\r\n                                <Link to=\"/apropos\" style={{fontWeight: location.pathname=== \"/apropos\" ? 'bold': 'normal' }}>\r\n                                    À propos\r\n                                </Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item className='item'>\r\n                            <Typography>\r\n                                <Link to=\"/confidentialite\" style={{fontWeight: location.pathname=== \"/confidentialite\" ? 'bold': 'normal' }}>\r\n                                    Confidentialité\r\n                                </Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item className='item'>\r\n                            <Typography>\r\n                                <Link to=\"/contact\" style={{fontWeight: location.pathname=== \"/contact\" ? 'bold': 'normal' }}>\r\n                                    Nous Joindre\r\n                                </Link>\r\n                                </Typography>\r\n                        </Grid>\r\n                        {\r\n                        !location.pathname.includes(\"/dashboard\") && token &&\r\n                            <Grid item className='item'>{auth?.user !== null ? <Typography><Link to=\"/dashboard\" style={{color: 'dodgerblue'}}>Dashboard</Link></Typography> :null}</Grid>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\nexport const Wrapper = styled.div<{location: any}>`\r\n    \r\n    padding: 30px 50px 30px 50px;\r\n    background-color: WhiteSmoke;\r\n    a{\r\n        color: black\r\n    }\r\n    a:hover{\r\n        font-weight: bold !important;\r\n        text-decoration: none;\r\n    }\r\n    .eStage{\r\n        color:  #3e99df;\r\n    }\r\n    ${({ location }) => location.pathname.includes(\"/dashboard\") && `\r\n    background: #3e99df;\r\n    color: white;\r\n    a{\r\n        color: white\r\n    }\r\n    .eStage{\r\n        color:  black;\r\n    }\r\n  `}\r\n\r\n  .item{\r\n      margin-left: 20px\r\n  }\r\n    \r\n`","import Cookies from 'js-cookie';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\n//import useAuth from './useAuth';\r\n\r\ninterface ProtectedDashboardProps extends RouteProps { \r\n\r\n}\r\n\r\nconst ProtectedDashboardRoutes: React.FC<ProtectedDashboardProps> = ({...rest}) => {\r\n     \r\n//const auth = useAuth();\r\n//console.log(auth?.user);\r\n\r\nconst token = Cookies.get('connected');\r\n\r\nif (!token ) {\r\n       return <Redirect to=\"/accueil\"></Redirect>;\r\n}\r\nreturn (\r\n        <Route {...rest} />\r\n    )\r\n    \r\n};\r\n\r\nexport default ProtectedDashboardRoutes;","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { faEdit, faTimes, faUserGraduate } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, CardActions, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateur, updateOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType, UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n    demande: OffresDemandesType,\r\n    type?: 'attente' | undefined\r\n    updateDemande: ()=> void\r\n};\r\n\r\n\r\n\r\nconst DashboardCardDemande: React.FC<Props> =({demande, type,updateDemande})=>{\r\n    const [auteur, setAuteur] = useState<UtilisateursType | undefined>(undefined);\r\n    const [update, setUpdate]= useState<String>('');\r\n    const [updatingOffreDemande, setUpdatingOffreDemande] = useState(true);\r\n    const auth = useAuth();\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        getAuteur(demande.Auteur);\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n      //cherche l'auteur de la demande\r\n    const getAuteur = async (id: string) => {\r\n        let auteur : UtilisateursType| undefined = await fetchUtilisateur(id);\r\n        //console.log(auteur);\r\n        setAuteur(auteur);\r\n    }\r\n\r\n    //formatation de la date au format YYYY-MM-dd\r\n    function formatDate(date:Date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    const getAuteurNom = (auteur:UtilisateursType)=>{\r\n        return (auteur.Prenom+\" \"+auteur.Nom)\r\n    }\r\n\r\n    //mise à jour de la demande\r\n    async function offreDemandeUpdated(offreDemande:OffresDemandesType) {\r\n        try {\r\n            const update=await updateOffreDemande(offreDemande);\r\n            setUpdatingOffreDemande(true);\r\n            setUpdate(update);  \r\n            updateDemande();\r\n        \r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingOffreDemande(false);\r\n            \r\n        }\r\n      }\r\n\r\n      //suppression de la demande\r\n    const handleSupprimer = () =>{\r\n        demande.Supprime=true;\r\n        offreDemandeUpdated(demande);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Card style={{borderTop: '5px solid #3e99df', backgroundColor: '#F0F0F0', \r\n            marginBottom: '20px', padding: '10px',position: 'relative'}}>\r\n            {demande.Valide===false && type!=='attente' && <div className=\"corner-ribbon top-right sticky red\">Pas validé</div>}\r\n                <CardContent>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} >\r\n                            <Grid container justify='space-between' style={{borderBottom: '2px solid black'}}>\r\n                                <Grid item>\r\n                                    <Grid container spacing={2}> \r\n                                        <Grid item style={{paddingBottom: '0px'}}><FontAwesomeIcon icon={faUserGraduate} size=\"2x\"  /></Grid>\r\n                                        <Grid item><Typography variant='h5' style={{fontWeight: 'bold'}}>{demande.Titre}</Typography></Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                   <b>Publié le:</b> {formatDate(demande.DateParution)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Grid container>\r\n                                <Grid item xs={12} md={type!=='attente' ? 7: 12}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                           {\r\n                                           auth?.user?.NiveauAcces!==AccessLevel.entreprise && auteur? getAuteurNom(auteur) : null\r\n                                           }\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Ville:</b> {demande.Ville}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Établissement scolaire:</b>  {auteur? auteur.Ecole : null}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {type!=='attente' &&\r\n                                <Grid item xs={12} md={5}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Formation:</b> {demande.ProgrammesSuivi}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Début:</b> {formatDate(demande.DateDebut)}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Fin:</b> {formatDate(demande.DateFin)}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {demande.Description}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify='space-between'>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\"   \r\n                                style={{textTransform: 'none', borderRadius: '0'}}\r\n                                onClick={()=>history.push({\r\n                                    pathname: '/dashboard/details/demande/'+demande._id,\r\n                                    state: {data: demande, auteur: auteur}\r\n                                })}\r\n                                >\r\n                                Détails\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {type==='attente' ?\r\n                            <Grid container spacing={1}>\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\" size=\"small\" \r\n                                    style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#fa6980', color: 'white'}}\r\n                                    onClick={handleSupprimer}\r\n                                    >\r\n                                        Refuser\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button \r\n                                        variant=\"outlined\" \r\n                                        size=\"small\"  \r\n                                        style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#72a84a', color: 'white'}}\r\n                                        onClick={()=>{\r\n                                            demande.Valide=true;\r\n                                            offreDemandeUpdated(demande);\r\n                                        }}\r\n                                    >\r\n                                        Accepter\r\n                                    </Button>\r\n                                </Grid>\r\n                                </Grid>\r\n                            :\r\n                            auth?.user?.NiveauAcces!==AccessLevel.entreprise && \r\n                                <Grid container spacing={1}>\r\n                                    <Grid item>\r\n                                        <Button variant=\"outlined\" size=\"small\" \r\n                                        startIcon={  <FontAwesomeIcon icon={faEdit} color=\"green\"/>}\r\n                                        style={{textTransform: 'none', borderRadius: '0'}}\r\n                                        onClick={()=>history.push({\r\n                                            pathname: '/dashboard/edit/demande/'+demande._id,\r\n                                            state: {data: demande}\r\n                                        })}\r\n                                        >\r\n                                            Modifier\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button \r\n                                            variant=\"outlined\" \r\n                                            size=\"small\"  \r\n                                            startIcon={<FontAwesomeIcon icon={faTimes} color=\"red\"/>}\r\n                                            style={{textTransform: 'none', borderRadius: '0'}}\r\n                                            onClick={handleSupprimer}\r\n                                        >\r\n                                            Supprimer\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card> \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashboardCardDemande;\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.corner-ribbon.top-right{\r\n  top: 25px;\r\n  right: -60px;\r\n  left: auto;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n}\r\n\r\n\r\n.corner-ribbon{\r\n  width: 200px;\r\n  background: #e43;\r\n  position: absolute;\r\n  top: 25px;\r\n  left: -50px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  letter-spacing: 1px;\r\n  color: #f0f0f0;\r\n  transform: rotate(-45deg);\r\n  -webkit-transform: rotate(-45deg);\r\n}\r\n.corner-ribbon.blue{background: #39d;}\r\n.corner-ribbon.white{background: #f0f0f0; color: #555;}\r\n.corner-ribbon.black{background: #333;}\r\n.corner-ribbon.grey{background: #999;}\r\n.corner-ribbon.blue{background: #39d;}\r\n.corner-ribbon.green{background: #2c7;}\r\n.corner-ribbon.turquoise{background: #1b9;}\r\n.corner-ribbon.purple{background: #95b;}\r\n.corner-ribbon.red{background: #e43;}\r\n.corner-ribbon.orange{background: #e82;}\r\n.corner-ribbon.yellow{background: #ec0;}\r\n`","import { faEdit, faTimes, faUserTie } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, CardActions, CardContent, FormControlLabel, Grid, Switch, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateur, updateOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType, UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n    offre: OffresDemandesType\r\n    type?: 'attente' | undefined\r\n    updateOffre: ()=>void\r\n};\r\n\r\n\r\n\r\nconst DashboardCardOffre: React.FC<Props> =({offre,type, updateOffre})=>{\r\n    const history = useHistory();\r\n\r\n    const [auteur, setAuteur] = useState<UtilisateursType | undefined>(undefined);\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [update, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingOffreDemande, setUpdatingOffreDemande] = useState(true);\r\n    const auth = useAuth();\r\n\r\n    useEffect(()=>{\r\n        getAuteur(offre.Auteur);\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n      \r\n\r\n    const getAuteur = async (id: string) => {\r\n        let auteur : UtilisateursType| undefined = await fetchUtilisateur(id);\r\n        //console.log(auteur);\r\n        setAuteur(auteur);\r\n    }\r\n\r\n    function formatDate(date:Date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    const getAuteurNom = (auteur:UtilisateursType)=>{\r\n        return (auteur.NomEntreprise)\r\n    }\r\n\r\n    async function offreDemandeUpdated(offreDemande:OffresDemandesType) {\r\n        try {\r\n            const update=await updateOffreDemande(offreDemande);\r\n            setUpdatingOffreDemande(true);\r\n            setUpdate(update); \r\n             \r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingOffreDemande(false);\r\n            updateOffre();\r\n        }\r\n      }\r\n    \r\n      const handleVedette =()=>{\r\n        offre.Vedette=!offre.Vedette;\r\n        offreDemandeUpdated(offre);\r\n    }\r\n\r\n    const handleSupprimer =()=>{\r\n        offre.Supprime=true;\r\n        offreDemandeUpdated(offre);\r\n    }\r\n\r\n    const handleValider  =()=>{\r\n        offre.Valide=true;\r\n        offreDemandeUpdated(offre);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n\r\n            <Card style={{borderTop: '5px solid #aab14a', \r\n            backgroundColor: '#F0F0F0', padding: '10px',position: 'relative'}} >\r\n             {offre.Valide===false && type!=='attente' && <div className=\"corner-ribbon top-right sticky red\">Pas validé</div>}\r\n                <CardContent>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} >\r\n                            <Grid container justify='space-between' style={{borderBottom: '2px solid black'}}>\r\n                                <Grid item>\r\n                                    <Grid container spacing={2}> \r\n                                        <Grid item style={{paddingBottom: '0px'}}><FontAwesomeIcon icon={faUserTie} size=\"2x\"  /></Grid>\r\n                                        <Grid item><Typography variant='h5' style={{fontWeight: 'bold'}}>{offre.Titre}</Typography></Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>   \r\n                                    <b>Publié le:</b> {formatDate(offre.DateParution)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Grid container>\r\n                                <Grid item xs={type!=='attente' ? 7: 12}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                           {auteur? getAuteurNom(auteur) : null}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Ville:</b> {offre.Ville}\r\n                                        </Grid>\r\n                                        {type==='attente' &&\r\n                                        <Grid item xs={12} style={{marginTop: '1.5rem'}}>\r\n                                        </Grid>\r\n                                        }\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {type!=='attente' &&\r\n                                <Grid item xs={5}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Début:</b> {formatDate(offre.DateDebut)}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Fin:</b> {formatDate(offre.DateFin)}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {offre.Description}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify='space-between'>\r\n                        <Grid item >\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\"   \r\n                                style={{textTransform: 'none', borderRadius: '0'}}\r\n                                onClick={()=>history.push({\r\n                                    pathname: '/dashboard/details/offre/'+offre._id,\r\n                                    state: {data: offre,auteur: auteur}\r\n                                })}\r\n                                >\r\n                                Détails\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        {type==='attente' ?\r\n                            <Grid container spacing={1}>\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\" size=\"small\" \r\n                                    style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#fa6980', color: 'white'}}\r\n                                    onClick={handleSupprimer}\r\n                                    >\r\n                                        Refuser\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button \r\n                                        variant=\"outlined\" \r\n                                        size=\"small\"  \r\n                                        style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#72a84a', color: 'white'}}\r\n                                        onClick={handleValider}\r\n                                    >\r\n                                        Accepter\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            :\r\n                            auth?.user?.NiveauAcces!==AccessLevel.stagiaire && \r\n                            <Grid container spacing={1} >\r\n                                {auth?.user?.NiveauAcces===AccessLevel.admin && \r\n                                <Grid item>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                        <Switch\r\n                                            checked={offre.Vedette}\r\n                                            onChange={handleVedette}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                        }\r\n                                        label=\"Vedette\"\r\n                                    />\r\n                                </Grid>\r\n                                }\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\" size=\"small\" \r\n                                    startIcon={  <FontAwesomeIcon icon={faEdit} color=\"green\"/>}\r\n                                    style={{textTransform: 'none', borderRadius: '0'}}\r\n                                    onClick={()=>history.push({\r\n                                        pathname: '/dashboard/edit/offre/'+offre._id,\r\n                                        state: {data: offre}\r\n                                    })}\r\n                                    >\r\n                                        Modifier\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button \r\n                                        variant=\"outlined\" \r\n                                        size=\"small\"  \r\n                                        startIcon={<FontAwesomeIcon icon={faTimes} color=\"red\"/>}\r\n                                        style={{textTransform: 'none', borderRadius: '0'}}\r\n                                        onClick={handleSupprimer}\r\n                                    >\r\n                                        Supprimer\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card> \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashboardCardOffre;\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.corner-ribbon.top-right{\r\n  top: 25px;\r\n  right: -50px;\r\n  left: auto;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n}\r\n\r\n\r\n.corner-ribbon{\r\n  width: 200px;\r\n  background: #e43;\r\n  position: absolute;\r\n  top: 25px;\r\n  left: -50px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  letter-spacing: 1px;\r\n  color: #f0f0f0;\r\n  transform: rotate(-45deg);\r\n  -webkit-transform: rotate(-45deg);\r\n}\r\n\r\n.corner-ribbon.red{background: #e43;}\r\n\r\n`","import { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchOffresDemandes } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport DashboardCardDemande from './DashboardCardDemande';\r\nimport DashboardCardOffre from './DashboardCardOffre';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\nconst DashboardAccueil: React.FC<Props> =()=>{\r\n    const auth = useAuth();\r\n\r\n    const [offres, setOffres] = useState<OffresDemandesType[]>([]);\r\n    const [demandes, setDemandes] = useState<OffresDemandesType[]>([]);\r\n\r\n    useEffect(()=>{\r\n        getDemandes();\r\n        getOffres();\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n      //cherche les demandes dans l'api\r\n    const getDemandes = async () => {\r\n        let demandes : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        demandes = demandes.filter(demande=> demande.Supprime===false && demande.Type==='demande' && demande.Valide===false);\r\n        //console.log(demandes);\r\n        setDemandes(demandes);  \r\n    }\r\n\r\n    //cherche les offres dans l'api\r\n    const getOffres = async () => {\r\n        let offres : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        offres = offres.filter(offre=> offre.Supprime===false && offre.Type==='offre' && offre.Valide===false);\r\n        console.log(offres);\r\n        setOffres(offres);  \r\n    }\r\n\r\n   \r\n    //affiche les offres et demandes à être validés par l'admin\r\n    return(\r\n        <> {auth?.user?.NiveauAcces === AccessLevel.admin ?\r\n           <Grid container spacing={2}>\r\n                { (demandes.length>0 || offres.length>0)?\r\n                <Grid item xs={12}>\r\n                    <Typography variant='h3'> \r\n                        En attende de validation \r\n                    </Typography>\r\n                </Grid> :\r\n                <Grid item xs={12}>\r\n                    <Typography variant='h3'> \r\n                        Rien à valider\r\n                    </Typography>\r\n                </Grid>\r\n                }\r\n                {demandes.length>0 ?\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container alignItems='center' spacing={2}> \r\n                        <Grid item>\r\n                            <Typography variant={'h6'}>Demandes de stage</Typography>\r\n                        </Grid>\r\n                        <Grid item style={{position: 'relative'}}>\r\n                            <FontAwesomeIcon icon={faLevelDownAlt}  size='lg' style={{position: 'absolute', top: '10px'}}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                            demandes.map(demande=>(\r\n                                <DashboardCardDemande demande={demande} type='attente' key={demande._id} updateDemande={getDemandes} />\r\n                            ))\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> :null\r\n                }\r\n                {offres.length>0 ?\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container alignItems='center' spacing={2}> \r\n                        <Grid item>\r\n                            <Typography variant={'h6'}>Offres de stage</Typography>\r\n                        </Grid>\r\n                        <Grid item style={{position: 'relative'}}>\r\n                            <FontAwesomeIcon icon={faLevelDownAlt}  size='lg'  style={{position: 'absolute', top: '10px'}}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                            offres.map(offre=>(\r\n                                <DashboardCardOffre offre={offre} type='attente' key={offre._id} updateOffre={getOffres}/>            \r\n                            ))\r\n                            }\r\n                        </Grid>\r\n                    </Grid> \r\n                </Grid> :\r\n                null\r\n                }\r\n            </Grid>:\r\n            <Grid item xs={12}>\r\n            <Typography variant='h4'>{auth?.user && <><b>Bonjour</b> {auth?.user.Prenom + \" \" + auth?.user.Nom +'!'}</>}</Typography>\r\n            </Grid> \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardAccueil;","import { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Grid, InputAdornment, TextField, Typography } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchOffresDemandes } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport DashboardCardDemande from './DashboardCardDemande';\r\n\r\ntype Props = {\r\n};\r\n\r\n\r\n\r\nconst DashboardDemandes: React.FC<Props> =()=>{\r\n    const auth = useAuth();\r\n    const [demandes, setDemandes] = useState<OffresDemandesType[]>([]);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n\r\n    useEffect(()=>{\r\n        getDemandes();\r\n      \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n      //cherche les demandes dans l'api\r\n    const getDemandes = async () => {\r\n        let demandes : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        //filtre les demandes qui ne sont pas supprimées\r\n        demandes = demandes.filter(demande=> demande.Supprime===false && demande.Type==='demande');\r\n        console.log(demandes);\r\n        //si stagiaire tu vois tes demandes\r\n        if(auth?.user?.NiveauAcces===AccessLevel.stagiaire){\r\n            demandes= demandes.filter(demande=> demande.Auteur===auth?.user?._id)\r\n        } \r\n        //si entreprises tu vois toutes les demandes validées\r\n        if(auth?.user?.NiveauAcces===AccessLevel.entreprise){\r\n            demandes= demandes.filter(demande=> demande.Valide===true)\r\n        } \r\n        setDemandes(demandes);  \r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n         <Grid container spacing={3} alignItems='center' justify='center' >\r\n                <Grid item>\r\n                    <TextField\r\n                        label=\"Rechercher\"\r\n                        onChange={(e)=>setRecherche(e.target.value)}\r\n                        InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                    <SearchIcon/>\r\n                            </InputAdornment>\r\n                        )\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n               \r\n             </Grid>\r\n         <Grid container alignItems='center' spacing={3} > \r\n            <Grid item xs={12}>    \r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <Typography variant={'h4'}> {auth?.user?.NiveauAcces===AccessLevel.stagiaire? 'Mes demandes de stage':'Demandes de stage'}</Typography>\r\n                    </Grid>\r\n                    <Grid item style={{position: 'relative'}}>\r\n                        <FontAwesomeIcon icon={faLevelDownAlt}  size='lg'  style={{position: 'absolute', top: '30px'}} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                {demandes ? \r\n                    demandes.map(demande =>(\r\n                        demande.Titre.toLowerCase().includes(recherche.toLowerCase())&&\r\n                        <DashboardCardDemande demande={demande} key={demande._id} updateDemande={()=>getDemandes()}/>\r\n                        \r\n                        )):null\r\n                    }\r\n            </Grid>\r\n        </Grid>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardDemandes;","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchRegions } from '../../Api';\r\nimport { RegionsType } from '../../Types';\r\n\r\ntype Props = {\r\n    selectedId?: string,\r\n    onChange: (region: RegionsType | undefined)=>void\r\n};\r\n\r\nconst SelectRegion: React.FC<Props> =({selectedId,onChange})=>{\r\n    const [regions, setRegions] = useState<RegionsType[]>([]);\r\n    const [selectedRegion, setSelectedRegion] = useState<string|undefined>(selectedId);\r\n\r\n    useEffect(()=>{\r\n        getRegions();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getRegions = async () => {\r\n        let regions : RegionsType[] | undefined = await fetchRegions();\r\n        regions = regions.filter(region=> region.Supprime===false);\r\n        regions.sort((a, b) => (a.Name > b.Name) ? 1 : -1);\r\n\r\n        setRegions(regions);  \r\n    }\r\n\r\n\r\n    const handleChange =(event: React.ChangeEvent<{ value: unknown }>)=>{\r\n        setSelectedRegion(event.target.value as string);\r\n        let region= regions.find(region=> region._id===event.target.value);\r\n        onChange(region);\r\n    }\r\n\r\n\r\n    return(\r\n        <div data-testid=\"region-1\">\r\n        {regions.length > 0?\r\n        <FormControl style={{minWidth: '200px'}} >\r\n            <TextField\r\n                variant=\"outlined\"\r\n                label=\"Region\"\r\n                id=\"selectRegion\"\r\n                defaultValue={selectedId}\r\n                required\r\n                select\r\n                fullWidth\r\n                value={selectedRegion||\"\"}\r\n                onChange={(event)=>handleChange(event)}\r\n                margin='dense'\r\n                \r\n            >\r\n                {\r\n                regions.map(region => (\r\n                    <MenuItem key={region._id} value={region._id}>{region.Name}</MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl> : null\r\n        }\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default SelectRegion;\r\n\r\n","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\n\r\ntype Props = {\r\n    selected?: string,\r\n    onChange: (secteur: string | undefined)=>void\r\n};\r\n\r\nconst SelectRemuneration: React.FC<Props> =({selected, onChange})=>{\r\n    const [remuneration, setRemuneration] = React.useState(selected||'');\r\n    const remunerations=['Oui', 'Non', 'À la discrétion de l’entreprise']\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setRemuneration(event.target.value as string);\r\n    onChange(event.target.value as string)\r\n  };\r\n\r\n    return(\r\n        <>\r\n        <FormControl style={{minWidth: '200px'}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                label=\"Rémunération\"\r\n                id=\"selectRemuneration\"\r\n                required\r\n                select\r\n                fullWidth\r\n                value={remuneration}\r\n                onChange={(event)=>handleChange(event)}\r\n                margin='dense'\r\n            >\r\n                {\r\n                remunerations.map((remuneration,index) => (\r\n                    <MenuItem key={index+remuneration} value={remuneration}>{remuneration}</MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl>\r\n\r\n      \r\n       </>\r\n    )\r\n}\r\n\r\nexport default SelectRemuneration;","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchSecteursActivite } from '../../Api';\r\nimport { SecteursActiviteType } from '../../Types';\r\n\r\ntype Props = {\r\n    selectedId?: string,\r\n    onChange: (secteur: SecteursActiviteType | undefined)=>void\r\n};\r\n\r\nconst SelectSecteur: React.FC<Props> =({selectedId,onChange})=>{\r\n    const [secteurs, setSecteurs] = useState<SecteursActiviteType[]>([]);\r\n    const [selectedSecteur, setSelectedsecteur] = useState<string|undefined>(selectedId);\r\n\r\n    useEffect(()=>{\r\n        getsecteurs();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getsecteurs = async () => {\r\n        let secteurs : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n        secteurs = secteurs.filter(secteur=> secteur.Supprime===false);\r\n        secteurs.sort((a, b) => (a.Titre > b.Titre) ? 1 : -1);\r\n\r\n        setSecteurs(secteurs);  \r\n    }\r\n\r\n\r\n    const handleChange =(event: React.ChangeEvent<{ value: unknown }>)=>{\r\n        setSelectedsecteur(event.target.value as string);\r\n        let secteur= secteurs.find(secteur=> secteur._id===event.target.value);\r\n        onChange(secteur);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        {secteurs.length > 0?\r\n        <FormControl style={{minWidth: '200px', maxWidth: '350px'}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                select\r\n                label=\"Secteur\"\r\n                id=\"selectsecteur\"\r\n                defaultValue={selectedId}\r\n                value={selectedSecteur||\"\"}\r\n                onChange={(event)=>handleChange(event)}\r\n                required\r\n                margin='dense'\r\n\r\n            >\r\n                {\r\n                secteurs.map(secteur => (\r\n                    <MenuItem key={secteur._id} value={secteur._id}><div style={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>{secteur.Titre}</div></MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl> : null\r\n        }\r\n       </>\r\n    )\r\n}\r\n\r\nexport default SelectSecteur;\r\n","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchUtilisateurs } from '../../Api';\r\nimport { UtilisateursType } from '../../Types';\r\n\r\ntype Props = {\r\n    selectedId?: string,\r\n    onChange: (stagiaire: UtilisateursType | undefined)=>void\r\n};\r\n\r\nconst SelectStagiaire: React.FC<Props> =({selectedId,onChange})=>{\r\n    const [stagiaires, setStagiaires] = useState<UtilisateursType[]>([]);\r\n    const [selectedStagiaire, setSelectedStagiaire] = useState<string|undefined>(selectedId);\r\n\r\n    useEffect(()=>{\r\n        getstagiaires();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getstagiaires = async () => {\r\n        let stagiaires : UtilisateursType[] | undefined = await fetchUtilisateurs();\r\n        stagiaires = stagiaires.filter(stagiaire=> stagiaire.Supprime===false && stagiaire.Entreprise===false && stagiaire.NiveauAcces!==999);\r\n        stagiaires.sort((a, b) => (a.Nom > b.Nom) ? 1 : -1);\r\n\r\n        setStagiaires(stagiaires);  \r\n    }\r\n\r\n\r\n    const handleChange =(event: React.ChangeEvent<{ value: unknown }>)=>{\r\n        setSelectedStagiaire(event.target.value as string);\r\n        let stagiaire= stagiaires.find(stagiaire=> stagiaire._id===event.target.value);\r\n        onChange(stagiaire);\r\n    }\r\n\r\n    const NomComplet =(stagiaire:UtilisateursType )=>{\r\n        return stagiaire.Prenom+\" \"+stagiaire.Nom;\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {stagiaires.length > 0?\r\n        <FormControl style={{minWidth: '200px'}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                select\r\n                label=\"Stagiaire\"\r\n                id=\"selectstagiaire\"\r\n                required\r\n                defaultValue={selectedId}\r\n                value={selectedStagiaire||\"\"}\r\n                onChange={(event)=>handleChange(event)}\r\n                margin='dense'\r\n\r\n            >\r\n                {\r\n                stagiaires.map(stagiaire => (\r\n                    <MenuItem key={stagiaire._id} value={stagiaire._id}>{NomComplet(stagiaire)}</MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl> : null\r\n        }\r\n       </>\r\n    )\r\n}\r\n\r\nexport default SelectStagiaire;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { differenceInWeeks } from 'date-fns';\r\nimport { useState } from 'react';\r\n\r\nimport { updateOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\nimport SelectRemuneration from '../Selects/SelectRemuneration';\r\nimport SelectSecteur from '../Selects/SelectSecteur';\r\nimport SelectStagiaire from '../Selects/SelectStagiaire';\r\n\r\ntype Props = {\r\n    history: any\r\n};\r\n\r\nconst DashboardEditDemande: React.FC<Props> =({history})=>{\r\n    const auth = useAuth();\r\n    const [demande, setDemande]=useState<OffresDemandesType>(history.location.state.data) \r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingDemande, setUpdatingDemande] = useState(true);\r\n  \r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDemande({ ...demande, [event.target.name]: event.target.value });   \r\n    };\r\n    \r\n    //sauvegarde les changements  \r\n    const handleSave = async (e:any)=>{\r\n        e.preventDefault();\r\n        demandeUpdated();\r\n    }\r\n   \r\n    //mise à jour de la demande\r\n    async function demandeUpdated() {\r\n        try {\r\n            setUpdatingDemande(true);\r\n            const update=await updateOffreDemande(demande);\r\n          setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingDemande(false);\r\n            history.push('/dashboard/demandes')\r\n\r\n        }\r\n      }\r\n\r\n      console.log(demande.DureeSemaines)\r\n\r\n    return(\r\n        <form onSubmit={(e)=>handleSave(e)}>\r\n        <Grid container spacing={2} alignItems='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h4'>Éditer la demande de stage</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Titre\"\r\n                        label=\"Titre\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='Titre'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.Titre}\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item>\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectStagiaire onChange={(selected)=>setDemande({ ...demande, Auteur: selected?._id||'' })} selectedId={demande.Auteur}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            <Grid item >\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectSecteur onChange={(selected)=>setDemande({ ...demande, SecteurActivite: selected?._id ||'' })} selectedId={demande.SecteurActivite}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={10}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Ville\"\r\n                        label=\"Ville\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='Ville'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.Ville}\r\n                    />\r\n            </Grid>\r\n            <Grid item>\r\n                <SelectRegion onChange={(selected)=>setDemande({ ...demande, Region: selected?._id||''  })} selectedId={demande.Region}/>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de début\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={demande.DateDebut}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>{\r\n                            var date: Date|null= selected;\r\n                            setDemande({ ...demande, \r\n                                DateDebut: selected || new Date(), \r\n                                DureeSemaines: differenceInWeeks( new Date(demande?.DateFin), date || new Date())\r\n                            }); \r\n                        }}\r\n                        margin='dense'\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de fin\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={demande.DateFin}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>{\r\n                            var date: Date|null= selected;\r\n                            setDemande({ ...demande, \r\n                                DateFin: selected || new Date(), \r\n                                DureeSemaines: differenceInWeeks(date || new Date(), new Date(demande?.DateDebut))\r\n                            }); \r\n                        }}\r\n                        margin='dense'\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"input-duree\"\r\n                    placeholder=\"Durée en semaines\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    margin='dense'\r\n                    type='text'\r\n                    //defaultValue={demande.DureeSemaines.toString()+ ' semaines'}\r\n                    value={demande.DureeSemaines+ ' semaines'}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-heures\"\r\n                        label=\"Nombre d'heures par semaine\"\r\n                        type='number'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='NombreHeuresSemaine'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.NombreHeuresSemaine}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                    <SelectRemuneration onChange={(remu)=>setDemande({...demande, Remuneration: remu||''})} selected={demande.Remuneration}/>\r\n            </Grid>\r\n           \r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Description poste recherche\"\r\n                    required\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    name='Description'\r\n                    onChange={handleChange}\r\n                    margin='dense'\r\n                    defaultValue={demande.Description}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Programmes suivis\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='ProgrammesSuivi'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.ProgrammesSuivi}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Competences acquises\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        name='CompetencesAcquises'\r\n                        required\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.CompetencesAcquises}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Informations suplementaires\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        name='InformationsSuplementaires'\r\n                        rows={3}\r\n                        onChange={handleChange}\r\n                        defaultValue={demande.InformationsSuplementaires}\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Autres formations\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        name='AutresFormations'\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange}\r\n                        defaultValue={demande.AutresFormations}\r\n\r\n                    />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Grid container justify='flex-start' spacing={2}>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Sauvegarder la demande</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            onClick={()=>history.push('/dashboard/demandes')}\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Annuler</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> \r\n            </Grid>\r\n        </Grid>                  \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardEditDemande;\r\n","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchUtilisateurs } from '../../Api';\r\nimport { UtilisateursType } from '../../Types';\r\n\r\ntype Props = {\r\n    selectedId?: string,\r\n    onChange: (entreprise: UtilisateursType | undefined)=>void\r\n};\r\n\r\nconst SelectEntreprise: React.FC<Props> =({selectedId,onChange})=>{\r\n    const [entreprises, setEntreprises] = useState<UtilisateursType[]>([]);\r\n    const [selectedEntreprise, setSelectedEntreprise] = useState<string|undefined>(selectedId);\r\n\r\n    useEffect(()=>{\r\n        getEntreprises();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getEntreprises = async () => {\r\n        let entreprises : UtilisateursType[] | undefined = await fetchUtilisateurs();\r\n        entreprises = entreprises.filter(entreprise=> entreprise.Supprime===false && entreprise.Entreprise);\r\n        entreprises.sort((a, b) => (a.NomEntreprise > b.NomEntreprise) ? 1 : -1);\r\n\r\n        setEntreprises(entreprises);  \r\n    }\r\n\r\n\r\n    const handleChange =(event: React.ChangeEvent<{ value: unknown }>)=>{\r\n        setSelectedEntreprise(event.target.value as string);\r\n        let entreprise= entreprises.find(entreprise=> entreprise._id===event.target.value);\r\n        onChange(entreprise);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        {entreprises.length > 0?\r\n        <FormControl style={{minWidth: '200px'}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                label=\"Entreprise\"\r\n                select\r\n                fullWidth\r\n                defaultValue={selectedId}\r\n                id=\"selectEntreprise\"\r\n                value={selectedEntreprise||\"\"}\r\n                onChange={(event)=>handleChange(event)}\r\n                required\r\n                margin='dense'\r\n\r\n            >\r\n                {\r\n                entreprises.map(entreprise => (\r\n                    <MenuItem key={entreprise._id} value={entreprise._id}>{entreprise.NomEntreprise}</MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl> : null\r\n        }\r\n       </>\r\n    )\r\n}\r\n\r\nexport default SelectEntreprise;\r\n\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { differenceInWeeks } from 'date-fns';\r\nimport { useState } from 'react';\r\n\r\nimport { updateOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectEntreprise from '../Selects/SelectEntreprise';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\nimport SelectSecteur from '../Selects/SelectSecteur';\r\n\r\ntype Props = {\r\n    history: any\r\n};\r\n\r\n\r\n\r\nconst DashboardEditOffre: React.FC<Props> =({history})=>{\r\n    const auth = useAuth();\r\n    const [offre, setOffre]=useState<OffresDemandesType>(history.location.state.data) \r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingOffre, setUpdatingOffre] = useState(true);\r\n   \r\n    //changements des fields\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setOffre({ ...offre, [event.target.name]: event.target.value });   \r\n    }\r\n\r\n    //changements des boutons switch \r\n    const handleChangeCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setOffre({ ...offre, [event.target.name]: event.target.checked });\r\n    }; \r\n\r\n    //sauvegarde l'offre\r\n    const handleSave = async (e:any)=>{\r\n        e.preventDefault();\r\n        OffreUpdated();\r\n    }\r\n    \r\n    //mise à jour de l'offre\r\n    async function OffreUpdated() {\r\n        try {\r\n            setUpdatingOffre(true);\r\n            const update=await updateOffreDemande(offre);\r\n          setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingOffre(false);\r\n            history.push('/dashboard/offres')\r\n\r\n        }\r\n      }\r\n  \r\n    return(\r\n    <form onSubmit={(e)=>handleSave(e)}>\r\n        <Grid container spacing={3} alignItems='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h4'>Éditer l'offre de stage</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Titre\"\r\n                        label=\"Titre\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        defaultValue={offre.Titre}\r\n                        name='Titre'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item>\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectEntreprise onChange={(selected)=>setOffre({ ...offre, Auteur: selected?._id || '' })} selectedId={offre.Auteur}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            <Grid item >\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectSecteur onChange={(selected)=>setOffre({ ...offre, SecteurActivite: selected?._id || ''})} selectedId={offre.SecteurActivite}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={10}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Ville\"\r\n                        label=\"Ville\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='Ville'\r\n                        defaultValue={offre.Ville}\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item>\r\n                <SelectRegion onChange={(selected)=>setOffre({ ...offre, Region: selected?._id||'' })} selectedId={offre.Region}/>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de début\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={offre.DateDebut}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>{\r\n                            var date: Date|null= selected;\r\n                            setOffre({ ...offre, \r\n                                DateDebut: selected || new Date(), \r\n                                DureeSemaines: differenceInWeeks( new Date(offre?.DateFin), date || new Date())\r\n                            }); \r\n                        }}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de fin\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={offre.DateFin}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>{\r\n                            var date: Date|null= selected;\r\n                            setOffre({ ...offre, \r\n                                DateFin: selected || new Date(), \r\n                                DureeSemaines: differenceInWeeks(date || new Date(), new Date(offre?.DateDebut))\r\n                            }); \r\n                        }}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"input-duree\"\r\n                    placeholder=\"Durée en semaines\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    type='string'\r\n                    value={offre.DureeSemaines+ ' semaines'}\r\n                    margin='dense'\r\n\r\n                />\r\n            </Grid>\r\n        \r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-heures\"\r\n                        label=\"Nombre d'heures par semaine\"\r\n                        type='number'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        defaultValue={offre.NombreHeuresSemaine}\r\n                        name='NombreHeuresSemaine'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={5}> \r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}><b>Possibilité d'emploi aprés le stage?</b> </Grid>\r\n                    <Grid item> Non</Grid>\r\n                    <Grid item>\r\n                        <Switch\r\n                                    checked={offre.EmploiApresStage}\r\n                                    onChange={handleChangeCheck}\r\n                                    name=\"EmploiApresStage\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                        </Grid>\r\n                    <Grid item>Oui</Grid>\r\n                </Grid>    \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Description\"\r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue={offre.Description}\r\n                    variant=\"outlined\"\r\n                    name='Description'\r\n                    onChange={handleChange}\r\n                    margin='dense'\r\n\r\n                />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Competences recherches\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        defaultValue={offre.CompetencesRecherches}\r\n                        name='CompetencesRecherches'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Informations suplementaires\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        name='InformationsSuplementaires'\r\n                        defaultValue={offre.InformationsSuplementaires}\r\n                        rows={3}\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Rémunération\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        defaultValue={offre.Remuneration}\r\n                        name='Remuneration'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item > \r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}><b>Offre de stage vedette?</b> </Grid>\r\n                    <Grid item> Non</Grid>\r\n                    <Grid item>\r\n                        <Switch\r\n                                    checked={offre.Vedette}\r\n                                    onChange={handleChangeCheck}\r\n                                    name=\"Vedette\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                        </Grid>\r\n                    <Grid item>Oui</Grid>\r\n                </Grid>    \r\n            </Grid>\r\n            }\r\n            <Grid item xs={12}>\r\n                <Grid container justify='flex-start' spacing={2}>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Sauvegarder l'offre</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            onClick={()=>history.push('/dashboard/offres')}\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Annuler</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> \r\n            </Grid>\r\n        </Grid>                  \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardEditOffre;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable array-callback-return */\r\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Input from '@material-ui/core/Input';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchSecteursActivite, fetchUtilisateur, updateUtilisateur } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { SecteursActiviteType, UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\n\r\ntype Props = {\r\n    history:any,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: '45vw',\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 250,\r\n      maxWidth: '45vw',\r\n    },\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    input: {\r\n        \"&:invalid\": {\r\n          border: \"red solid 2px\"\r\n        }\r\n      }\r\n  }),\r\n);\r\n\r\n\r\nconst DashboardProfil: React.FC<Props> =({history})=>{\r\n\r\nconst classes = useStyles();\r\nconst auth = useAuth();\r\n\r\nconst [user, setUser] = useState<UtilisateursType|null>(null);\r\n\r\nconst [secteursActivites, setSecteursActivites] = useState<SecteursActiviteType[]>([]);\r\nconst [update, setUpdate]= useState<String>('');\r\nconst [updatingUser, setUpdatingUser] = useState(true);\r\n\r\nuseEffect(()=>{\r\n    getSecteursActivites();\r\n    getUser();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n  \r\n  //cherche l'user dans la database\r\n  const getUser= async()=>{\r\n    let id='';\r\n    if(auth?.user!==undefined && auth?.user!==null)\r\n    id = auth?.user._id;\r\n    let user : UtilisateursType | undefined = await fetchUtilisateur(id);\r\n    //console.log(user);\r\n    setUser(user);\r\n} \r\n\r\n//cherche les secteurs d'activité\r\nconst getSecteursActivites = async () => {\r\n    let secteursActivites : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n    setSecteursActivites(secteursActivites);\r\n}\r\n\r\nconst Field = (defaultValue: string, label: string, key: string) => {\r\n    return (\r\n        <TextField\r\n            name={key}\r\n            fullWidth\r\n            id={\"input-\"+label}\r\n            label={label}\r\n            variant=\"outlined\"\r\n            onChange={handleChangeTextField}\r\n            defaultValue={defaultValue}\r\n            margin='dense'\r\n            required\r\n            type={label==='Téléphone'? \"tel\" : label==='Courriel'? 'email' :'text'}\r\n            inputProps={{ className: classes.input,pattern: label==='Téléphone'? \"[0-9]{3}[0-9]{3}[0-9]{4}\": null }}\r\n        />\r\n    )\r\n}\r\n\r\n//changements des textfields (onChange)\r\nconst handleChangeTextField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if(user)\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n    \r\n}\r\n\r\n//retourne les titres des secteurs pour le select\r\nconst getTitres =(ids: string[])=>{\r\n    let titres: string[]=[];\r\n    secteursActivites.map(secteur=> {\r\n        ids.map(id=>{\r\n            if(secteur._id===id)\r\n            titres.push(secteur.Titre);\r\n        })\r\n    })\r\n    return titres;\r\n}\r\n\r\n//sauvergarde les changements\r\nconst handleSave = async (e:any)=>{\r\n    e.preventDefault();\r\n    if(user){\r\n        let userEdited=user;\r\n        userEdited.PremierConnexion=false;\r\n        setUser(userEdited);\r\n\r\n    }\r\n    console.log(user)\r\n    userUpdated();\r\n}\r\n\r\n//mise à jour de l'utilisateur\r\nasync function userUpdated() {\r\n    try {\r\n        if(user) {\r\n        setUpdatingUser(true);\r\n        const update=await updateUtilisateur(user);\r\n        setUpdate(update);\r\n        }\r\n    } catch (e) {\r\n    } finally {\r\n        setUpdatingUser(false);\r\n        history.push({\r\n            pathname: \"/dashboard/update\",\r\n            state: {data: user}\r\n        }); \r\n\r\n    }\r\n  }\r\n\r\n return(\r\n         user?\r\n            <div> \r\n                <form onSubmit={(e)=>handleSave(e)}>\r\n            <Grid container spacing={2}>\r\n                {user.Entreprise?\r\n                <Grid item xs={2}> \r\n                    {Field(user.NomEntreprise, \"Nom de l'entreprise\",'NomEntreprise')}\r\n                </Grid>\r\n                : null}\r\n                <Grid item xs={3}>\r\n                    {Field(user.Prenom, user.Entreprise? 'Prénom de la personne responsable': 'Prénom','Prenom' )}\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    {Field(user.Nom, user.Entreprise? 'Nom de la personne responsable': 'Nom', 'Nom')}    \r\n                </Grid>\r\n                {user.Entreprise?\r\n                <Grid item xs={2}>\r\n                    {Field(user.Logo, \"Logo\", 'Logo')}\r\n                </Grid>\r\n                : null}\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={3}> \r\n                    {Field(user.Adresse, \"Adresse\",'Adresse')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    {Field(user.Ville, \"Ville\", 'Ville')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <SelectRegion selectedId={user.Region} onChange={(region)=>setUser({ ...user, Region: region?._id as string })} />\r\n                    \r\n                </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={3}> \r\n                    {Field(user.Courriel, \"Courriel\", 'Courriel')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    {Field(user.Telephone, \"Téléphone\", 'Telephone')}\r\n                </Grid>\r\n                { user.NiveauAcces !== AccessLevel.admin?\r\n                <Grid item xs={3}>\r\n                    {Field(user.SiteWeb, \"Site web\", 'SiteWeb')}\r\n                </Grid> :null\r\n                }\r\n        </Grid>\r\n        { !user.Entreprise && user.NiveauAcces !== AccessLevel.admin?\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        name='Ecole'\r\n                        fullWidth\r\n                        id=\"input-Ecole\"\r\n                        label='École'\r\n                        variant=\"outlined\"\r\n                        defaultValue={user.Ecole}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12}> \r\n                    <TextField\r\n                        name='CV'\r\n                        fullWidth\r\n                        id=\"input-CV\"\r\n                        label=\"CV\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows='6'\r\n                        defaultValue={user.CV}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        name='MessageMotivation'\r\n                        fullWidth\r\n                        id=\"input-MessageMotivation\"\r\n                        label='Message de motivation'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows='6'\r\n                        defaultValue={user.MessageMotivation}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n        </Grid> :null\r\n        }\r\n         { user.Entreprise?\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-mutiple-chip-label\">Secteurs d'activités</InputLabel>\r\n                        <Select\r\n                        labelId=\"demo-mutiple-chip-label\"\r\n                        id=\"demo-mutiple-chip\"\r\n                        multiple\r\n                        value={user.SecteursActivites}\r\n                        onChange={(e)=>{\r\n                            console.log(e.target.value);\r\n                            setUser({ ...user, SecteursActivites: e.target.value as string[] })                      \r\n                        }}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={(selected) => (\r\n                            <div className={classes.chips}>\r\n                            {(getTitres(selected as string[]) as string[]).map((value) => (\r\n                                <Chip key={value} label={value} className={classes.chip}/>\r\n                            ))}\r\n                            </div>\r\n                        )}\r\n                        MenuProps={MenuProps}\r\n                        >\r\n                        {secteursActivites.map((secteur) => (\r\n                            <MenuItem key={secteur._id} value={secteur._id}>\r\n                                {secteur.Titre}     \r\n                            </MenuItem>\r\n                        ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                        {Field(user.PostesStagiaires, \"Types de postes sensibles à accueillir des stagiaires\", 'PostesStagiaires')}\r\n                </Grid>\r\n               \r\n        </Grid> :null\r\n        }\r\n        <Grid container justify='flex-end' spacing={2} direction='row-reverse'>\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<SaveIcon/>}\r\n                    size=\"small\"\r\n                    type='submit'\r\n                >\r\n                    Save\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={()=>{\r\n                        history.push(\"/dashboard/update\");\r\n\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n        </form>\r\n    </div>:null\r\n    )\r\n}\r\n\r\nexport default DashboardProfil;","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable array-callback-return */\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    Switch,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Input from '@material-ui/core/Input';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchSecteursActivite, updateUtilisateur } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { SecteursActiviteType, UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\n\r\ntype Props = {\r\n    history: any\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: '45vw',\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 250,\r\n      maxWidth: '45vw',\r\n    },\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    input: {\r\n        \"&:invalid\": {\r\n          border: \"red solid 2px\"\r\n        }\r\n      }\r\n  }),\r\n);\r\n\r\n\r\nconst DashboardEditUsers: React.FC<Props> =({history})=>{\r\n\r\nconst classes = useStyles();\r\n  \r\nconst [user, setUser] = useState<UtilisateursType>(history.location.state.data);\r\nconst [secteursActivites, setSecteursActivites] = useState<SecteursActiviteType[]>([]);\r\nconst [update, setUpdate]= useState<String>('');\r\nconst [updatingUser, setUpdatingUser] = useState(true);\r\nconst auth = useAuth();\r\n\r\nuseEffect(()=>{\r\n    getSecteursActivites();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n  \r\n\r\n\r\nconst getSecteursActivites = async () => {\r\n    let secteursActivites : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n    setSecteursActivites(secteursActivites);\r\n}\r\n\r\nconst Field = (defaultValue: string, label: string, key: string) => {\r\n    return (\r\n        <TextField\r\n            name={key}\r\n            fullWidth\r\n            id={\"input-\"+label}\r\n            label={label}\r\n            variant=\"outlined\"\r\n            onChange={handleChangeTextField}\r\n            defaultValue={defaultValue}\r\n            margin='dense'\r\n            type={label==='Téléphone'? \"tel\" : label==='Courriel'? 'email' :'text'}\r\n            inputProps={{ className: classes.input,pattern: label==='Téléphone'? \"[0-9]{3}[0-9]{3}[0-9]{4}\": null }}\r\n        />\r\n    )\r\n}\r\n// onChange des textfields\r\nconst handleChangeTextField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n    \r\n}\r\n// onChange des textfields\r\nconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, [event.target.name]: event.target.checked });\r\n};\r\n\r\n//retourne les titres des secteurs\r\nconst getTitres =(ids: string[])=>{\r\n    let titres: string[]=[];\r\n    secteursActivites.map(secteur=> {\r\n        ids.map(id=>{\r\n            if(secteur._id===id)\r\n            titres.push(secteur.Titre);\r\n        })\r\n    })\r\n    return titres;\r\n}\r\n\r\nconst handleSave = async ()=>{\r\n    userUpdated();\r\n}\r\n\r\n//mise à jour de l'utilisateur\r\nasync function userUpdated() {\r\n    try {\r\n        setUpdatingUser(true);\r\n        const update=await updateUtilisateur(user);\r\n      setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setUpdatingUser(false);\r\n        history.location.pathname==='/dashboard/profil'? history.push(\"/dashboard/accueil\") :\r\n        user.NiveauAcces === 333? history.push('/dashboard/entreprises'):user.NiveauAcces === 111?\r\n        history.push('/dashboard/candidats'): history.push('/dashboard/admins');\r\n    }\r\n  }\r\n\r\n return(\r\n        <>  { auth?.user?.NiveauAcces===AccessLevel.admin ?\r\n            <Grid container>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={user.Valide}\r\n                            onChange={handleChange}\r\n                            color=\"primary\"\r\n                            name=\"Valide\"\r\n                        /> \r\n                    }\r\n                    label=\"Validé\"\r\n                />  \r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={user.Actif}\r\n                            onChange={handleChange}\r\n                            color=\"primary\"\r\n                            name=\"Actif\"\r\n                        /> \r\n                    }\r\n                    label=\"Actif\"\r\n                /> \r\n            </Grid> :null\r\n            }\r\n            <Grid container spacing={2}>\r\n                {user.Entreprise?\r\n                <Grid item xs={2}> \r\n                    {Field(user.NomEntreprise, \"Nom de l'entreprise\",'NomEntreprise')}\r\n                </Grid>\r\n                : null}\r\n                <Grid item xs={3}>\r\n                    {Field(user.Prenom, user.Entreprise? 'Prénom de la personne responsable': 'Prénom','Prenom' )}\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    {Field(user.Nom, user.Entreprise? 'Nom de la personne responsable': 'Nom', 'Nom')}    \r\n                </Grid>\r\n                {user.Entreprise?\r\n                <Grid item xs={2}>\r\n                    {Field(user.Logo, \"Logo\", 'Logo')}\r\n                </Grid>\r\n                : null}\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={3}> \r\n                    {Field(user.Adresse, \"Adresse\",'Adresse')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    {Field(user.Ville, \"Ville\", 'Ville')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <SelectRegion selectedId={user.Region} onChange={(region)=>setUser({ ...user, Region: region?._id as string })}/>\r\n                </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={3}> \r\n                    {Field(user.Courriel, \"Courriel\", 'Courriel')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    {Field(user.Telephone, \"Téléphone\", 'Telephone')}\r\n                </Grid>\r\n                { user.NiveauAcces !== AccessLevel.admin?\r\n                <Grid item xs={3}>\r\n                    {Field(user.SiteWeb, \"Site web\", 'SiteWeb')}\r\n                </Grid> :null\r\n                }\r\n        </Grid>\r\n        { !user.Entreprise && user.NiveauAcces !== AccessLevel.admin?\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        name='Ecole'\r\n                        fullWidth\r\n                        id=\"input-Ecole\"\r\n                        label='École'\r\n                        variant=\"outlined\"\r\n                        defaultValue={user.Ecole}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12}> \r\n                    <TextField\r\n                        name='CV'\r\n                        fullWidth\r\n                        id=\"input-CV\"\r\n                        label=\"CV\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows='6'\r\n                        defaultValue={user.CV}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        name='MessageMotivation'\r\n                        fullWidth\r\n                        id=\"input-MessageMotivation\"\r\n                        label='Message de motivation'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows='6'\r\n                        defaultValue={user.MessageMotivation}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n        </Grid> :null\r\n        }\r\n         { user.Entreprise?\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-mutiple-chip-label\">Secteurs d'activités</InputLabel>\r\n                        <Select\r\n                        labelId=\"demo-mutiple-chip-label\"\r\n                        id=\"demo-mutiple-chip\"\r\n                        multiple\r\n                        value={user.SecteursActivites}\r\n                        onChange={(e)=>{\r\n                            //console.log(e.target.value);\r\n                            setUser({ ...user, SecteursActivites: e.target.value as string[] })                      \r\n                        }}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={(selected) => (\r\n                            <div className={classes.chips}>\r\n                            {(getTitres(selected as string[]) as string[]).map((value) => (\r\n                                <Chip key={value} label={value} className={classes.chip}/>\r\n                            ))}\r\n                            </div>\r\n                        )}\r\n                        MenuProps={MenuProps}\r\n                        >\r\n                        {secteursActivites.map((secteur) => (\r\n                            <MenuItem key={secteur._id} value={secteur._id}>\r\n                                {secteur.Titre}     \r\n                            </MenuItem>\r\n                        ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                \r\n               \r\n        </Grid> :null\r\n        }\r\n        <Grid container justify='flex-end' spacing={2} direction='row-reverse'>\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<SaveIcon/>}\r\n                    size=\"small\"\r\n                    onClick={()=>handleSave()}\r\n                >\r\n                    Save\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={()=>{\r\n                        history.location.pathname==='/dashboard/profil'? history.push(\"/dashboard/accueil\") :\r\n                        user.NiveauAcces === 333? history.push('/dashboard/entreprises'):user.NiveauAcces === 111?\r\n                        history.push('/dashboard/candidats'): history.push('/dashboard/admins');\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default DashboardEditUsers;","import { faEdit, faLevelDownAlt, faTimes, faUserGraduate, faUserNinja, faUserTie } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { updateUtilisateur } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n  history: any\r\n};\r\n\r\nconst DashBoardFicheUser: React.FC<Props> =({history})=>{\r\n    const auth = useAuth();\r\n    const [user, ] = useState<UtilisateursType>(history.location.state.data);\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [update, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingUser, setUpdatingUser] = useState(true);\r\n\r\n    const handleEdit = (user: UtilisateursType) =>{\r\n\r\n        history.push({\r\n            pathname: '/dashboard/edit/user/'+user._id,\r\n            state: {data: user}\r\n        });\r\n    }\r\n\r\n    //mise à jour de l'utilisateur dans la DB après le delete (onClick)\r\n    async function userUpdated(user:UtilisateursType) {\r\n        try {\r\n            const update=await updateUtilisateur(user);\r\n            setUpdatingUser(true);\r\n            setUpdate(update); \r\n             \r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingUser(false);\r\n            history.push(user.NiveauAcces===AccessLevel.admin? '/dashboard/admins' :\r\n            user.NiveauAcces===AccessLevel.stagiaire? '/dashboard/candidats': '/dashboard/entreprises'\r\n            )\r\n        }\r\n      }\r\n    \r\n      //suppression (onClick) de l'utilisateur\r\n    const handleSupprimer =()=>{\r\n        user.Supprime=true;\r\n        userUpdated(user);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n          <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2} alignItems='flex-end'> \r\n                        <Grid item>\r\n                            <Typography variant='h4'>\r\n                                {user?.NiveauAcces===AccessLevel.entreprise?\"Fiche de l'entreprise!\":\r\n                                user?.NiveauAcces===AccessLevel.stagiaire ? 'Fiche du candidat': \"Fiche de l'administrateur\"\r\n                                \r\n                                }</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FontAwesomeIcon icon={faLevelDownAlt} size=\"lg\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                        <Button variant=\"contained\" size=\"small\" style={{color:'white',backgroundColor:'dimGray'}}\r\n                        onClick={()=>history.push(user.NiveauAcces===AccessLevel.admin? '/dashboard/admins' :\r\n                        user.NiveauAcces===AccessLevel.stagiaire? '/dashboard/candidats': '/dashboard/entreprises')}\r\n                        >\r\n                            Retour à la liste\r\n                        </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify='flex-end' spacing={1}>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" size=\"small\" \r\n                            onClick={()=>handleEdit(user)}\r\n                            startIcon={  <FontAwesomeIcon icon={faEdit} color=\"green\"/>}\r\n                            >\r\n                                Modifier\r\n                            </Button>\r\n                        </Grid>\r\n                        { user?._id !== auth?.user?._id &&\r\n                        <Grid item>\r\n                            <Button \r\n                                //onClick={supprimer}\r\n                                variant=\"outlined\" \r\n                                size=\"small\"  \r\n                                startIcon={<FontAwesomeIcon icon={faTimes} color=\"red\"/>}\r\n                                onClick={handleSupprimer}\r\n                            >\r\n                                Supprimer\r\n                            </Button>\r\n                        </Grid> \r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{borderTop: '5px solid #3e99df', marginTop: '20px', marginBottom: '20px', padding: '0'}}>\r\n                            <Grid container  style={{borderBottom: '2px solid black', marginTop: '15px'}}>\r\n                                <Grid item>\r\n                                    <Grid container spacing={2} > \r\n                                        <Grid item style={{paddingBottom: '0px'}}>\r\n                                            <FontAwesomeIcon \r\n                                            icon={user?.NiveauAcces===AccessLevel.stagiaire? faUserGraduate: user?.NiveauAcces===AccessLevel.entreprise ? faUserTie: faUserNinja} \r\n                                            size=\"2x\"  />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant='h5' style={{fontWeight: 'bold'}}>\r\n                                                {user?.Entreprise? user.NomEntreprise : user?.Prenom+\" \"+user?.Nom}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {user?.NiveauAcces===AccessLevel.stagiaire ?\r\n                        <>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Nom et prénom du stagiaire:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Prenom+\" \"+user?.Nom}\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Établissement scolaire:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Ecole}\r\n                        </Grid>\r\n                        </> : user?.NiveauAcces===AccessLevel.entreprise ?\r\n                        <>\r\n                            <Grid item xs={12} sm={4} className='background'>\r\n                                <b>Entreprise:</b>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} className='background'>\r\n                                {user?.NomEntreprise}\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12} sm={4} className='background'>\r\n                                <b>Prénom et nom de la personne responsable:</b>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} className='background'>\r\n                                {user?.Prenom+\" \"+user?.Nom}\r\n                            </Grid>\r\n                        </>:<>\r\n                             <Grid item xs={12} sm={4} className='background'>\r\n                                <b>Nom et prénom de l'administrateur:</b>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} className='background'>\r\n                                {user?.Prenom+\" \"+user?.Nom}\r\n                            </Grid>\r\n                        </>\r\n                        }\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Courriel:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Courriel}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b> Téléphone:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Telephone}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b> Ville:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Ville}\r\n                        </Grid>\r\n                    </Grid>\r\n  \r\n                </Grid>\r\n          </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashBoardFicheUser;\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.bold{\r\n    font-weight: bold\r\n}\r\n\r\n.background{\r\n    background-color: white;\r\n    border: 1px solid gainsboro\r\n}\r\n`","import {\r\n    Button,\r\n    ButtonGroup,\r\n    FormControl,\r\n    FormHelperText,\r\n    FormLabel,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLastLocation } from 'react-router-last-location';\r\n\r\nimport { addUtilisateur } from '../../Api';\r\nimport { UtilisateursType } from '../../Types';\r\n\r\ntype Props = {\r\n};\r\n\r\ninterface State {\r\n    password: string,\r\n    confirmation: string,\r\n    nom: string,\r\n    prenom: string,\r\n    email: string,\r\n    showPassword: boolean,\r\n    showConfirmation: boolean,\r\n    entreprise: boolean|undefined,\r\n    NiveauAcces: number,\r\n    nomEntreprise: string\r\n  }\r\n\r\n//Formulaire de création d'un nouveau utilisateur\r\nconst DashboardNouveauUser: React.FC<Props> =()=>{\r\n    const history= useHistory();\r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingUtilisateur, setUpdatingUtilisateur] = useState(true);\r\n    const [, setAddedUtilisateur] = useState(false);\r\n    const [error,setError] = useState<boolean>(false);\r\n    const lastLocation = useLastLocation();\r\n    const [values, setValues] = useState<State>({\r\n        password: '',\r\n        confirmation: '',\r\n        nom: '',\r\n        prenom: '',\r\n        email: '',\r\n        showPassword: false,\r\n        showConfirmation: false,\r\n        entreprise: lastLocation?.pathname==='/dashboard/entreprises'? true: false ,\r\n        NiveauAcces:lastLocation?.pathname==='/dashboard/candidats'? 111: lastLocation?.pathname==='/dashboard/entreprises'? 333:999 ,\r\n        nomEntreprise: ''\r\n      });\r\n\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n      };\r\n\r\n    const handleClickShowConfirmation = () => {\r\n    setValues({ ...values, showConfirmation: !values.showConfirmation });\r\n    };\r\n    \r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    const handleCreation= async (e:any)=>{\r\n        e.preventDefault();\r\n        setError(false);\r\n        let error=false;\r\n        if(values.confirmation!== values.password){\r\n            setError(true);\r\n            error=true;\r\n        } \r\n        if(values.entreprise === undefined){\r\n            setError(true);\r\n            error=true;\r\n        } \r\n\r\n       let newUser: UtilisateursType={\r\n           Prenom: values.prenom,\r\n           Nom: values.nom,\r\n           Courriel: values.email,\r\n           Entreprise: values.entreprise||false,\r\n           MotdePasse: values.password,\r\n           Valide: false,\r\n           Supprime: false,\r\n           Actif: true,\r\n           PremierConnexion: true,\r\n           NomEntreprise: values.nomEntreprise,\r\n           NiveauAcces:values.NiveauAcces,\r\n           _id:'',\r\n           Adresse: '',\r\n           Ville: '',\r\n           Region: '',\r\n           Logo:'',\r\n           Telephone:'',\r\n           SiteWeb:'',\r\n           CV:'',\r\n           MessageMotivation:'',\r\n           SecteursActivites: [],\r\n           Ecole:'',\r\n           PostesStagiaires:''\r\n        }\r\n\r\n        if(!error){\r\n            utilisateurAdded(newUser);\r\n        }\r\n\r\n    }\r\n\r\n    async function utilisateurAdded(newUser: UtilisateursType) {\r\n        try {\r\n            setUpdatingUtilisateur(true);\r\n            const update=await addUtilisateur(newUser)\r\n            setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingUtilisateur(false);\r\n            let NiveauAcces=values.NiveauAcces;\r\n            let valuesClear={\r\n                password: '',\r\n                confirmation: '',\r\n                nom: '',\r\n                prenom: '',\r\n                email: '',\r\n                showPassword: false,\r\n                showConfirmation: false,\r\n                entreprise: undefined,\r\n                NiveauAcces: 111,\r\n                nomEntreprise: ''\r\n            };\r\n            \r\n            setValues(valuesClear);\r\n            setAddedUtilisateur(true);\r\n            NiveauAcces===111? history.push('/dashboard/candidats'):NiveauAcces===333 ? history.push('/dashboard/entreprises'): history.push('/dashboard/admins');\r\n        }\r\n      }\r\n\r\n    return(\r\n    <form onSubmit={(e)=>handleCreation(e)}>\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} >\r\n                <Typography variant='h4'>\r\n                    Créer une compte {values.NiveauAcces===111? 'étudiant': \r\n                    values.NiveauAcces===333? 'entreprise': 'administrateur'}\r\n                </Typography> \r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Grid container spacing={2} >\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={2} alignItems='center'>\r\n                            <Grid item> <FormLabel>Type d'utilisateur?</FormLabel></Grid>\r\n                            <Grid item>\r\n                                <ButtonGroup disableElevation variant=\"contained\"  >\r\n                                    <Button \r\n                                    variant={values.NiveauAcces===333 ? 'contained' : 'outlined'}\r\n                                    style={{ textTransform: 'none'}} \r\n                                    color='primary'\r\n                                    onClick={()=>setValues({ ...values, entreprise: true,NiveauAcces: 333 })}\r\n                                    >\r\n                                        Une entreprise\r\n                                    </Button>\r\n                                    <Button \r\n                                    style={{textTransform: 'none'}}\r\n                                    variant={values.NiveauAcces===111  ? 'contained' : 'outlined'} \r\n                                    onClick={()=>setValues({ ...values, entreprise: false,NiveauAcces: 111 })}\r\n                                    color='primary'\r\n                                    >\r\n                                        Un étudiant\r\n                                    </Button>\r\n                                    <Button \r\n                                    style={{textTransform: 'none'}}\r\n                                    variant={values.NiveauAcces===999  ? 'contained' : 'outlined'} \r\n                                    onClick={()=>setValues({ ...values, entreprise: false,NiveauAcces: 999 })}\r\n                                    color='primary'\r\n                                    >\r\n                                        Un administrateur\r\n                                    </Button>\r\n                                </ButtonGroup>  \r\n                            </Grid>\r\n                            <Grid item>\r\n                            <FormHelperText \r\n                                error={error ? values.entreprise===undefined: error }>\r\n                                {error? values.entreprise===undefined ? 'Vous devez choisir une option!':null:null } \r\n                                </FormHelperText>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={2}>\r\n                            {values.entreprise &&\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"input-nomEntreprise\"\r\n                                    label=\"Nom de l'entreprise\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={values.nomEntreprise}\r\n                                    required\r\n                                    onChange={handleChange('nomEntreprise')}\r\n\r\n                                />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            }\r\n                            <Grid item xs={6}>\r\n                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"input-prenom\"\r\n                                    label={values.entreprise?'Prénom de la personne responsable':'Prénom'}\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={values.prenom}\r\n                                    required\r\n                                    onChange={handleChange('prenom')}\r\n\r\n                                />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        id=\"input-nom\"\r\n                                        label={values.entreprise?'Nom de la personne responsable':'Nom'}\r\n                                        variant=\"outlined\"\r\n                                        defaultValue={values.nom}\r\n                                        required\r\n                                        onChange={handleChange('nom')}\r\n                                    />\r\n                                    </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl variant=\"outlined\" fullWidth required>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"input-courriel\"\r\n                                label=\"Courriel\"\r\n                                variant=\"outlined\"\r\n                                type='email'\r\n                                required\r\n                                onChange={handleChange('email')}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Mot de passe</InputLabel>\r\n                            <OutlinedInput\r\n                                fullWidth\r\n                                id=\"outlined-adornment-password\"\r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                onChange={handleChange('password')}\r\n                                required\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                    >\r\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                                labelWidth={110}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                            <InputLabel htmlFor=\"outlined-adornment-confirmation\">Confirmez le nouveau mot de passe</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                fullWidth\r\n                                id=\"outlined-adornment-confirmation\"\r\n                                type={values.showConfirmation ? 'text' : 'password'}\r\n                                value={values.confirmation}\r\n                                onChange={handleChange('confirmation')}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowConfirmation}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                    >\r\n                                    {values.showConfirmation ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                                labelWidth={300}\r\n                            />\r\n                        </FormControl>\r\n                        <FormHelperText \r\n                            error={error ? values.password!==values.confirmation: error }>\r\n                            {error? values.password!==values.confirmation ? 'Les mots de passe doivent être identiques!':null:null } \r\n                        </FormHelperText>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n            <Grid item xs={6}>\r\n                <Grid container justify='flex-start'>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Creér le compte</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>  \r\n            </Grid>\r\n        </Grid>                            \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardNouveauUser;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { differenceInWeeks } from 'date-fns';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLastLocation } from 'react-router-last-location';\r\n\r\nimport { addOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\nimport SelectRemuneration from '../Selects/SelectRemuneration';\r\nimport SelectSecteur from '../Selects/SelectSecteur';\r\nimport SelectStagiaire from '../Selects/SelectStagiaire';\r\n\r\ntype Props = {\r\n};\r\n\r\ninterface State {\r\n    Titre: string,\r\n    SecteursActivite: string|undefined,\r\n    Ville: string,\r\n    Region: string|undefined,\r\n    DateDebut: Date|null,\r\n    DateFin: Date|null,\r\n    Auteur:string|undefined,\r\n    DureeStage: string,\r\n    Description: string,\r\n    NombreHeuresSemaine: number|undefined,\r\n    ProgrammesSuivi:string,\r\n    CompetencesAcquises: string,\r\n    InformationsSuplementaires: string,\r\n    AutresFormations: string,\r\n    DateParution: Date, \r\n    DureeSemaines: number, \r\n    TypeStage: string,\r\n    Remuneration: string\r\n }\r\n\r\n//formulaire de création d'une nouvelle demande de stage\r\nconst DashboardNouvelleDemande: React.FC<Props> =()=>{\r\n    const history= useHistory();\r\n    const auth = useAuth();\r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingDemande, setUpdatingDemande] = useState(true);\r\n    const lastLocation = useLastLocation();\r\n\r\n    const [values, setValues] = useState<State>({\r\n        Titre: \"\",\r\n        SecteursActivite: undefined,\r\n        Ville: \"\",\r\n        Region: undefined,\r\n        DateDebut: null,\r\n        DateFin: null,\r\n        Auteur:auth?.user?.NiveauAcces===AccessLevel.stagiaire ? auth?.user._id: undefined,\r\n        DureeStage: \"\",\r\n        Description: \"\",\r\n        NombreHeuresSemaine: 0,\r\n        ProgrammesSuivi:\"\",\r\n        CompetencesAcquises: \"\",\r\n        InformationsSuplementaires: \"\",\r\n        AutresFormations: \"\",\r\n        DateParution: new Date(), \r\n        DureeSemaines: 0, \r\n        TypeStage: \"\",\r\n        Remuneration:\"\"\r\n      });\r\n\r\n   \r\n    \r\n\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        \r\n    };\r\n    \r\n   \r\n\r\n\r\n    const handleCreation= async (e:any)=>{\r\n        e.preventDefault();\r\n        console.log('created');\r\n        let dif;\r\n        if(values.DateFin!==null &&values.DateDebut!==null){\r\n        dif= differenceInWeeks(values?.DateFin,values?.DateDebut);\r\n        setValues({ ...values, DureeSemaines: dif,\r\n            DureeStage: dif?.toString()+\" semaines\" \r\n        });\r\n        }\r\n\r\n        //console.log(dif);\r\n\r\n        let nouvelleOffre: OffresDemandesType={\r\n            _id:'',\r\n            Titre: values.Titre,\r\n            Type: 'demande',\r\n            SecteurActivite: values.SecteursActivite || \"\",\r\n            Ville: values.Ville,\r\n            Region: values.Region ||\"\",\r\n            DateDebut: values.DateDebut || new Date(),\r\n            DateFin: values.DateFin|| new Date(),\r\n            DureeStage: dif?.toString()+\" semaines\",\r\n            Description: values.Description,\r\n            NombreHeuresSemaine: Number(values.NombreHeuresSemaine),\r\n            CompetencesRecherches: \"\",\r\n            EmploiApresStage: false,\r\n            InformationsSuplementaires: values.InformationsSuplementaires,\r\n            ProgrammesSuivi: values.ProgrammesSuivi,\r\n            AutresFormations: values.AutresFormations,\r\n            CompetencesAcquises: values.CompetencesAcquises,\r\n            DescriptionPosteRecherche: \"\",\r\n            Remuneration: \"\",\r\n            DateParution: values.DateParution,\r\n            AutresInformations: \"\",\r\n            Actif: true,\r\n            Supprime: false,\r\n            Valide: auth?.user?.NiveauAcces===AccessLevel.admin? true: false,\r\n            Communications:[{\r\n                Date: new Date(),\r\n                EnvoyeParID: \"\",\r\n                Message: \"\",\r\n                NbMessages: 1\r\n            }],\r\n            Auteur:  values.Auteur || '',\r\n            TypeStage: '',\r\n            DureeSemaines: dif||0,\r\n            Vedette: false\r\n        }\r\n        //console.log(nouvelleOffre)\r\n \r\n        demandeAdded(nouvelleOffre);\r\n       \r\n    }\r\n\r\n    async function demandeAdded(newOffre: OffresDemandesType) {\r\n        try {\r\n            const update=await addOffreDemande(newOffre);\r\n            setUpdatingDemande(true);\r\n            setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingDemande(false);\r\n            history.push(lastLocation?.pathname||'/dashboard/')\r\n        }\r\n      }\r\n\r\n    return(\r\n    <form onSubmit={(e)=>handleCreation(e)}>\r\n        <Grid container spacing={2} alignItems='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h4'>Créer une demande de stage</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Titre\"\r\n                        label=\"Titre\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('Titre')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item>\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectStagiaire onChange={(selected)=>setValues({ ...values, Auteur: selected?._id })}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            <Grid item >\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectSecteur onChange={(selected)=>setValues({ ...values, SecteursActivite: selected?._id })}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={10}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Ville\"\r\n                        label=\"Ville\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('Ville')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item>\r\n                <SelectRegion onChange={(selected)=>setValues({ ...values, Region: selected?._id })}/>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de début\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={values.DateDebut}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>setValues({ ...values, DateDebut: selected })}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de fin\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={values.DateFin}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>setValues({ ...values, DateFin: selected })}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"input-duree\"\r\n                    placeholder=\"Durée en semaines\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    margin='dense'\r\n                    type='string'\r\n                    value={(values.DateDebut && values.DateFin) ? \r\n                        differenceInWeeks(values?.DateFin,values?.DateDebut).toString() + \" semaines\" : \"0 semaines\"}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-heures\"\r\n                        label=\"Nombre d'heures par semaine\"\r\n                        type='number'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('NombreHeuresSemaine')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                    <SelectRemuneration onChange={(remu)=>setValues({...values, Remuneration: remu||''})}/>\r\n            </Grid>\r\n           \r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Description poste recherche\"\r\n                    required\r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue=\"\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange('Description')}\r\n                    margin='dense'\r\n\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Programmes suivis\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('ProgrammesSuivi')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Competences acquises\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('CompetencesAcquises')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Informations suplementaires\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange('InformationsSuplementaires')}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Autres formations\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange('AutresFormations')}\r\n                    />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Grid container justify='flex-start'>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Creér la demande</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> \r\n            </Grid>\r\n        </Grid>                  \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardNouvelleDemande;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { differenceInWeeks } from 'date-fns';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLastLocation } from 'react-router-last-location';\r\n\r\nimport { addOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectEntreprise from '../Selects/SelectEntreprise';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\nimport SelectSecteur from '../Selects/SelectSecteur';\r\n\r\ntype Props = {\r\n};\r\n\r\ninterface State {\r\n    Titre: string,\r\n    SecteursActivite: string|undefined,\r\n    Ville: string,\r\n    Region: string|undefined,\r\n    DateDebut: Date|null,\r\n    DateFin: Date|null,\r\n    Auteur:string|undefined,\r\n    DureeStage: string,\r\n    Description: string,\r\n    NombreHeuresSemaine: number|undefined,\r\n    CompetencesRecherches:string,\r\n    EmploiApresStage: boolean,\r\n    InformationsSuplementaires: string,\r\n    Remuneration: string,\r\n    DateParution: Date, \r\n    DureeSemaines: number,\r\n    Vedette: boolean\r\n  }\r\n\r\n//Formulaire de création d'une nouvelle offre\r\nconst DashboardNouvelleOffre: React.FC<Props> =()=>{\r\n    const history= useHistory();\r\n    const auth = useAuth();\r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingOffre, setUpdatingOffre] = useState(true);\r\n    const lastLocation = useLastLocation();\r\n\r\n    const [values, setValues] = useState<State>({\r\n        Titre: \"\",\r\n        SecteursActivite: undefined,\r\n        Ville: \"\",\r\n        Region: undefined,\r\n        DateDebut:null,\r\n        DateFin: null,\r\n        Auteur: auth?.user?.NiveauAcces===AccessLevel.entreprise ? auth?.user._id: undefined,\r\n        DureeStage: \"\",\r\n        Description: \"\",\r\n        NombreHeuresSemaine: 0,\r\n        CompetencesRecherches:\"\",\r\n        EmploiApresStage: false,\r\n        InformationsSuplementaires: \"\",\r\n        Remuneration: \"\",\r\n        DateParution: new Date(), \r\n        DureeSemaines: 0,\r\n        Vedette:false\r\n      });\r\n\r\n   \r\n    \r\n\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        \r\n    };\r\n    \r\n    const handleChangeCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n\r\n    const handleCreation= async (e:any)=>{\r\n        e.preventDefault();\r\n        console.log('created');\r\n        let dif;\r\n        if(values.DateFin!==null &&values.DateDebut!==null){\r\n        dif= differenceInWeeks(values?.DateFin,values?.DateDebut);\r\n        setValues({ ...values, DureeSemaines: dif,\r\n            DureeStage: dif?.toString()+\" semaines\" \r\n        });\r\n        }\r\n\r\n        //console.log(dif);\r\n\r\n        let nouvelleOffre: OffresDemandesType={\r\n            _id:'',\r\n            Titre: values.Titre,\r\n            Type: 'offre',\r\n            SecteurActivite: values.SecteursActivite || \"\",\r\n            Ville: values.Ville,\r\n            Region: values.Region ||\"\",\r\n            DateDebut: values.DateDebut || new Date(),\r\n            DateFin: values.DateFin|| new Date(),\r\n            DureeStage: dif?.toString()+\" semaines\",\r\n            Description: values.Description,\r\n            NombreHeuresSemaine: Number(values.NombreHeuresSemaine),\r\n            CompetencesRecherches: values.CompetencesRecherches,\r\n            EmploiApresStage: values.EmploiApresStage,\r\n            InformationsSuplementaires: values.InformationsSuplementaires,\r\n            ProgrammesSuivi: \"\",\r\n            AutresFormations: \"\",\r\n            CompetencesAcquises: \"\",\r\n            DescriptionPosteRecherche: \"\",\r\n            Remuneration: values.Remuneration,\r\n            DateParution: values.DateParution,\r\n            AutresInformations: \"\",\r\n            Actif: true,\r\n            Supprime: false,\r\n            Valide: auth?.user?.NiveauAcces===AccessLevel.admin? true: false,\r\n            Communications:[{\r\n                Date: new Date(),\r\n                EnvoyeParID: \"\",\r\n                Message: \"\",\r\n                NbMessages: 1\r\n            }],\r\n            Auteur:  values.Auteur || '',\r\n            TypeStage: '',\r\n            DureeSemaines: dif||0,\r\n            Vedette: values.Vedette\r\n        }\r\n        //console.log(nouvelleOffre)\r\n \r\n        offreAdded(nouvelleOffre);\r\n       \r\n    }\r\n\r\n    async function offreAdded(newOffre: OffresDemandesType) {\r\n        try {\r\n            const update=await addOffreDemande(newOffre);\r\n            setUpdatingOffre(true);\r\n            setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingOffre(false);\r\n            history.push(lastLocation?.pathname||'/dashboard/')\r\n        }\r\n      }\r\n\r\n    return(\r\n    <form onSubmit={(e)=>handleCreation(e)}>\r\n        <Grid container spacing={3} alignItems='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h4'>Créer une offre de stage</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Titre\"\r\n                        label=\"Titre\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('Titre')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item>\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectEntreprise onChange={(selected)=>setValues({ ...values, Auteur: selected?._id })}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            <Grid item >\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectSecteur onChange={(selected)=>setValues({ ...values, SecteursActivite: selected?._id })}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={10}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Ville\"\r\n                        label=\"Ville\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('Ville')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item>\r\n                <SelectRegion onChange={(selected)=>setValues({ ...values, Region: selected?._id })}/>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de début\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={values.DateDebut}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>setValues({ ...values, DateDebut: selected })}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de fin\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={values.DateFin}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>setValues({ ...values, DateFin: selected })}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"input-duree\"\r\n                    placeholder=\"Durée en semaines\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    value={(values.DateDebut && values.DateFin) ? \r\n                        differenceInWeeks(values.DateFin,values.DateDebut).toString() + \" semaines\" : \"0 semaines\"}\r\n                    margin='dense'\r\n\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-heures\"\r\n                        label=\"Nombre d'heures par semaine\"\r\n                        type='number'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('NombreHeuresSemaine')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={5}> \r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}><b>Possibilité d'emploi aprés le stage?</b> </Grid>\r\n                    <Grid item> Non</Grid>\r\n                    <Grid item>\r\n                        <Switch\r\n                                    checked={values.EmploiApresStage}\r\n                                    onChange={handleChangeCheck}\r\n                                    name=\"EmploiApresStage\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                        </Grid>\r\n                    <Grid item>Oui</Grid>\r\n                </Grid>    \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Description\"\r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue=\"\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange('Description')}\r\n                    required\r\n                />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Competences recherches\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('CompetencesRecherches')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Informations suplementaires\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange('InformationsSuplementaires')}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Rémunération\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange('Remuneration')}\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item > \r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}><b>Offre de stage vedette?</b> </Grid>\r\n                    <Grid item> Non</Grid>\r\n                    <Grid item>\r\n                        <Switch\r\n                                    checked={values.Vedette}\r\n                                    onChange={handleChangeCheck}\r\n                                    name=\"Vedette\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                        </Grid>\r\n                    <Grid item>Oui</Grid>\r\n                </Grid>    \r\n            </Grid>\r\n            }\r\n            <Grid item xs={12}>\r\n                <Grid container justify='flex-start'>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Creér l'offre</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> \r\n            </Grid>\r\n        </Grid>                  \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardNouvelleOffre;\r\n","import { faArrowAltCircleLeft, faArrowAltCircleRight, faEdit, faLevelDownAlt, faTimes, faUserGraduate, faUserNinja, faUserTie } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { updateUtilisateur, updateOffreDemande, fetchRegion, fetchSecteur } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { UtilisateursType, OffresDemandesType, RegionsType, SecteursActiviteType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport { useLastLocation } from 'react-router-last-location';\r\nimport userEvent from '@testing-library/user-event';\r\n\r\ntype Props = {\r\n  history: any\r\n};\r\n\r\nconst DashBoardOffreDemandeDetails: React.FC<Props> =({history})=>{\r\n    const auth = useAuth();\r\n    const lastLocation = useLastLocation();\r\n\r\n    const [offreDemande, ] = useState<OffresDemandesType>(history.location.state.data);\r\n    const [auteur, ] = useState<UtilisateursType>(history.location.state.auteur);\r\n    const [region, setRegion] = useState<RegionsType | undefined>(undefined);\r\n    const [secteur, setSecteur] = useState<SecteursActiviteType | undefined>(undefined);\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [update, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingOffreDemande, setUpdatingOffreDemande] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        getRegion(offreDemande.Region);\r\n        getSecteur(offreDemande.SecteurActivite);\r\n      },[])\r\n\r\n    const handleEdit = (offreDemande: OffresDemandesType) =>{\r\n        history.push({\r\n            pathname: '/dashboard/edit/'+offreDemande.Type+'/'+offreDemande._id,\r\n            state: {data: offreDemande}\r\n        });\r\n    }\r\n\r\n    //mise à jour de l'utilisateur dans la DB après le delete (onClick)\r\n    async function offreDemandeUpdated(offreDemande:OffresDemandesType) {\r\n        try {\r\n            const update=await updateOffreDemande(offreDemande);\r\n            setUpdatingOffreDemande(true);\r\n            setUpdate(update); \r\n             \r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingOffreDemande(false);\r\n            history.push(\"/dashboard/accueil/\");\r\n        }\r\n      }\r\n    \r\n      //suppression (onClick) de l'utilisateur\r\n    const handleSupprimer =()=>{\r\n        offreDemande.Supprime=true;\r\n        offreDemandeUpdated(offreDemande);\r\n    }\r\n\r\n    const getRegion=async(id:string)=>{\r\n        let region: RegionsType| undefined = await fetchRegion(id); \r\n        setRegion(region);\r\n    }\r\n\r\n    const getSecteur=async(id:string)=>{\r\n        let secteur: SecteursActiviteType| undefined = await fetchSecteur(id); \r\n        setSecteur(secteur);\r\n    }\r\n\r\n    function formatDate(date:Date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n          <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2} alignItems='flex-end'> \r\n                        <Grid item>\r\n                            <Typography variant='h4'>\r\n                                {offreDemande.Type==='offre' ? \"Détails de l'offre\": \"Détails de la demande\"}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FontAwesomeIcon icon={faLevelDownAlt} size=\"lg\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                        <Button variant=\"contained\" size=\"small\" style={{color:'white',backgroundColor:'dimGray'}}\r\n                        onClick={()=>history.push(lastLocation?.pathname)}\r\n                        >\r\n                            {lastLocation?.pathname==='/dashboard/accueil'? \"Retour à l'accueil\": \"Retour à liste des \"+offreDemande.Type+\"s\"}\r\n                        </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify='flex-end' spacing={1}>\r\n                        { (lastLocation?.pathname==='/dashboard/offres' || lastLocation?.pathname==='/dashboard/demandes') \r\n                        ?\r\n                        ((auth?.user?.NiveauAcces!==AccessLevel.entreprise && offreDemande.Type==='demande')||\r\n                        (auth?.user?.NiveauAcces!==AccessLevel.stagiaire && offreDemande.Type==='offre')) && \r\n                        <>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" size=\"small\" \r\n                            onClick={()=>handleEdit(offreDemande)}\r\n                            startIcon={  <FontAwesomeIcon icon={faEdit} color=\"green\"/>}\r\n                            >\r\n                                Modifier\r\n                            </Button>\r\n                        </Grid>\r\n                        \r\n                        <Grid item>\r\n                            <Button \r\n                                //onClick={supprimer}\r\n                                variant=\"outlined\" \r\n                                size=\"small\"  \r\n                                startIcon={<FontAwesomeIcon icon={faTimes} color=\"red\"/>}\r\n                                onClick={handleSupprimer}\r\n                            >\r\n                                Supprimer\r\n                            </Button>\r\n                        </Grid> \r\n                        </> : auth?.user?.NiveauAcces===AccessLevel.admin &&\r\n                         <>\r\n                         <Grid item>\r\n                            <Button variant=\"outlined\" size=\"small\" \r\n                            style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#fa6980', color: 'white'}}\r\n                            onClick={handleSupprimer}\r\n                            >\r\n                                Refuser\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button \r\n                                variant=\"outlined\" \r\n                                size=\"small\"  \r\n                                style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#72a84a', color: 'white'}}\r\n                                onClick={()=>{ \r\n                                    offreDemande.Valide=true;\r\n                                    offreDemandeUpdated(offreDemande);\r\n                                }}\r\n                            >\r\n                                Accepter\r\n                            </Button>\r\n                        </Grid>\r\n                         </> \r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                 <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{borderTop: '5px solid #3e99df', marginTop: '20px', marginBottom: '20px', padding: '0'}}>\r\n                            <Grid container  style={{borderBottom: '2px solid black', marginTop: '15px'}}>\r\n                                <Grid item>\r\n                                    <Grid container spacing={2} > \r\n                                        <Grid item style={{paddingBottom: '0px'}}>\r\n                                            <FontAwesomeIcon \r\n                                            icon={offreDemande?.Type==='offre'? faUserTie: faUserGraduate} \r\n                                            size=\"2x\"  />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant='h5' style={{fontWeight: 'bold'}}>\r\n                                                {offreDemande?.Titre}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                         {offreDemande?.Type==='offre' ?\r\n                        <>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Nom entreprise:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {auteur.NomEntreprise}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Secteur activité:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {secteur?.Titre}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Courriel:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {auteur.Courriel}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b> Téléphone:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {auteur.Telephone}\r\n                        </Grid>\r\n                        </> \r\n                        : \r\n                        auth?.user?.NiveauAcces!==AccessLevel.entreprise &&\r\n                        <>\r\n                            <Grid item xs={12} sm={4} className='background'>\r\n                                <b>Prénom et Nom:</b>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} className='background'>\r\n                                {auteur.Prenom+\" \"+auteur.Nom}\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12} sm={4} className='background'>\r\n                                <b>Téléphone:</b>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} className='background'>\r\n                                {auteur.Telephone}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} className='background'>\r\n                                <b>Courriel:</b>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} className='background'>\r\n                                {auteur.Courriel}\r\n                            </Grid>\r\n                        </>\r\n                        }\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Ville:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {offreDemande.Ville}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Region:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {region?.Name}\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Date parution:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {formatDate(offreDemande.DateParution)}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Date de début:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {formatDate(offreDemande.DateDebut)}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Date de fin:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {formatDate(offreDemande.DateFin)}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Dureé:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {offreDemande.DureeSemaines+\" semaines\"}\r\n                        </Grid>\r\n\r\n    \r\n                        { offreDemande.Type==='demande' &&\r\n                        <>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Formation:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {offreDemande.ProgrammesSuivi}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Établissement scolaire:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {auteur.Ecole}\r\n                        </Grid>\r\n                        </>\r\n                        }\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Description:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {offreDemande.Description}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>{offreDemande.Type==='offre'? 'Competences recherches:' : 'Competences Acquises:'}</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {offreDemande.Type==='offre'? offreDemande.CompetencesRecherches: offreDemande.CompetencesAcquises}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Rémuneration</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {offreDemande.Remuneration}\r\n                        </Grid>\r\n                    </Grid> \r\n                </Grid> \r\n          </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashBoardOffreDemandeDetails;\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.bold{\r\n    font-weight: bold\r\n}\r\n\r\n.background{\r\n    background-color: white;\r\n    border: 1px solid gainsboro\r\n}\r\n`","import { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Checkbox, FormControlLabel, Grid, InputAdornment, TextField, Typography } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchOffresDemandes } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport DashboardCardOffre from './DashboardCardOffre';\r\n\r\ntype Props = {\r\n};\r\n\r\n\r\n//Liste des offres de stage dans le dashboard\r\nconst DashboardOffres: React.FC<Props> =()=>{\r\n    const auth = useAuth();\r\n\r\n    const [offres, setOffres] = useState<OffresDemandesType[]>([]);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n    const [vedette, setVedette]= useState<boolean>(false);\r\n\r\n    useEffect(()=>{\r\n        getOffres(false);\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getOffres = async (vedette: boolean) => {\r\n        let offres : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        offres = offres.filter(offre=> offre.Supprime===false && offre.Type==='offre');\r\n\r\n        //si entreprise tu vois tes offres seulement\r\n        if(auth?.user?.NiveauAcces===AccessLevel.entreprise){\r\n            offres= offres.filter(offre=> offre.Auteur===auth?.user?._id)\r\n        }\r\n\r\n        if(vedette){\r\n            offres=offres.filter(offre=>offre.Vedette===true)\r\n        }\r\n        //si stagiaire tu vois toutes les offres validées\r\n        /* if(auth?.user?.NiveauAcces===AccessLevel.entreprise){\r\n            offres= offres.filter(offre=> offre.Valide===true)\r\n        }  */\r\n        //console.log(offres);\r\n        setOffres(offres);  \r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setVedette(!vedette);\r\n        getOffres(!vedette);\r\n      };\r\n   \r\n\r\n    return(\r\n        <>\r\n            <Grid container spacing={3} alignItems='center' justify='center' >\r\n                <Grid item>\r\n                        <TextField\r\n                            label=\"Rechercher\"\r\n                            onChange={(e)=>setRecherche(e.target.value)}\r\n                            InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                        <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n                {auth?.user?.NiveauAcces===AccessLevel.admin &&\r\n                <Grid item>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={vedette} onChange={(e)=>handleChange(e)} name=\"Vedette\" />}\r\n                        label=\"Vedette\"\r\n                    />\r\n                </Grid>\r\n                }\r\n             </Grid> \r\n         <Grid container alignItems='center' spacing={3} > \r\n            <Grid item xs={12}>    \r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <Typography variant={'h4'}>{auth?.user?.NiveauAcces===AccessLevel.entreprise? 'Mes offres de stage'\r\n                        :'Offres de stage'}</Typography>\r\n                    </Grid>\r\n                    <Grid item style={{position: 'relative'}}>\r\n                        <FontAwesomeIcon icon={faLevelDownAlt}  size='lg'  style={{position: 'absolute', top: '30px'}} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Grid container spacing={3}>\r\n                    {offres ? \r\n                        offres.map(offre =>(\r\n                            offre.Titre.toLowerCase().includes(recherche.toLowerCase())&&\r\n                            <Grid item xs={12}>\r\n                                <DashboardCardOffre key={offre._id} offre={offre} updateOffre={()=>getOffres(vedette)}/>\r\n                            </Grid>\r\n                            )):null\r\n                        }\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardOffres;\r\n\r\n\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { addRegion, fetchRegions, updateRegion } from '../../Api';\r\nimport { RegionsType } from '../../Types';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\n//Liste des regions et respective crud dans le dashboard\r\n\r\nconst DashboardSecteurs: React.FC<Props> =()=>{\r\n    const [regions, setRegions] = useState<RegionsType[]>([]);\r\n    const [edit, setEdit] = useState<RegionsType | undefined >(undefined);\r\n    const [oldValue, setOldValue] = useState<string >('');\r\n    const [update, setUpdate]= useState<String>('');\r\n    const [updatingRegion, setUpdatingRegion] = useState(true);\r\n    const [addingRegion, setAddingRegion] = useState(true);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n    const [error, setError]= useState<boolean | undefined>(false);\r\n    const [add, setAdd]= useState<RegionsType | undefined>(undefined);\r\n    const [newRegion, setNewRegion]= useState<RegionsType>({\r\n        Actif: true,\r\n        Supprime: false,\r\n        Name:'',\r\n        _id:''\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getRegions();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getRegions = async () => {\r\n        let regions : RegionsType[] | undefined = await fetchRegions();\r\n        regions = regions.filter(region=> region.Supprime===false);\r\n        regions.sort((a, b) => (a.Name > b.Name) ? 1 : -1);\r\n\r\n        setRegions(regions);  \r\n    }\r\n\r\n    \r\n    async function regionUpdated(secteur: RegionsType) {\r\n    try {\r\n        setUpdatingRegion(true);\r\n        const update=await updateRegion(secteur);\r\n        setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setUpdatingRegion(false);\r\n        getRegions();\r\n    }\r\n  }\r\n\r\n  const handleEditChange=(edit: RegionsType| undefined, region: RegionsType| undefined)=>{\r\n    let regionOldValue: RegionsType| undefined = undefined;\r\n    if(edit!==undefined)\r\n    regionOldValue =regions.find(region=> region._id===edit._id);\r\n    if(regionOldValue){\r\n        regionOldValue.Name=oldValue;\r\n    }\r\n    if(region){\r\n        setEdit(region);\r\n    }\r\n  }\r\n\r\n  const handleAddRegion =(region: RegionsType)=>{\r\n    setAdd(undefined);\r\n    regionAdded(region);\r\n\r\n  }\r\n\r\n  async function regionAdded(region: RegionsType) {\r\n    try {\r\n        setAddingRegion(true);\r\n        const update=await addRegion(region);\r\n        setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setAddingRegion(false);\r\n        getRegions();\r\n    }\r\n  }\r\n\r\n    return(\r\n        <FormGroup >\r\n        <Grid container justify='center' style={{marginBottom: '100px'}}>\r\n            <Grid item style={{padding: '20px', backgroundColor: 'whitesmoke'}}>\r\n            <Grid container direction='column' spacing={3} alignItems='center' >\r\n                <Grid item>\r\n                        <TextField\r\n                            label=\"Rechercher\"\r\n                            onChange={(e)=>setRecherche(e.target.value)}\r\n                            InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container >\r\n                        <Grid item>\r\n                            {regions.length>0 ?\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align='left'><Typography variant='h6' style={{fontWeight:'bold'}}>Region</Typography></TableCell>\r\n                                        <TableCell align='center'><Typography variant='h6' style={{fontWeight:'bold'}}>Actions</Typography></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={add?1:2}>\r\n                                            { !add ?\r\n                                            <Button \r\n                                                variant=\"outlined\" \r\n                                                color=\"primary\"  \r\n                                                startIcon={<AddIcon />}\r\n                                                onClick={\r\n                                                   ()=> setAdd(newRegion)\r\n                                                }\r\n                                            >\r\n                                                Ajouter region\r\n                                            </Button> :\r\n                                            <TextField  \r\n                                                onChange={(e)=>{\r\n                                                    add.Name=e.target.value;\r\n                                                }}\r\n                                                id=\"standard-basic\" \r\n                                                label=\"Region\" \r\n                                                fullWidth\r\n                                                name={'Name'}\r\n                                                required\r\n                                                autoFocus\r\n                                                error={error}\r\n                                            />\r\n                                            }\r\n                                        </TableCell>\r\n                                        { add ?\r\n                                        <TableCell>\r\n                                            <Tooltip title='sauvegarder'>\r\n                                                <IconButton size=\"small\" type='submit' onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    add && add.Name !== '' ? handleAddRegion(add): console.log('not updated');\r\n                                                    add && add.Name !== '' ? setError(false) : setError(true);\r\n                                                    }}\r\n                                                >\r\n                                                    <SaveIcon style={{color:'seagreen'}}/>\r\n                                                </IconButton>\r\n                                            </Tooltip> \r\n                                            <Tooltip title='Annuler'>\r\n                                                <IconButton size=\"small\" \r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        setAdd(undefined);\r\n                                                    }}\r\n                                                >\r\n                                                    <CancelIcon style={{color: 'crimson'}}/>\r\n                                                </IconButton> \r\n                                            </Tooltip> \r\n                                        </TableCell> : null\r\n                                    }      \r\n                                    </TableRow>\r\n                                    { regions.map(region => (\r\n                                        region.Name.toLowerCase().includes(recherche.toLowerCase()) &&\r\n                                    <TableRow key={region._id} hover \r\n                                            style={{backgroundColor: edit===region? 'PowderBlue': 'inherit'}}>\r\n                                        <TableCell align='left'  >\r\n                                            {\r\n                                            edit===region?  \r\n                                            <TextField  \r\n                                                onChange={(e)=>{\r\n                                                    region.Name=e.target.value;\r\n                                                }}\r\n                                                id=\"standard-basic\" \r\n                                                defaultValue={region.Name} \r\n                                                label=\"Secteur\" \r\n                                                fullWidth\r\n                                                name={'Name'}\r\n                                                required\r\n                                                autoFocus\r\n                                                error={error}\r\n                                            />\r\n                                            :\r\n                                            region.Name\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell align='center'>\r\n                                            {edit===region? \r\n                                            <> \r\n                                                <Tooltip title='sauvegarder'>\r\n                                                    <IconButton size=\"small\" type='submit' onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        console.log(region.Name);\r\n                                                        region.Name !== '' ? updateRegion(region): console.log('not updated');\r\n                                                        region.Name !== '' ? setEdit(undefined) : setError(true);\r\n                                                        }}\r\n                                                    >\r\n                                                        <SaveIcon style={{color:'seagreen'}}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                                <Tooltip title='Annuler'>\r\n                                                    <IconButton size=\"small\" \r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            setEdit(undefined);\r\n                                                            region.Name=oldValue;\r\n                                                        }}\r\n                                                    >\r\n                                                        <CancelIcon style={{color: 'crimson'}}/>\r\n                                                    </IconButton> \r\n                                                </Tooltip> \r\n                                            </> : \r\n                                            <>\r\n                                                <Tooltip title='éditer'>\r\n                                                    <IconButton size=\"small\" \r\n                                                        onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                edit===region? setEdit(undefined) : \r\n                                                                handleEditChange(edit,region);\r\n                                                                setOldValue(region.Name);\r\n                                                            }}\r\n                                                    >\r\n                                                        <EditIcon style={{color:'#3e99df'}}/>\r\n                                                    </IconButton> \r\n                                                </Tooltip>\r\n                                                <Tooltip title='supprimer'>\r\n                                                    <IconButton size=\"small\" onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            region.Supprime=true;\r\n                                                            console.log(region.Supprime);\r\n                                                            regionUpdated(region);\r\n                                                        }}>\r\n                                                        <DeleteIcon style={{color: 'crimson'}}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </>\r\n                                            } \r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            :null\r\n                            }  \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        </FormGroup >\r\n    )\r\n}\r\n\r\nexport default DashboardSecteurs;","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { addSecteurActivite, fetchSecteursActivite, updateSecteurActivite } from '../../Api';\r\nimport { SecteursActiviteType } from '../../Types';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\n//Liste des secteurs et respective crud dans le dashboard\r\nconst DashboardSecteurs: React.FC<Props> =()=>{\r\n    const [secteursActivites, setSecteursActivites] = useState<SecteursActiviteType[]>([]);\r\n    const [edit, setEdit] = useState<SecteursActiviteType | undefined >(undefined);\r\n    const [oldValue, setOldValue] = useState<string >('');\r\n    const [update, setUpdate]= useState<String>('');\r\n    const [updatingSecteur, setUpdatingSecteur] = useState(true);\r\n    const [addingSecteur, setAddingSecteur] = useState(true);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n    const [error, setError]= useState<boolean | undefined>(false);\r\n    const [add, setAdd]= useState<SecteursActiviteType | undefined>(undefined);\r\n    const [newSecteur, setNewSecteur]= useState<SecteursActiviteType>({\r\n        Actif: true,\r\n        Supprime: false,\r\n        Titre:'',\r\n        _id:''\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getSecteursActivites();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n     \r\n      },[])\r\n\r\n    const getSecteursActivites = async () => {\r\n        let secteursActivites : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n        secteursActivites = secteursActivites.filter(secteur=> secteur.Supprime===false);\r\n        secteursActivites.sort((a, b) => (a.Titre > b.Titre) ? 1 : -1);\r\n\r\n        setSecteursActivites(secteursActivites);\r\n    }\r\n\r\n    \r\n    async function secteurUpdated(secteur: SecteursActiviteType) {\r\n    try {\r\n        setUpdatingSecteur(true);\r\n        const update=await updateSecteurActivite(secteur);\r\n        setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setUpdatingSecteur(false);\r\n        getSecteursActivites();\r\n    }\r\n  }\r\n\r\n  const handleEditChange=(edit: SecteursActiviteType| undefined, secteur: SecteursActiviteType| undefined)=>{\r\n    let secteurOldValue: SecteursActiviteType| undefined = undefined;\r\n    if(edit!==undefined)\r\n    secteurOldValue =secteursActivites.find(secteur=> secteur._id===edit._id);\r\n    if(secteurOldValue){\r\n        secteurOldValue.Titre=oldValue;\r\n    }\r\n    if(secteur){\r\n        setEdit(secteur);\r\n    }\r\n  }\r\n\r\n  const handleAddSecteurActivite =(secteur: SecteursActiviteType)=>{\r\n    setAdd(undefined);\r\n    secteurAdded(secteur);\r\n\r\n  }\r\n\r\n  async function secteurAdded(secteur: SecteursActiviteType) {\r\n    try {\r\n        setAddingSecteur(true);\r\n        const update=await addSecteurActivite(secteur);\r\n        setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setAddingSecteur(false);\r\n        getSecteursActivites();\r\n    }\r\n  }\r\n\r\n    return(\r\n        <FormGroup >\r\n        <Grid container justify='center' style={{marginBottom: '100px'}}>\r\n            <Grid item style={{padding: '20px', backgroundColor: 'whitesmoke'}}>\r\n            <Grid container direction='column' spacing={3} alignItems='center' >\r\n                <Grid item>\r\n                        <TextField\r\n                            label=\"Rechercher\"\r\n                            onChange={(e)=>setRecherche(e.target.value)}\r\n                            InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                        <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container >\r\n                        <Grid item>\r\n                            {secteursActivites.length>0 ?\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align='left'><Typography variant='h6' style={{fontWeight:'bold'}}>Secteur d'activité</Typography></TableCell>\r\n                                        <TableCell align='center'><Typography variant='h6' style={{fontWeight:'bold'}}>Actions</Typography></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={add?1:2}>\r\n                                            { !add ?\r\n                                            <Button \r\n                                                variant=\"outlined\" \r\n                                                color=\"primary\"  \r\n                                                startIcon={<AddIcon />}\r\n                                                onClick={\r\n                                                   ()=> setAdd(newSecteur)\r\n                                                }\r\n                                            >\r\n                                                Ajouter secteur d'activité\r\n                                            </Button> :\r\n                                            <TextField  \r\n                                                onChange={(e)=>{\r\n                                                    add.Titre=e.target.value;\r\n                                                }}\r\n                                                id=\"standard-basic\" \r\n                                                label=\"Secteur\" \r\n                                                fullWidth\r\n                                                name={'Titre'}\r\n                                                required\r\n                                                autoFocus\r\n                                                error={error}\r\n                                            />\r\n                                            }\r\n                                        </TableCell>\r\n                                        { add ?\r\n                                        <TableCell>\r\n                                            <Tooltip title='sauvegarder'>\r\n                                                <IconButton size=\"small\" type='submit' onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    add && add.Titre !== '' ? handleAddSecteurActivite(add): console.log('not updated');\r\n                                                    add && add.Titre !== '' ? setError(false) : setError(true);\r\n                                                    }}\r\n                                                >\r\n                                                    <SaveIcon style={{color:'seagreen'}}/>\r\n                                                </IconButton>\r\n                                            </Tooltip> \r\n                                            <Tooltip title='Annuler'>\r\n                                                <IconButton size=\"small\" \r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        setAdd(undefined);\r\n                                                    }}\r\n                                                >\r\n                                                    <CancelIcon style={{color: 'crimson'}}/>\r\n                                                </IconButton> \r\n                                            </Tooltip> \r\n                                        </TableCell> : null\r\n                                    }      \r\n                                    </TableRow>\r\n                                    { secteursActivites.map(secteur => (\r\n                                        secteur.Titre.toLowerCase().includes(recherche.toLowerCase()) &&\r\n                                    <TableRow key={secteur._id} hover \r\n                                            style={{backgroundColor: edit===secteur? 'PowderBlue': 'inherit'}}>\r\n                                        <TableCell align='left'  >\r\n                                            {\r\n                                            edit===secteur?  \r\n                                            <TextField  \r\n                                                onChange={(e)=>{\r\n                                                    secteur.Titre=e.target.value;\r\n                                                }}\r\n                                                id=\"standard-basic\" \r\n                                                defaultValue={secteur.Titre} \r\n                                                label=\"Secteur\" \r\n                                                fullWidth\r\n                                                name={'Titre'}\r\n                                                required\r\n                                                autoFocus\r\n                                                error={error}\r\n                                            />\r\n                                            :\r\n                                            secteur.Titre\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell align='center'>\r\n                                            {edit===secteur? \r\n                                            <> \r\n                                                <Tooltip title='sauvegarder'>\r\n                                                    <IconButton size=\"small\" type='submit' onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        console.log(secteur.Titre);\r\n                                                        secteur.Titre !== '' ? updateSecteurActivite(secteur): console.log('not updated');\r\n                                                        secteur.Titre !== '' ? setEdit(undefined) : setError(true);\r\n                                                        }}\r\n                                                    >\r\n                                                        <SaveIcon style={{color:'seagreen'}}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                                <Tooltip title='Annuler'>\r\n                                                    <IconButton size=\"small\" \r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            setEdit(undefined);\r\n                                                            secteur.Titre=oldValue;\r\n                                                        }}\r\n                                                    >\r\n                                                        <CancelIcon style={{color: 'crimson'}}/>\r\n                                                    </IconButton> \r\n                                                </Tooltip> \r\n                                            </> : \r\n                                            <>\r\n                                                <Tooltip title='éditer'>\r\n                                                    <IconButton size=\"small\" \r\n                                                        onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                edit===secteur? setEdit(undefined) : \r\n                                                                handleEditChange(edit,secteur);\r\n                                                                setOldValue(secteur.Titre);\r\n                                                            }}\r\n                                                    >\r\n                                                        <EditIcon style={{color:'#3e99df'}}/>\r\n                                                    </IconButton> \r\n                                                </Tooltip>\r\n                                                <Tooltip title='supprimer'>\r\n                                                    <IconButton size=\"small\" onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            secteur.Supprime=true;\r\n                                                            console.log(secteur.Supprime);\r\n                                                            secteurUpdated(secteur);\r\n                                                        }}>\r\n                                                        <DeleteIcon style={{color: 'crimson'}}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </>\r\n                                            } \r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            :null\r\n                            }  \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        </FormGroup >\r\n    )\r\n}\r\n\r\nexport default DashboardSecteurs;","import { faEdit, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, CardActions, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n    user: UtilisateursType;\r\n    usersType: string\r\n    supprimer :()=>void\r\n};\r\n\r\n//card pour les utilisateursa\r\nconst DashBoardUsersCard: React.FC<Props> =({user, supprimer,usersType})=>{\r\n    const history= useHistory();\r\n    const auth = useAuth();\r\n\r\n    const handleEdit = (user: UtilisateursType) =>{\r\n\r\n        history.push({\r\n            pathname: '/dashboard/edit/user/'+user._id,\r\n            state: {data: user}\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n          <Card variant=\"outlined\" className='card'  \r\n          onClick={()=>{history.push({\r\n              pathname:'/dashboard/ficheUser/'+user._id,\r\n              state: {data: user}\r\n                })}}   \r\n                style={{display: 'flex',justifyContent: 'space-between', flexDirection: 'column', height: '100%', width:'100%'}}   \r\n          >\r\n                <CardContent>\r\n                    <Typography variant='h5'>\r\n                        {usersType !== 'entreprises' ? user.Prenom+' '+user.Nom:\r\n                        user.NomEntreprise\r\n                        }\r\n                    </Typography>\r\n                    <Typography variant='subtitle1'  className='dashboardColor'>\r\n                        {user.Ecole}\r\n                    </Typography>\r\n                    <Typography variant='subtitle2'  className='dashboardColor'>\r\n                        {user.Ville}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify='center' spacing={2}>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" size=\"small\" \r\n                            onClick={(event)=>{\r\n                                event.stopPropagation();\r\n                                event.preventDefault();\r\n                                handleEdit(user);\r\n                            }}\r\n                            startIcon={  <FontAwesomeIcon icon={faEdit} color=\"green\"/>}\r\n                            >\r\n                                Modifier\r\n                            </Button>\r\n                        </Grid>\r\n                        { auth?.user?._id!==user._id &&\r\n                        <Grid item>\r\n                            <Button \r\n                                onClick={(event)=>{\r\n                                        event.stopPropagation();\r\n                                        event.preventDefault();\r\n                                        supprimer();\r\n                                }}\r\n                                variant=\"outlined\" \r\n                                size=\"small\"  \r\n                                startIcon={<FontAwesomeIcon icon={faTimes} color=\"red\"/>}\r\n                            >\r\n                                Supprimer\r\n                            </Button>\r\n                        </Grid>\r\n                        }\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card> \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashBoardUsersCard;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n\r\nheight: 100%;\r\n.card{\r\n    text-align:center;\r\n \r\n}\r\n\r\n.card:hover{\r\n    background-color: #E8E8E8;\r\n    cursor: pointer;\r\n}\r\n\r\n`","import '../../App.sass';\r\n\r\nimport { Grid, InputAdornment, TextField } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport useAuth from '../auth/useAuth';\r\n\r\nimport { fetchUtilisateurs, updateUtilisateur } from '../../Api';\r\nimport { UtilisateursType } from '../../Types';\r\nimport DashBoardUsersCard from './DashBoardUsersCard';\r\n\r\ntype Props = {\r\n    usersType: string\r\n};\r\n\r\n//liste des utilisateurs\r\nconst DashboardCandidats: React.FC<Props> =({usersType})=>{\r\n    const auth = useAuth();\r\n\r\n    const [utilisateurs, setUtilisateurs] = useState<UtilisateursType[]>([]);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n\r\n    useEffect(()=>{\r\n        getUtilisateurs();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    \r\n\r\n    const getUtilisateurs = async () => {\r\n        let users : UtilisateursType[] | undefined = await fetchUtilisateurs();\r\n        users =users.filter(user=> \r\n            user.NiveauAcces=== (usersType === 'candidats' ? 111: usersType === 'entreprises' ? 333 : 999 ) && user.Supprime=== false);\r\n        //console.log(usersType);\r\n        setUtilisateurs(users);\r\n    }\r\n    \r\n    const handleSupprimer = (user: UtilisateursType) => {\r\n        let users= utilisateurs;\r\n        user.Supprime=true;\r\n        users=users.filter(user=> user.Supprime=== false);\r\n        setUtilisateurs(users);\r\n        //console.log(utilisateurs);\r\n        updateUtilisateur(user);\r\n    }\r\n\r\n    const getFullName = (user: UtilisateursType) => {\r\n        return (user.Prenom+\" \"+user.Nom).toLowerCase();\r\n    }\r\n    \r\n    return(\r\n        <Wrapper>     \r\n            <Grid container direction='column' spacing={3} alignItems='center' >\r\n                <Grid item>\r\n                        <TextField\r\n                            data-testid=\"rechercheUsers\"\r\n                            placeholder=\"Rechercher\"\r\n                            onChange={(e)=>setRecherche(e.target.value)}\r\n                            InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                        <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n             </Grid> \r\n            <Grid container spacing={2} className='dashboardContent' >\r\n            {utilisateurs.length > 0 ?\r\n                utilisateurs.map((user,index)=>( \r\n                    user.Supprime === false && user._id !== auth?.user?._id &&\r\n                    (user?.NomEntreprise?.toLowerCase().includes(recherche?.toLowerCase()) || getFullName(user).includes(recherche?.toLowerCase())  )                \r\n                    ?\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={user._id} >\r\n                        <DashBoardUsersCard user={user} usersType={usersType} supprimer={()=>handleSupprimer(user)} />\r\n                    </Grid> \r\n                :null\r\n                ))\r\n                : \r\n                null\r\n                }\r\n            </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashboardCandidats;\r\n\r\nexport const Wrapper = styled.div`\r\n \r\n\r\n    \r\n`","import { useHistory } from 'react-router';\r\nimport { LastLocationProvider } from 'react-router-last-location';\r\n\r\nimport ProtectedDashboardRoutes from '../auth/ProtectedDashboardRoutes';\r\nimport DashboardAccueil from './DashboardAccueil';\r\nimport DashboardDemandes from './DashboardDemandes';\r\nimport DashboardEditDemande from './DashboardEditDemande';\r\nimport DashboardEditOffre from './DashboardEditOffre';\r\nimport DashboardProfil from './DashboardEditProfil';\r\nimport DashboardEditUsers from './DashboardEditUsers';\r\nimport DashboardFicheUser from './DashboardFicheUser';\r\nimport DashboardNouveauUser from './DashboardNouveauUser';\r\nimport DashboardNouvelleDemande from './DashboardNouvelleDemande';\r\nimport DashboardNouvelleOffre from './DashboardNouvelleOffre';\r\nimport DashBoardOffreDemandeDetails from './DashboardOffreDemandeDetails';\r\nimport DashboardOffres from './DashBoardOffres';\r\nimport DashboardRegions from './DashboardRegions';\r\nimport DashboardSecteurs from './DashboardSecteurs';\r\nimport DashBoardUsers from './DashBoardUsers';\r\n\r\n\r\ntype Props = {\r\n};\r\n\r\n//Routage du contenu dans le dashboard\r\nconst DashboardContent: React.FC<Props> =()=>{\r\n    const history = useHistory();\r\n    //const auth = useAuth();\r\n    return(\r\n        <div  style={{backgroundColor: '#F8F8F8', padding: '20px'}}>  \r\n            <LastLocationProvider>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/accueil\"><DashboardAccueil/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/offres\"><DashboardOffres/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/demandes\"><DashboardDemandes/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/candidats\"><DashBoardUsers usersType='candidats'/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/entreprises\"><DashBoardUsers usersType='entreprises'/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/admins\"><DashBoardUsers usersType='admins'/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/profil\" ><DashboardProfil history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/secteurs\"><DashboardSecteurs/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/regions\"><DashboardRegions/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/newUser\"><DashboardNouveauUser/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/newOffre\"><DashboardNouvelleOffre/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/newDemande\"><DashboardNouvelleDemande/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/edit/user/:id\"><DashboardEditUsers history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/edit/offre/:id\"><DashboardEditOffre history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/edit/demande/:id\"><DashboardEditDemande history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/ficheUser/:id\"><DashboardFicheUser  history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/details/offre/:id\"><DashBoardOffreDemandeDetails  history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/details/demande/:id\"><DashBoardOffreDemandeDetails  history={history}/></ProtectedDashboardRoutes>\r\n\r\n            </LastLocationProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardContent;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { faAngleDown, faBell, faPlus, faSignOutAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    Avatar,\r\n    Badge,\r\n    Box,\r\n    Button,\r\n    Grid,\r\n    IconButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Cookies from 'js-cookie';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { fetchUtilisateur } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n    logout: () => void;\r\n    profil: () => void;\r\n};\r\n\r\nconst DashboardHeader: React.FC<Props> =({logout,profil})=>{\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const auth = useAuth();\r\n    const history= useHistory();\r\n\r\n\r\n    const [user, setUser] =  useState<UtilisateursType|null|undefined>(auth?.user);\r\n    const theme = useTheme();\r\n\r\n    //mediaQueries\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('xs'));\r\n    const matchesSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    //console.log(matchesSM);\r\n\r\n\r\n    useEffect(()=>{\r\n      getUser();\r\n      },[])\r\n\r\n    //cherche l'user connecté dans la DB/api\r\n    const getUser= async()=>{\r\n        const token = Cookies.get('connected');\r\n        //console.log(token);\r\n        \r\n        let user:UtilisateursType | undefined;\r\n        if(token)\r\n        user  = await fetchUtilisateur(token);\r\n       // console.log(user);\r\n        setUser(user);\r\n    } \r\n  \r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleProfil = () => {\r\n        handleClose();\r\n        profil();\r\n      };\r\n\r\n    //retourne le nom complet de l'utilisateur\r\n    const getUserName =()=> {\r\n        return user?.Prenom+ ' ' + user?.Nom;\r\n    }\r\n\r\n    //returne le niveau d'accès ou type d'utilisateur\r\n    const getAccessLevel =()=> {\r\n        const userAccessLevel = user?.NiveauAcces;\r\n        if(userAccessLevel === AccessLevel.admin)\r\n            return 'Admin';\r\n        else if (userAccessLevel === AccessLevel.entreprise)\r\n            return 'Entreprise';\r\n            else if (userAccessLevel === AccessLevel.stagiaire)\r\n            return 'Étudiant';\r\n     }\r\n\r\n     //retoure les initiales du prenon/nom\r\n     const getInitials =()=> {\r\n        const initialePrenom = user?.Prenom !== undefined ? user?.Prenom.charAt(0) : \"\";\r\n        const initialeNom = user?.Nom !== undefined ? user?.Nom.charAt(0) : \"\";\r\n\r\n        return initialePrenom + initialeNom;\r\n    }\r\n\r\n    return(\r\n        <Grid container alignItems='center'>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                { (history.location.pathname==='/dashboard/admins' \r\n                || history.location.pathname==='/dashboard/entreprises'\r\n                || history.location.pathname==='/dashboard/candidats') &&  auth?.user?.NiveauAcces === AccessLevel.admin?\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Button variant=\"outlined\" startIcon={<FontAwesomeIcon icon={faPlus}  size={matchesSM ? \"sm\": 'lg'}/>}\r\n                        style={{textTransform: 'none'}}\r\n                        onClick={()=>history.push('/dashboard/newUser')}\r\n                        >\r\n                            Nouveau utilisateur\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                :<Grid container spacing={2} justify={matchesSM? 'center':'flex-end'}>\r\n                    {(auth?.user?.NiveauAcces === AccessLevel.entreprise || auth?.user?.NiveauAcces === AccessLevel.admin) &&\r\n                    <Grid item>\r\n                        <Button variant=\"outlined\" startIcon={<FontAwesomeIcon icon={faPlus}  size={matchesSM ? \"sm\": 'lg'}/>}\r\n                        style={{textTransform: 'none'}}\r\n                        onClick={()=>history.push('/dashboard/newOffre')}\r\n                        >\r\n                            Offre de stage\r\n                        </Button>\r\n                    </Grid>\r\n                    }\r\n                    {(auth?.user?.NiveauAcces === AccessLevel.stagiaire || auth?.user?.NiveauAcces === AccessLevel.admin) &&\r\n                    <Grid item>\r\n                        <Button variant=\"outlined\" startIcon={<FontAwesomeIcon icon={faPlus}  size=\"lg\"/>}\r\n                        style={{textTransform: 'none'}}\r\n                        onClick={()=>history.push('/dashboard/newDemande')}\r\n                        >\r\n                            Demande de stage\r\n                        </Button>\r\n                    </Grid>\r\n                    }\r\n                </Grid>\r\n                }\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <Grid container justify={matchesXS? 'center':'flex-end'}>\r\n                    <Box>\r\n                        <Grid container spacing={1} alignItems='center'>\r\n                            <Grid item>\r\n                                <Grid container direction='column' alignItems='flex-end'>\r\n                                    <Typography variant=\"caption\" style={{textTransform: 'none', fontWeight: 'bold'}}>{getUserName()}</Typography> \r\n                                    <Typography variant=\"caption\" style={{textTransform: 'none', color: 'darkgray'}}>{getAccessLevel()}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Avatar>{getInitials()}</Avatar>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <IconButton onClick={handleClick}>\r\n                                    <FontAwesomeIcon icon={faAngleDown} color=\"darkgray\" />\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={handleProfil}>\r\n                                        <ListItemIcon>\r\n                                            <FontAwesomeIcon icon={faUser} color=\"#3e99df\" />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Profil\" />\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                    </MenuItem>\r\n                                    <MenuItem \r\n                                        onClick={logout}>\r\n                                        <ListItemIcon>\r\n                                            <FontAwesomeIcon icon={faSignOutAlt} color=\"#3e99df\" />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Déconnexion\" /> \r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={2}>\r\n                <Grid container justify={matchesXS?'center':matchesSM? 'flex-start':'flex-end'}>\r\n                    <Grid item>\r\n                        <IconButton>\r\n                            <Badge color=\"primary\" variant=\"dot\" overlap=\"circle\">\r\n                                <FontAwesomeIcon icon={faBell}  color=\"darkgray\"/>\r\n                            </Badge>  \r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton onClick={logout}>\r\n                            <FontAwesomeIcon icon={faSignOutAlt} color=\"darkgray\"/> \r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DashboardHeader;\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n    faArrowAltCircleLeft,\r\n    faArrowAltCircleRight,\r\n    faBriefcase,\r\n    faHome,\r\n    faMapMarkedAlt,\r\n    faSignOutAlt,\r\n    faUserGraduate,\r\n    faUserNinja,\r\n    faUserTie,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Grid, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateur } from '../../Api';\r\nimport { Menu } from '../../Enum';\r\nimport { UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport Footer from '../Footer';\r\nimport DashboardContent from './DashBoardContent';\r\nimport DashboardEditProfil from './DashboardEditProfil';\r\nimport DashboardHeader from './DashBoardHeader';\r\n\r\n//items du menu, routes et permissions\r\nconst menuItems =[\r\n    {\r\n        name: Menu.accueil,\r\n        icon: faHome,\r\n        link: \"/dashboard/accueil\",\r\n        accessLevel: [111,333,999]\r\n    },\r\n    {\r\n        name: Menu.offres,\r\n        icon: faArrowAltCircleRight,\r\n        link: \"/dashboard/offres\",\r\n        accessLevel: [111,333,999]\r\n    },\r\n    {\r\n        name: Menu.demandes,\r\n        icon: faArrowAltCircleLeft,\r\n        link: \"/dashboard/demandes\",\r\n        accessLevel: [111,333,999]\r\n    },\r\n    {\r\n        name: Menu.candidats,\r\n        icon: faUserGraduate,\r\n        link: \"/dashboard/candidats\",\r\n        accessLevel: [999]\r\n    },\r\n    {\r\n        name: Menu.entreprises,\r\n        icon: faUserTie,\r\n        link: \"/dashboard/entreprises\",\r\n        accessLevel: [999]\r\n    },\r\n    {\r\n        name: Menu.admins,\r\n        icon: faUserNinja,\r\n        link: \"/dashboard/admins\",\r\n        accessLevel: [999]\r\n    },\r\n    {\r\n        name: Menu.regions,\r\n        icon: faMapMarkedAlt,\r\n        link: \"/dashboard/regions\",\r\n        accessLevel: [999]\r\n    },\r\n    {\r\n        name: Menu.secteurs,\r\n        icon: faBriefcase,\r\n        link: \"/dashboard/secteurs\",\r\n        accessLevel: [999]\r\n    }\r\n];\r\n\r\ntype Props = {\r\n    logout: () => void;\r\n};\r\n\r\n\r\n\r\nconst Dashboard: React.FC<Props> =({logout})=>{\r\n    const auth = useAuth();\r\n    const history= useHistory();\r\n    const [menuItemSelected, setMenuItemSelected] = useState('accueil');\r\n    const [user, setUser] =  useState<UtilisateursType|null|undefined>(auth?.user);\r\n    //MediaQueries\r\n    const theme = useTheme();\r\n    const matchesMD = useMediaQuery(theme.breakpoints.down('md'));\r\n    const matchesSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('xs'));\r\n    //console.log(matchesXS)\r\n\r\n\r\n    useEffect(()=>{\r\n        let location = history.location.pathname;\r\n        if (location === '/dashboard' || location === '/dashboard/') {\r\n         history.push('/dashboard/accueil');\r\n         location='/dashboard/accueil';\r\n        }\r\n        // eslint-disable-next-line array-callback-return\r\n        menuItems.map(item =>{\r\n            if (location === item.link) {\r\n             setMenuItemSelected(item.name);\r\n             history.push(location);\r\n            }         \r\n        })\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      getUser();\r\n      },[])\r\n\r\n      const getUser= async()=>{\r\n        let id='';\r\n        if(auth?.user!==undefined && auth?.user!==null)\r\n        id = auth?.user._id;\r\n        let user : UtilisateursType | undefined = await fetchUtilisateur(id);\r\n        //console.log(user);\r\n        setUser(user);\r\n    } \r\n\r\n    return(\r\n      \r\n       <Wrapper>\r\n            {user  &&\r\n            <Grid container>\r\n                \r\n                <Grid item xs={2}>\r\n                    <Grid container direction='column' \r\n                    style={{backgroundColor: '#3e99df', \r\n                    color: 'white', minHeight: '100vh', height: '100%', \r\n                    borderBottom:  '7px solid #a0c3da'}}\r\n                    >\r\n                        <Grid item style={{ padding: matchesSM? '0px' :matchesMD? '10px':'30px'}}>\r\n                            <Grid container justify='center' spacing={matchesSM? 0: 2} alignItems='center'>\r\n                                <Grid item>\r\n                                    <GestureIcon style={{color: 'white', fontSize: '3rem'}}/>\r\n                                </Grid>\r\n                                {matchesXS===false&&\r\n                                <Grid item>\r\n                                    <Typography variant={matchesSM? 'h6': matchesMD? 'h4': 'h3'} >eStage</Typography>\r\n                                </Grid>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item style={{ marginBottom: '60px', marginTop: '60px'}}>\r\n                            <List>\r\n                                {menuItems.map((item, index) => (\r\n                                    auth?.user ?\r\n                                    item.accessLevel.includes(auth?.user.NiveauAcces) ?\r\n                                        <ListItem  key={'Menu'+item.name+index} \r\n                                        button \r\n                                        onClick={()=>{\r\n                                            setMenuItemSelected(item.name);\r\n                                            history.push(item.link);\r\n                                        }}\r\n                                        style={{\r\n                                        boxSizing: 'border-box',\r\n                                        borderLeft: matchesSM? '0px': menuItemSelected === item.name ? '7px solid #a0c3da' : 'none', \r\n                                        backgroundColor:  menuItemSelected === item.name ? \"#4589b7\" : 'inherit',\r\n                                        paddingLeft:  matchesSM ?'0px': menuItemSelected !== item.name  ? '14px': '7px'\r\n                                        }}\r\n                                        disableGutters\r\n                                        className={'listItem'}\r\n                                    >\r\n                                        <Grid container alignItems='center' >\r\n                                            <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                                                <Grid container justify='center'  >\r\n                                                    <ListItemIcon style={{justifyContent: matchesMD?'center': 'flex-start'}} > \r\n                                                        <FontAwesomeIcon icon={item.icon}  size=\"lg\" color=\"white\" />\r\n                                                    </ListItemIcon>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            {matchesXS===false&&\r\n                                            <Grid item xs={12} sm={12} md={12} lg={9}>\r\n                                                <Grid container style={{textAlign:matchesMD?'center': 'left'}}>\r\n                                                    <ListItemText disableTypography\r\n                                                    style={{fontSize: matchesSM?'0.9em':'1.3em', flexWrap: 'wrap'}}\r\n                                                    >\r\n                                                    {\r\n                                                        item.name\r\n                                                    }\r\n                                                    </ListItemText >\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            }\r\n                                        </Grid>\r\n                                    </ListItem> : null :null\r\n                                    ))}\r\n                            </List>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <List >\r\n                                <ListItem className='listItem' button\r\n                                    disableGutters={matchesSM}\r\n                                    onClick={logout}\r\n                                >\r\n                                    <Grid container alignItems='center' justify='center'>\r\n                                            <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                                                <Grid container justify='center'  >\r\n                                                    <ListItemIcon style={{justifyContent: matchesMD?'center': 'flex-start'}}> \r\n                                                        <FontAwesomeIcon icon={faSignOutAlt} size=\"lg\" color=\"white\"/> \r\n                                                    </ListItemIcon>\r\n                                               </Grid>\r\n                                            </Grid>\r\n                                            {matchesXS===false&&\r\n                                                <Grid item xs={12} sm={12} md={12} lg={9}>\r\n                                                    <Grid container style={{textAlign:matchesMD?'center': 'left'}}>\r\n                                                        <ListItemText \r\n                                                        disableTypography\t\r\n                                                        style={{fontSize: matchesSM?'1em':'1.3em',flexWrap: 'wrap'}}>Déconnexion</ListItemText >\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                 }\r\n                                            </Grid>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Grid item xs={10} style={{position: 'relative'}}>\r\n                    \r\n                    <Grid container direction='column'  style={{padding: '30px', marginBottom: 'auto'}}>\r\n                        <Grid item>\r\n                            <DashboardHeader logout={logout} \r\n                                profil={()=>{\r\n                                            setMenuItemSelected('Profil');\r\n                                            history.push({\r\n                                                pathname: '/dashboard/profil',\r\n                                                state: { data: auth?.user}\r\n                                            });\r\n                                        }}\r\n                        />\r\n                        </Grid>\r\n                        {/*PREMIÈRE CONNEXION*/}\r\n                        <Grid item>\r\n                            {user && user.PremierConnexion ?\r\n                            <Grid container>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant='h4'>Première connexion - Veuillez compléter votre profil</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <DashboardEditProfil history={history}/>\r\n                                </Grid>\r\n                            </Grid> \r\n                            :\r\n                            <Grid container direction='column'>\r\n                                <Grid item xs>\r\n                                    <DashboardContent/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            }\r\n                            \r\n                        </Grid>\r\n                     \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> }\r\n            <Footer/>\r\n        </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n \r\n .listItem:hover{\r\n     background-color: #70aedd !important\r\n }\r\n    \r\n    \r\n`\r\n","import { Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchRegions } from '../Api';\r\nimport { RegionsType } from '../Types';\r\n\r\n\r\n\r\ntype Props = {\r\n    selectedRegionId: (id: string|undefined)=>void\r\n};\r\n\r\nconst ListRegions: React.FC<Props> =({selectedRegionId})=>{\r\n    const [regions, setRegions] = useState<RegionsType[]>([]);\r\n    const [selectedRegion, setSelectedRegion] = useState<RegionsType | undefined>(undefined);\r\n    selectedRegionId(selectedRegion?._id);\r\n    useEffect(()=>{\r\n        getRegions();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n     \r\n      },[])\r\n\r\n      //fetch regions dans l'api\r\n    const getRegions = async () => {\r\n        let regions : RegionsType[] | undefined = await fetchRegions();\r\n        regions = regions.filter(region=> region.Supprime===false);\r\n        regions.sort((a, b) => (a.Name > b.Name) ? 1 : -1);\r\n\r\n        setRegions(regions);\r\n    }\r\n    \r\n    return(\r\n        regions &&\r\n        <Wrapper>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={10}>\r\n                    <Grid container>\r\n                        <Grid item xs><Typography variant='h6' className='titleLine'>Regions</Typography></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <List >\r\n                        {\r\n                        regions?.map( region => (\r\n                            <ListItem \r\n                                className='listItem' \r\n                                button key={region._id} \r\n                                dense\r\n                                selected={selectedRegion?._id===region._id}\r\n                                onClick={()=>{selectedRegion?._id===region._id ? setSelectedRegion(undefined) :setSelectedRegion(region)}}\r\n                            >\r\n                                <ListItemText primary={region.Name} />\r\n                            </ListItem>\r\n                        ))\r\n                        }\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default ListRegions;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n.listItem{\r\n    background-color: #F0F0F0;\r\n    border-left: 7px solid #dcdcdc;\r\n    margin-bottom: 2px;\r\n}\r\n.listItem:hover{\r\n    background-color: #C0C0C0\r\n}\r\n.Mui-selected{\r\n    background-color: #C0C0C0 !important\r\n}\r\n\r\n.titleLine {\r\n    overflow: hidden;\r\n}\r\n\r\n\r\n.titleLine::after {\r\n    content: \" \";\r\n    display: inline-block;\r\n    height: 1em;\r\n    vertical-align: bottom;\r\n    width: 100%;\r\n    margin-right: -100%;\r\n    margin-left: 10px;\r\n    border-top: 8px solid #707070;\r\n}\r\n\r\n `","import { Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchSecteursActivite } from '../Api';\r\nimport { SecteursActiviteType } from '../Types';\r\n\r\n\r\n\r\ntype Props = {\r\n    selectedSecteurId: (id: string|undefined)=>void\r\n};\r\n\r\nconst ListSecteurs: React.FC<Props> =({selectedSecteurId})=>{\r\n    const [secteursActivites, setSecteursActivites] = useState<SecteursActiviteType[]>([]);\r\n    const [selectedSecteur, setSelectedSecteur] = useState<SecteursActiviteType | undefined>(undefined);\r\n    selectedSecteurId(selectedSecteur?._id);\r\n    useEffect(()=>{\r\n        getSecteursActivites();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n     \r\n      },[])\r\n    \r\n      //fetch les secteurs dans l'api\r\n    const getSecteursActivites = async () => {\r\n        let secteursActivites : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n        secteursActivites = secteursActivites.filter(secteur=> secteur.Supprime===false);\r\n        //trie par ordre alphabétique\r\n        secteursActivites.sort((a, b) => (a.Titre > b.Titre) ? 1 : -1);\r\n\r\n        setSecteursActivites(secteursActivites);\r\n    }\r\n    \r\n    return(\r\n        secteursActivites &&\r\n        <Wrapper>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={10}>\r\n                    <Grid container >\r\n                        <Grid item xs><Typography variant='h6' className='titleLine'>Secteurs d'activité</Typography></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <List >\r\n                        {\r\n                        secteursActivites?.map( secteur => (\r\n                            <ListItem \r\n                                className='listItem' \r\n                                button key={secteur._id} \r\n                                dense\r\n                                selected={selectedSecteur?._id===secteur._id}\r\n                                onClick={()=>{selectedSecteur?._id===secteur._id ? setSelectedSecteur(undefined) :setSelectedSecteur(secteur)}}\r\n                            >\r\n                                <ListItemText primary={secteur.Titre} />\r\n                            </ListItem>\r\n                        ))\r\n                        }\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default ListSecteurs;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n.listItem{\r\n    background-color: #F0F0F0;\r\n    border-left: 7px solid #dcdcdc;\r\n    margin-bottom: 2px;\r\n}\r\n.listItem:hover{\r\n    background-color: #C0C0C0\r\n}\r\n.Mui-selected{\r\n    background-color: #C0C0C0 !important\r\n}\r\n\r\n.titleLine {\r\n    overflow: hidden;\r\n}\r\n\r\n\r\n.titleLine::after {\r\n    content: \" \";\r\n    display: inline-block;\r\n    height: 1em;\r\n    vertical-align: bottom;\r\n    width: 100%;\r\n    margin-right: -100%;\r\n    margin-left: 10px;\r\n    border-top: 8px solid #707070;\r\n}\r\n\r\n `","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { Breadcrumbs, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateur, updateOffreDemande } from '../Api';\r\nimport { AccessLevel, Appel } from '../Enum';\r\nimport { OffresDemandesType, UtilisateursType } from '../Types';\r\nimport AppelAction from './AppelAction';\r\nimport ListRegions from './ListRegions';\r\nimport ListSecteurs from './ListSecteurs';\r\nimport useAuth from './auth/useAuth';\r\n\r\ntype Props = {\r\n    history: any,\r\n    type: Appel,\r\n    toast: (text: string)=> void\r\n};\r\n\r\nconst DetailsAnnonces: React.FC<Props> =({history, type, toast})=>{\r\n    const [selectedSecteurID, setSelectedSecteurID] = useState<string | undefined>(undefined);\r\n    const [selectedRegionID, setSelectedRegionID] = useState<string | undefined>(undefined);\r\n    const [offreDemande, setOffreDemande]=useState<OffresDemandesType>(history.location.state.data);\r\n    const [auteur, setAuteur] = useState<UtilisateursType | undefined>(undefined);\r\n    const auth = useAuth();\r\n\r\n    useEffect(()=>{\r\n        getAuteur();\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n      //fetch l'auteur\r\n    const getAuteur = async () => {\r\n        let auteur : UtilisateursType|null = await fetchUtilisateur(offreDemande.Auteur);\r\n        setAuteur(auteur);  \r\n    }\r\n\r\n     //MediaQueries\r\n     const theme = useTheme();\r\n     const matchesMD = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n     //format date yyyy-mm-dd\r\n     function formatDate(date:Date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    const handlePostulerContacter =()=>{\r\n        if(auth?.user?.NiveauAcces===AccessLevel.stagiaire && type===Appel.OFFRE){\r\n            let communication= {\r\n                Date: new Date(),\r\n                EnvoyeParID: auth.user._id,\r\n                Message: 'Postulation',\r\n                NbMessages: 0,\r\n            };\r\n            offreDemande?.Communications.push(communication);\r\n            offreDemande && updateOffreDemande(offreDemande);   \r\n\r\n        } else if ( auth?.user?.NiveauAcces===AccessLevel.entreprise && type===Appel.DEMANDE){\r\n            console.log('contacter candidat');\r\n        } else if (type===Appel.OFFRE && auth?.user?.NiveauAcces!==AccessLevel.stagiaire) {\r\n            toast && toast('Vous devez être connecté en tant que stagiaire pour pouvoir postuler sur une offre de stage.');\r\n            if(!auth?.user)\r\n            history.push('/login');\r\n        } else {\r\n            toast && toast(\"Vous devez être connecté en tant qu'entreprise pour pouvoir contacter le candidat d'une demande de stage.\");\r\n            if(!auth?.user)\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <Wrapper>\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Grid container style={{padding: '50px'}} spacing={matchesMD? 4:0}>\r\n                    <Grid item xs={12} sm={12} md={8}>\r\n                        <Grid container direction='column' spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Breadcrumbs  separator={<NavigateNextIcon fontSize=\"small\" />}  aria-label=\"breadcrumb\">\r\n                                    <Link color=\"inherit\" to=\"/accueil\">\r\n                                        Accueil\r\n                                    </Link>\r\n                                    {type===Appel.OFFRE?\r\n                                    <Link color=\"inherit\" to=\"/accueil/offres\">{'Offres'}</Link> :\r\n                                    <Link color=\"inherit\" to=\"/accueil/demandes\">{'Demandes'}</Link>\r\n                                    }\r\n                                    <Typography color=\"textPrimary\">{offreDemande.Titre}</Typography>\r\n                                </Breadcrumbs>\r\n                            </Grid>                                \r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12} sm={12} md={5} lg={5}>\r\n                                        <Grid container  justify='center'\r\n                                        style={{height: '100%',display: 'flex', alignItems:'center',  border: '1px solid black',\r\n                                        padding: '15px', textAlign:'center'}}>\r\n                                            {auteur&&\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container >\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant='h4'>{auteur?.Entreprise? auteur?.Logo: auteur.Ecole}</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                    <Typography variant='h6'>{auteur?.Entreprise? auteur?.NomEntreprise: offreDemande.ProgrammesSuivi}</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.Ville}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            }\r\n                                        </Grid>    \r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={7} lg={7} >\r\n                                        <Grid container  style={{display: 'flex', alignItems:'center',  border: '1px solid black',padding: '15px'}}>\r\n                                            <Grid item>\r\n                                                <Grid container spacing={3}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant='h4'>{offreDemande.Titre}</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Grid container>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Date de parution: </b>{formatDate(offreDemande.DateParution)}</Grid>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Durée: </b>{offreDemande.DureeSemaines + ' semaines'}</Grid>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Date de début: </b>{formatDate(offreDemande.DateDebut)}</Grid>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Heures: </b>{offreDemande.NombreHeuresSemaine+'/semaine'}</Grid>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Date de fin: </b>{formatDate(offreDemande.DateFin)}</Grid>\r\n                                                            { auteur?.Entreprise &&\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Possibilité d'emploi: </b>{offreDemande.EmploiApresStage ? 'oui':'non'}</Grid>\r\n                                                            }\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Button variant=\"contained\" color=\"primary\" fullWidth className='button'\r\n                                                        onClick={handlePostulerContacter}\r\n                                                        >\r\n                                                            {type===Appel.OFFRE?'Postuler':'Contacter le candidat'}\r\n                                                        </Button> \r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{marginTop: '50px'}}>\r\n                                        <Grid container spacing={8}>\r\n                                        {auteur?.Entreprise ?\r\n                                            <>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography className='upperCaseTitle' variant='h4'>Description de l'offre de stage</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.Description}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography className='upperCaseTitle' variant='h4'>Compétences recherchées</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.CompetencesRecherches}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant='h4' className='upperCaseTitle'>À propos de l'entreprise</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.InformationsSuplementaires}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            </> : \r\n                                            <>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography className='upperCaseTitle' variant='h4'>Description de la demande de stage</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.Description}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography className='upperCaseTitle' variant='h4'>Compétences acquises</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.CompetencesAcquises}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant='h4' className='upperCaseTitle'>Autres informations</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.AutresInformations}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            </>\r\n                                            }\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>    \r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6} md={12} >\r\n                                <ListSecteurs selectedSecteurId={setSelectedSecteurID}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={12}>\r\n                                <ListRegions selectedRegionId={setSelectedRegionID}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <AppelAction type={offreDemande.Type === Appel.OFFRE ? Appel.DEMANDE: Appel.OFFRE}/>\r\n            </Grid>\r\n        </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DetailsAnnonces;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    \r\n.button{\r\n    border-radius:0;\r\n    text-transform: none;\r\n}\r\n\r\n.upperCaseTitle{\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n}\r\n    \r\n`","import { Button, Grid, IconButton, InputBase, Typography } from '@material-ui/core';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport Cookies from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Appel } from '../Enum';\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n    imageURL: string;\r\n    imgSize: number;\r\n    logout: () => void;\r\n    recherche: (recherche:string) => void;\r\n}\r\n\r\n\r\nconst Header: React.FC<Props> =({imageURL,imgSize,logout, recherche})=>{\r\n    const history= useHistory();\r\n\r\n    const handleLogin =()=>{\r\n            history.push('/login');\r\n    }\r\n\r\n    const token = Cookies.get('connected');\r\n\r\n\r\n    return(\r\n    <Wrapper backgroundUrl={imageURL}>\r\n        <div className='filter'  style={{height: imgSize+\"px\" }}>\r\n            <Grid   container \r\n                    direction=\"row\"\r\n                    alignItems=\"center\"\r\n                    className=\"topBlock\"\r\n            >\r\n                <Grid item xl={3} lg={2} md={12} sm={12} xs={12}  style={{textAlign: 'center'}}>\r\n                    <Grid container justify='center' alignItems='center' >\r\n                        <IconButton onClick={()=>history.push('/accueil')}>\r\n                            <Grid item>\r\n                                <GestureIcon style={{color: 'white', fontSize: '3rem'}}/>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h3\" style={{color:'white'}}>eStage</Typography>\r\n                            </Grid>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xl={6} lg={5} md={6} sm={7} xs={12} >\r\n                    <Grid container \r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                    >\r\n                        <Grid item>\r\n                            <Button \r\n                            variant=\"contained\" \r\n                            size=\"medium\" \r\n                            style={{backgroundColor: 'limegreen', color: 'white', textTransform: 'none', marginTop: '10px'}}\r\n                            onClick={()=>history.push({\r\n                                pathname: '/accueil/offres',\r\n                                state: {type: Appel.OFFRE}\r\n                            \r\n                            })}\r\n                            >\r\n                                Trouvez votre stage\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item style={{marginLeft: '5px', marginTop: '10px'}}>\r\n                            <Button variant=\"contained\" size=\"medium\"  \r\n                            style={{backgroundColor: 'limegreen', color: 'white', textTransform: 'none'}}\r\n                            onClick={()=>history.push({\r\n                                pathname: '/accueil/demandes',\r\n                                state: {type: Appel.DEMANDE}\r\n                            })}\r\n                            >\r\n                                Trouvez votre futur stagiaire\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            \r\n                <Grid item xl={3} lg={5} md={6} sm={5} xs={12} style={{marginTop: '10px'}}>\r\n                    <Grid container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                               \r\n                        >\r\n                            <Grid item >\r\n                                {token ?\r\n                                (<>\r\n                                <Grid container spacing={1}  alignItems=\"center\">\r\n                                    \r\n                                    \r\n                                    <Grid item style={{marginTop: '10px'}}>\r\n                                        <Button variant=\"contained\" \r\n                                                size=\"medium\"  \r\n                                                style={{textTransform: 'none'}}\r\n                                                color='secondary'\r\n                                                onClick={logout}\r\n                                        >\r\n                                            Déconnexion\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </>\r\n                                ) \r\n                                :\r\n                                <Grid item style={{marginTop: '10px'}}>\r\n\r\n                                <Button variant=\"contained\" \r\n                                        size=\"medium\"  \r\n                                        style={{backgroundColor: 'white', color: 'dimgray', textTransform: 'none'}}\r\n                                        onClick={handleLogin}\r\n                                >\r\n                                    Connexion\r\n                                </Button>\r\n                                </Grid>\r\n                                }\r\n                                \r\n                                \r\n                            </Grid>\r\n                            <Grid item style={{marginLeft: '10px', marginRight: '10px', marginTop: '10px'}}>\r\n                            {token ? \r\n                                <Button variant=\"contained\" size=\"medium\" color='primary' style={{textTransform: 'none'}} \r\n                                onClick={()=>{history.push('/dashboard')}}>\r\n                                    Dashboard\r\n                                </Button>\r\n                            :    <Button variant=\"contained\" size=\"medium\"  \r\n                                    style={{backgroundColor: 'dimgray', color: 'white', textTransform: 'none'}}\r\n                                    onClick={()=>history.push('/register')}\r\n                                    >\r\n                                    Inscription\r\n                                </Button>\r\n                            }\r\n                            </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"center\"  className=\"centerBlock\">\r\n                <Grid item >\r\n                    <Grid container  \r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Grid item>\r\n                            <Typography variant=\"h3\" style={{color:'white', textAlign:'center', marginBottom: '20px'}}>Trouvez votre stage!</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                                <Grid container  alignItems=\"center\" \r\n                                style={{borderRadius: '0',textTransform: 'none', backgroundColor: 'white', padding: '5px', width: '50vw'}}>\r\n                                    <Grid item xl={9} lg={8} md={8} sm={7} xs={12}>\r\n                                        <InputBase \r\n                                            fullWidth\r\n                                            placeholder=\"Mot clé\"\r\n                                            onChange={(e)=>recherche(e.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xl={3} lg={4} md={4} sm={5} xs={12}>\r\n                                        <Button \r\n                                        data-testid=\"button-recherche\"\r\n                                        onClick={()=>history.push('/accueil/offres')}\r\n                                        fullWidth variant=\"contained\" color=\"primary\" style={{borderRadius: '0',textTransform: 'none'}}>\r\n                                            Rechercher\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    \r\n    </Wrapper>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\nexport const Wrapper = styled.div<{backgroundUrl: string}>`\r\n    background-image: url(${props => props.backgroundUrl});\r\n    background-size: cover;\r\n    background-repeat:no-repeat;\r\n    background-position:  center;\r\n    \r\n    \r\n    .filter{\r\n        background:rgba(0,0,0,0.6);\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding-top: 15px\r\n    }\r\n\r\n    .topBlock{\r\n        flex:1;\r\n        align-content: flex-start;\r\n\r\n    }\r\n    .centerBlock{\r\n       flex:2;\r\n       align-content: flex-start;\r\n\r\n    }\r\n    \r\n    \r\n`","import { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Container,\r\n    Divider,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport Cookies from 'js-cookie';\r\nimport { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { addUtilisateur, fetchUtilisateurs } from '../Api';\r\nimport { UtilisateursType } from '../Types';\r\nimport useAuth from './auth/useAuth';\r\n\r\ntype Props = {\r\n    login: boolean,\r\n    toast?:()=> any\r\n};\r\n\r\ninterface State {\r\n    password: string,\r\n    confirmation: string,\r\n    nom: string,\r\n    prenom: string,\r\n    email: string,\r\n    showPassword: boolean,\r\n    showConfirmation: boolean,\r\n    entreprise: boolean|undefined,\r\n    NiveauAcces: number,\r\n    nomEntreprise: string\r\n  }\r\n\r\n\r\n  //formulaires de login et création d'utilisateur\r\nconst Login: React.FC<Props> =({login,toast})=>{\r\n    const [values, setValues] = useState<State>({\r\n        password: '',\r\n        confirmation: '',\r\n        nom: '',\r\n        prenom: '',\r\n        email: '',\r\n        showPassword: false,\r\n        showConfirmation: false,\r\n        entreprise: undefined,\r\n        NiveauAcces: 111,\r\n        nomEntreprise: ''\r\n      });\r\n    const [error,setError] = useState<boolean>(false);\r\n    const auth = useAuth();\r\n    const history = useHistory();\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [update, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingUtilisateur, setUpdatingUtilisateur] = useState(true);\r\n    const [addedUtilisateur, setAddedUtilisateur] = useState(false);\r\n\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n      };\r\n\r\n      const handleClickShowConfirmation = () => {\r\n        setValues({ ...values, showConfirmation: !values.showConfirmation });\r\n      };\r\n    \r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    const handleConnection = async (e:any) => {\r\n        e.preventDefault();\r\n        //console.log('email:', values.email);\r\n        //console.log('password:', values.password);\r\n        const utilisateurs : UtilisateursType[] | undefined = await fetchUtilisateurs();\r\n        const utilisateur=utilisateurs.find(utilisateur => utilisateur.Courriel===values.email && utilisateur.MotdePasse===values.password);\r\n   \r\n        if (utilisateur) {\r\n           auth?.signIn(utilisateur);\r\n           Cookies.set('connected', utilisateur._id);  \r\n        } else {\r\n            toast && toast();\r\n        }\r\n        \r\n    }\r\n\r\n    const handleCreation= async (e:any)=>{\r\n        e.preventDefault();\r\n        setError(false);\r\n        let erreur= false;\r\n\r\n    if(values.confirmation!== values.password){\r\n        setError(true);\r\n        erreur=true;\r\n    } \r\n    if(values.entreprise === undefined){\r\n        setError(true);\r\n        erreur=true;\r\n    } \r\n\r\n       let newUser: UtilisateursType={\r\n           Prenom: values.prenom,\r\n           Nom: values.nom,\r\n           Courriel: values.email,\r\n           Entreprise: values.entreprise||false,\r\n           MotdePasse: values.password,\r\n           Valide: false,\r\n           Supprime: false,\r\n           Actif: true,\r\n           PremierConnexion: true,\r\n           NomEntreprise: values.nomEntreprise,\r\n           NiveauAcces:values.NiveauAcces,\r\n           _id:'',\r\n           Adresse: '',\r\n           Ville: '',\r\n           Region: '',\r\n           Logo:'',\r\n           Telephone:'',\r\n           SiteWeb:'',\r\n           CV:'',\r\n           MessageMotivation:'',\r\n           SecteursActivites: [],\r\n           Ecole:'',\r\n           PostesStagiaires:''\r\n        }\r\n\r\n    if(!erreur){\r\n        utilisateurAdded(newUser);\r\n    }\r\n\r\n    }\r\n\r\n    async function utilisateurAdded(newUser: UtilisateursType) {\r\n        try {\r\n            setUpdatingUtilisateur(true);\r\n            const update=await addUtilisateur(newUser)\r\n            setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingUtilisateur(false);\r\n            let values={\r\n                password: '',\r\n                confirmation: '',\r\n                nom: '',\r\n                prenom: '',\r\n                email: '',\r\n                showPassword: false,\r\n                showConfirmation: false,\r\n                entreprise: undefined,\r\n                NiveauAcces: 111,\r\n                nomEntreprise: ''\r\n            };\r\n            setValues(values);\r\n            console.log(values);\r\n            setAddedUtilisateur(true);\r\n        }\r\n      }\r\n\r\n\r\n    return(\r\n    <Wrapper>\r\n        <Container className='login'>\r\n                {login ?\r\n                <Grid container justify='center' spacing={4}>\r\n                    <Grid item xs={12}>\r\n                        <form onSubmit={(e)=>handleConnection(e)}>\r\n\r\n                        <Grid container spacing={4} >\r\n                            <Grid item xs={12} >\r\n                                <Typography variant='h3'>Connexion</Typography> \r\n                                <p>Bienvenue sur la plateforme de connexion et inscription de eStage.</p>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\" fullWidth required>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                id=\"input-courriel\"\r\n                                                label=\"Courriel\"\r\n                                                variant=\"outlined\"\r\n                                                type='email'\r\n                                                name='Courriel'\r\n                                                required\r\n                                                onChange={handleChange('email')}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                                            <InputLabel htmlFor=\"outlined-adornment-password\">Mot de passe</InputLabel>\r\n                                            <OutlinedInput\r\n                                                fullWidth\r\n                                                id=\"outlined-adornment-password\"\r\n                                                type={values.showPassword ? 'text' : 'password'}\r\n                                                value={values.password}\r\n                                                onChange={handleChange('password')}\r\n                                                endAdornment={\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                    >\r\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                                }\r\n                                                labelWidth={130}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                            <Grid item xs={12}>\r\n                                <Grid container justify='flex-end'>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"large\"\r\n                                            type='submit'\r\n                                            endIcon={<FontAwesomeIcon icon={faSignInAlt}  color=\"white\"/>}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\">Connexion</Typography>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>  \r\n                            </Grid>\r\n                        </Grid>\r\n                        </form>\r\n                    </Grid>  \r\n                    <Grid item xs={12}>\r\n                        <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify='center'>\r\n                                    <Grid item>\r\n                                        <Typography>Vous n'avez pas de compte?</Typography>\r\n                                    </Grid>\r\n                                </Grid>      \r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify='center'>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            className='buttonCreer'\r\n                                            variant=\"contained\"\r\n                                            size=\"large\"\r\n                                            onClick={()=>{\r\n                                                history.push('/register');\r\n                                                setAddedUtilisateur(false);\r\n                                            }}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\">Créer votre compte</Typography>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid> \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                : \r\n                \r\n                <Grid container>\r\n                    {addedUtilisateur===false?\r\n                    <Grid item xs={12}>\r\n                        <form onSubmit={(e)=>handleCreation(e)}>\r\n                        <Grid container spacing={3} >\r\n                            <Grid item xs={12} >\r\n                                <Typography variant='h3'>Créez votre compte</Typography> \r\n                                <p>Informations</p>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={2} >\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container spacing={2} alignItems='center'>\r\n                                            <Grid item> <FormLabel>Vous êtes?</FormLabel></Grid>\r\n                                            <Grid item>\r\n                                                <ButtonGroup disableElevation variant=\"contained\"  >\r\n                                                    <Button \r\n                                                    variant={values.entreprise ? 'contained' : 'outlined'}\r\n                                                    style={{ textTransform: 'none'}} \r\n                                                    color='primary'\r\n                                                    onClick={()=>setValues({ ...values, entreprise: true,NiveauAcces: 333 })}\r\n                                                    >\r\n                                                        Une entreprise\r\n                                                    </Button>\r\n                                                    <Button \r\n                                                    style={{textTransform: 'none'}}\r\n                                                    variant={!values.entreprise&& values.entreprise!==undefined  ? 'contained' : 'outlined'} \r\n                                                    onClick={()=>setValues({ ...values, entreprise: false,NiveauAcces: 111 })}\r\n                                                    color='primary'\r\n                                                    >\r\n                                                        Un étudiant\r\n                                                    </Button>\r\n                                                </ButtonGroup>  \r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                            <FormHelperText \r\n                                                error={error ? values.entreprise===undefined: error }>\r\n                                                {error? values.entreprise===undefined ? 'Vous devez choisir une option!':null:null } \r\n                                                </FormHelperText>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container spacing={2}>\r\n                                            {values.entreprise &&\r\n                                            <Grid item xs={12}>\r\n                                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    id=\"input-nomEntreprise\"\r\n                                                    label=\"Nom de l'entreprise\"\r\n                                                    variant=\"outlined\"\r\n                                                    defaultValue={values.nomEntreprise}\r\n                                                    required\r\n                                                    onChange={handleChange('nomEntreprise')}\r\n\r\n                                                />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            }\r\n                                            <Grid item xs={6}>\r\n                                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    id=\"input-prenom\"\r\n                                                    label={values.entreprise?'Prénom de la personne responsable':'Prénom'}\r\n                                                    variant=\"outlined\"\r\n                                                    defaultValue={values.prenom}\r\n                                                    required\r\n                                                    onChange={handleChange('prenom')}\r\n\r\n                                                />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                                    <TextField\r\n                                                        fullWidth\r\n                                                        id=\"input-nom\"\r\n                                                        label={values.entreprise?'Nom de la personne responsable':'Nom'}\r\n                                                        variant=\"outlined\"\r\n                                                        defaultValue={values.nom}\r\n                                                        required\r\n                                                        onChange={handleChange('nom')}\r\n                                                    />\r\n                                                    </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\" fullWidth required>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                id=\"input-courriel\"\r\n                                                label=\"Courriel\"\r\n                                                variant=\"outlined\"\r\n                                                type='email'\r\n                                                required\r\n                                                onChange={handleChange('email')}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                                            <InputLabel htmlFor=\"outlined-adornment-password\">Mot de passe</InputLabel>\r\n                                            <OutlinedInput\r\n                                                required\r\n                                                fullWidth\r\n                                                id=\"outlined-adornment-password\"\r\n                                                type={values.showPassword ? 'text' : 'password'}\r\n                                                value={values.password}\r\n                                                onChange={handleChange('password')}\r\n                                                endAdornment={\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                    >\r\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                                }\r\n                                                labelWidth={110}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                                            <InputLabel htmlFor=\"outlined-adornment-confirmation\">Confirmez le nouveau mot de passe</InputLabel>\r\n                                            <OutlinedInput\r\n                                                required\r\n                                                fullWidth\r\n                                                id=\"outlined-adornment-confirmation\"\r\n                                                type={values.showConfirmation ? 'text' : 'password'}\r\n                                                value={values.confirmation}\r\n                                                onChange={handleChange('confirmation')}\r\n                                                endAdornment={\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowConfirmation}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                    >\r\n                                                    {values.showConfirmation ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                                }\r\n                                                labelWidth={300}\r\n                                            />\r\n                                        </FormControl>\r\n                                        <FormHelperText \r\n                                            error={error ? values.password!==values.confirmation: error }>\r\n                                            {error? values.password!==values.confirmation ? 'Les mots de passe doivent être identiques!':null:null } \r\n                                        </FormHelperText>\r\n                                    </Grid>\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Grid container >\r\n                                    <Grid item>\r\n                                        <Link to='/login'>Vous avez déjà un compte ?</Link>\r\n                                    </Grid>\r\n                                </Grid>  \r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={6}>\r\n                                <Grid container justify='flex-end'>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"large\"\r\n                                            type='submit'\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\">Creér le compte</Typography>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>  \r\n                            </Grid>\r\n                        </Grid>                            \r\n                        </form>\r\n                    </Grid> :\r\n                    <Grid container spacing={3} >\r\n                        <Grid item>\r\n                            <Typography>Votre compte a bien été crée!</Typography>              \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to='/login'>Voulez-vous vous connecter?</Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link onClick={()=>setAddedUtilisateur(false)} to='/register'>Voulez-vous vous créer une autre compte?</Link>\r\n                        </Grid>\r\n                    </Grid>   \r\n                    \r\n                    }\r\n                </Grid>\r\n                \r\n                \r\n                }\r\n        </Container>      \r\n    </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.login {\r\n   padding: 60px;\r\n   margin-top: 50px;\r\n   margin-bottom: 50px;\r\n   border: 2px solid black;\r\n   border-left: 12px solid black;\r\n   border-right: 12px solid black;\r\n   background-color: WhiteSmoke\r\n\r\n}\r\n  \r\n  .buttonCreer{\r\n      background-color: #e48400;\r\n      color: white;\r\n  }\r\n  .buttonCreer:hover{\r\n      color: black;\r\n  }\r\n`","export default __webpack_public_path__ + \"static/media/contact.e5473735.jpg\";","import { Button, Container, Grid, TextField, Typography } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport styled from 'styled-components';\r\n\r\nimport bgContact from '../images/contact.jpg';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\n\r\n//contact form ---formsubmit.co\r\nconst NousJoindre: React.FC<Props> =()=>{\r\n\r\n    return(\r\n      <Wrapper backgroundUrl={bgContact}>\r\n        <Container className='contact'>\r\n          <form action=\"https://formsubmit.co/eric.martins.01@edu.cegeptr.qc.ca\" method='post'>\r\n            <Grid container spacing={3} className='contactForm' >\r\n              <Grid item xs={12}>\r\n                <Typography variant='h3'>Nous joindre</Typography> \r\n                <p>Écrivez nous si vouz avez un problème, une question ou une sugestion.</p>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField id=\"outlined-basic\" label=\"Prénom\" variant=\"outlined\" fullWidth name='prenom'  required/>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField id=\"outlined-basic\" label=\"Nom\" variant=\"outlined\" fullWidth name='nom' required/>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField id=\"outlined-basic\" label=\"Courriel\" variant=\"outlined\" fullWidth  name='courriel' required type='email'/>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField id=\"outlined-basic\" label=\"Message\" variant=\"outlined\"  multiline rows='5' fullWidth name='message' required/>\r\n                <input type=\"hidden\" name=\"_next\" value=\"https://martins81-web.github.io/projet_synthese_ericmartins/merci\"/>\r\n                <input type=\"hidden\" name=\"_captcha\" value=\"false\"/>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<SendIcon/>}\r\n                    type='submit'\r\n                    \r\n                  >\r\n                    Envoyer\r\n                  </Button>\r\n              </Grid>\r\n            </Grid>\r\n            \r\n          </form>\r\n        </Container>\r\n      </Wrapper>\r\n    )\r\n}\r\n\r\nexport default NousJoindre;\r\n\r\nexport const Wrapper = styled.div<{backgroundUrl: string}>`\r\n    background-image: url(${props => props.backgroundUrl});\r\n    \r\n    \r\n    \r\n`","import { Grid } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchOffresDemandes } from '../Api';\r\nimport { Appel } from '../Enum';\r\nimport { OffresDemandesType } from '../Types';\r\nimport CardDernieresAnnonces from './CardDernieresAnnonces';\r\n\r\n\r\n\r\ntype Props = {\r\n    type: Appel\r\n    selectedSecteurID?: string| undefined, \r\n    selectedRegionID?:  string| undefined,\r\n    recherche: string,\r\n    toast: (text: string)=> void\r\n\r\n};\r\n\r\nconst ListOffresDemandes: React.FC<Props> =({type, selectedSecteurID, selectedRegionID,recherche, toast})=>{\r\n    const [offresDemandes, setOffresDemandes] = useState<OffresDemandesType[]>([]);\r\n    useEffect(()=>{\r\n        getOffresDemandes();\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    \r\n    const getOffresDemandes = async () => {\r\n        let offresDemandes : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        // Filtre les offres valides\r\n        offresDemandes = offresDemandes.filter(offreDemande=> offreDemande.Supprime===false  && offreDemande.Valide );\r\n        // Trié par date\r\n        offresDemandes.sort((a, b) => (a.DateParution < b.DateParution) ? 1 : -1);\r\n        // Garde juste les 4 offre vedettes les plus récentes\r\n        //console.log(offresDemandes);\r\n        setOffresDemandes(offresDemandes);  \r\n    }\r\n    return(\r\n        <Grid container spacing={3}>\r\n            {offresDemandes.map( offreDemande => (\r\n                offreDemande.SecteurActivite.includes(selectedSecteurID||\"\") && offreDemande.Region.includes(selectedRegionID||\"\") &&\r\n                offreDemande.Titre.toLowerCase().includes(recherche.toLowerCase()) && offreDemande.Type===type &&\r\n                <Grid item xs={12} key={offreDemande._id}>\r\n                    <CardDernieresAnnonces type={type} offreDemande={offreDemande}  toast={(text)=>toast(text)}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ListOffresDemandes;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    \r\n\r\n    \r\n`","import { Breadcrumbs, Grid, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Appel } from '../Enum';\r\nimport AppelAction from './AppelAction';\r\nimport ListOffresDemandes from './ListOffresDemandes';\r\nimport ListRegions from './ListRegions';\r\nimport ListSecteurs from './ListSecteurs';\r\n\r\ntype Props = {\r\n    type: Appel,\r\n    recherche: string,\r\n    toast: (text: string)=> void\r\n\r\n};\r\n\r\n\r\n//lists offres/demandes\r\nconst OffresDemandes: React.FC<Props> =({type, recherche, toast})=>{\r\n    const [selectedSecteurID, setSelectedSecteurID] = useState<string | undefined>(undefined);\r\n    const [selectedRegionID, setSelectedRegionID] = useState<string | undefined>(undefined);\r\n     //MediaQueries\r\n     const theme = useTheme();\r\n     const matchesMD = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return(\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Grid container style={{padding: '50px'}} spacing={matchesMD? 4:0}>\r\n                    <Grid item xs={12} sm={12} md={8}>\r\n                        <Grid container direction='column' spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Breadcrumbs  separator={<NavigateNextIcon fontSize=\"small\" />}  aria-label=\"breadcrumb\">\r\n                                    <Link color=\"inherit\" to=\"/accueil\">\r\n                                        Accueil\r\n                                    </Link>\r\n                                    <Typography color=\"textPrimary\">{type.toString().charAt(0).toUpperCase()+type.slice(1)+'s de stage'}</Typography>\r\n                                </Breadcrumbs>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <ListOffresDemandes type={type} selectedSecteurID={selectedSecteurID} selectedRegionID={selectedRegionID} recherche={recherche} toast={(text)=>toast(text)}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6} md={12} >\r\n                                <ListSecteurs selectedSecteurId={setSelectedSecteurID}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={12}>\r\n                                <ListRegions selectedRegionId={setSelectedRegionID}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <AppelAction type={type === Appel.OFFRE ? Appel.DEMANDE: Appel.OFFRE}/>\r\n            </Grid>\r\n        </Grid>\r\n       \r\n    )\r\n}\r\n\r\nexport default OffresDemandes;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    \r\n\r\n    \r\n`","export default __webpack_public_path__ + \"static/media/accueil.8666dc5f.jpg\";","import { Container, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ntype Props = {\r\n    \r\n};\r\n//page statique\r\nconst FormSubmittedMerci: React.FC<Props> =()=>{\r\n    return(\r\n        <Container className='politique'>\r\n            <Typography variant='h3' >Merci de nous contacter!</Typography>  \r\n            <Typography>Nous vous remercions de nous avoir contacté. </Typography>  \r\n            <Typography>Un de nos collègues communiquera avec vous dans les plus bref des délais!</Typography> \r\n            <Typography style={{marginBottom: '20px'}}><b>Passez une bonne journée!!</b></Typography>    \r\n            <Link to=\"/accueil\"  >Retourner à l'accueil</Link>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormSubmittedMerci;","export default __webpack_public_path__ + \"static/media/notFound.d232d547.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport imgNotFound from '../images/notFound.jpg';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { Grid } from '@material-ui/core';\r\n\r\ntype Props = {\r\n};\r\n\r\nconst NotFound: React.FC<Props> =()=>{\r\n    return(\r\n    <Grid container >\r\n        <Grid item xs={12}>\r\n            <Grid container  justify='center'>\r\n                <Image src={imgNotFound} fluid alt=\"not found\"/> \r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Grid container  justify='center'>\r\n                <Link to=\"/\">\r\n                    <b>Revenir sur la page d'accueil</b>\r\n                </Link>\r\n            </Grid>  \r\n        </Grid>    \r\n    </Grid>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import './App.sass';\n\nimport Cookies from 'js-cookie';\nimport { useEffect, useState } from 'react';\nimport { useLayoutEffect } from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nimport { fetchUtilisateurs } from './Api';\nimport Accueil from './components/Accueil';\nimport APropos from './components/APropos';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport ProtectedLogin from './components/auth/ProtectedLogin';\nimport useAuth from './components/auth/useAuth';\nimport Confidentialite from './components/Confidentialite';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport DetailsAnnonces from './components/DetailsAnnonces';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport NousJoindre from './components/NousJoindre';\nimport OffresDemandes from './components/OffresDemandes';\nimport { Appel, Size } from './Enum';\nimport BGImage from './images/accueil.jpg';\nimport { UtilisateursType } from './Types';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport FormSubmittedMerci from './components/formSubmittedMerci';\nimport NotFound from './components/NotFound';\n\nfunction App() {\n  const [recherche, setRecherche]= useState<string>('');\n\n  const offre = () => toast.error(<p>Vous devez vous connecter en tant qu'<b>ENTREPRISE</b> pour pouvoir publier une offre de stage!</p>);\n  const demande = () => toast.error(<p>Vous devez vous connecter en tant que <b>STAGIAIRE</b> pour pouvoir publier une demande de stage!</p>);\n  const loginToast = () =>toast.error(<><h5>Erreur</h5>\n    <p>Votre courriel ou votre mot de passe est invalide.\n    Assurez-vous d'avoir le bon courriel et le bon mot de passe et essayez à nouveau.</p></>);\n  const customToast =(text:string)=> toast.error(text);\n\n  const auth = useAuth();\n  const history = useHistory();\n  const location = useLocation(); \n  //console.log(location.pathname); \n\n  document.title =location.pathname.includes('/dashboard') ? 'eStage: Dashboard':'eStage: Publique';\n\n\n  //Ça fait scrollToTop dans tous les changements de route \n  useLayoutEffect(() => {\n    if(location.pathname!=='/login' && location.pathname!=='/register')\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  const getImage = ()=>{\n    if(location.pathname === \"/accueil\")\n    return BGImage;\n    else return BGImage;\n  }\n\n  const logout = () => {\n    //console.log('logout');\n    Cookies.remove('connected');\n    auth?.signOut();\n    history.push('/accueil');\n  }\n\n  \n  useEffect(()=>{\n    handleConnectionfromCookie(); //appel de la fonction qui vérifie s'il y a un cookie de connection\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  //vérifie s'il y a un cookie de connexion et fait la connexion\n  const handleConnectionfromCookie = async () => {\n    const token = Cookies.get('connected');\n    //console.log(token);\n    const utilisateurs : UtilisateursType[] | undefined = await fetchUtilisateurs();\n    const utilisateur=utilisateurs.find(utilisateur => utilisateur._id === token);\n\n    if (utilisateur) {\n        auth?.signIn(utilisateur);\n        Cookies.set('connected', utilisateur._id);  \n    }\n  \n  }\n\n\n\n  return (\n    <>\n      {\n      !location.pathname.includes('/dashboard') && !location.pathname.includes('/notFound') &&\n      <Header imageURL={getImage()} \n              imgSize={!location.pathname.includes('/merci') ?Size.BIG: Size.SMALLER}\n              logout={logout}\n              recherche={(recherche)=>setRecherche(recherche)}\n      />\n      } \n      <Switch>\n        <Redirect exact from=\"/dashboard/update\" to=\"/dashboard\"/>\n        <Redirect exact from=\"/\" to=\"/accueil\" />\n        <Route exact path=\"/accueil\"><Accueil toast={(type)=>type==='offre'? offre: type==='demande'? demande : customToast(type)} /></Route>\n        <Route path=\"/contact\" component={NousJoindre}/>\n        <Route path=\"/confidentialite\" component={Confidentialite}/>\n        <Route path=\"/apropos\" component={APropos}/>\n        <Route path=\"/accueil/offres\"><OffresDemandes type={Appel.OFFRE} recherche={recherche} toast={(text)=> customToast(text)}/></Route>\n        <Route path=\"/accueil/offre/:id\"><DetailsAnnonces history={history} type={Appel.OFFRE} toast={(text)=> customToast(text)}/></Route>\n        <Route path=\"/accueil/Demandes\"><OffresDemandes type={Appel.DEMANDE} recherche={recherche} toast={(text)=> customToast(text)}/></Route>\n        <Route path=\"/accueil/demande/:id\"><DetailsAnnonces history={history} type={Appel.DEMANDE} toast={(text)=> customToast(text)}/></Route> \n        <Route exact path=\"/merci\" component={FormSubmittedMerci}></Route>\n        <PrivateRoute path=\"/dashboard/\"><Dashboard logout={logout}/></PrivateRoute>\n        <ProtectedLogin path=\"/login\" ><Login login={true} toast={loginToast}/></ProtectedLogin>\n        <ProtectedLogin path=\"/register\" ><Login login={false}/></ProtectedLogin> \n        <Route path=\"/notFound\" component={NotFound} />\n        <Redirect from=\"**\" to=\"/notFound\" />\n      </Switch>\n      <ToastContainer limit={1}/>\n\n      {\n      !location.pathname.includes('/dashboard') && !location.pathname.includes('/notFound') && < Footer/>\n      } \n      \n      \n    </>\n  );\n}\nexport default App;\n\n\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport AuthProvider from './components/auth/AuthProvider';\n\n\n\nReactDOM.render(\n <AuthProvider>\n      <Router basename=\"/projet_synthese_ericmartins/\">\n        <App />\n      </Router>\n  </AuthProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}