{"version":3,"sources":["Enum.tsx","Api.tsx","images/demande.jpg","images/offre.jpg","components/auth/dashboardAuth.ts","components/auth/useAuthProvider.ts","components/auth/AuthProvider.tsx","components/auth/useAuth.ts","components/AppelAction.tsx","components/CardDernieresAnnonces.tsx","components/DerniersAnnonces.tsx","components/OffresVedettes.tsx","components/Accueil.tsx","images/apropos1.jpg","images/apropos2.jpg","images/apropos3.jpg","images/apropos4.jpg","components/APropos.tsx","components/auth/PrivateRoute.tsx","components/auth/ProtectedLogin.tsx","components/Confidentialite.tsx","components/Footer.tsx","components/auth/ProtectedDashboardRoutes.tsx","components/Dashboard/DashboardCardDemande.tsx","components/Dashboard/DashboardCardOffre.tsx","components/Dashboard/DashboardAccueil.tsx","components/Dashboard/DashboardDemandes.tsx","components/Selects/SelectRegion.tsx","components/Selects/SelectRemuneration.tsx","components/Selects/SelectSecteur.tsx","components/Selects/SelectStagiaire.tsx","components/Dashboard/DashboardEditDemande.tsx","components/Selects/SelectEntreprise.tsx","components/Dashboard/DashboardEditOffre.tsx","components/Dashboard/DashboardEditProfil.tsx","components/Dashboard/DashboardEditUsers.tsx","components/Dashboard/DashboardFicheUser.tsx","components/Dashboard/DashboardNouveauUser.tsx","components/Dashboard/DashboardNouvelleDemande.tsx","components/Dashboard/DashboardNouvelleOffre.tsx","components/Dashboard/DashBoardOffres.tsx","components/Dashboard/DashboardRegions.tsx","components/Dashboard/DashboardSecteurs.tsx","components/Dashboard/DashBoardUsersCard.tsx","components/Dashboard/DashBoardUsers.tsx","components/Dashboard/DashBoardContent.tsx","components/Dashboard/DashBoardHeader.tsx","components/Dashboard/Dashboard.tsx","components/ListRegions.tsx","components/ListSecteurs.tsx","components/DetailsAnnonces.tsx","components/Header.tsx","components/Login.tsx","images/contact.jpg","components/NousJoindre.tsx","components/ListOffresDemandes.tsx","components/OffresDemandes.tsx","images/accueil.jpg","components/formSubmittedMerci.tsx","App.tsx","index.tsx"],"names":["Size","Appel","Menu","AccessLevel","ENDPOINT","fetchOffresDemandes","a","fetch","json","data","updateOffreDemande","offreDemande","_id","offreDemandeToEdit","method","headers","body","JSON","stringify","updated","addOffreDemande","OffreDemande","offreDemandeToAdd","then","response","console","log","catch","err","fetchRegions","updateRegion","region","regionToEdit","addRegion","regionToAdd","added","fetchSecteursActivite","updateSecteurActivite","secteur","secteurToEdit","addSecteurActivite","secteurToAdd","fetchUtilisateurs","fetchUtilisateur","id","updateUtilisateur","user","userToEdit","addUtilisateur","utilisateur","utilisateurToAdd","dashboardAuth","signIn","cb","setTimeout","signOut","useAuthProvider","useState","setUser","AuthContext","createContext","AuthProvider","children","auth","Provider","value","useAuth","useContext","AppelAction","type","toast","history","useHistory","theme","useTheme","matchesMD","useMediaQuery","breakpoints","down","Wrapper","Grid","container","OFFRE","item","xs","sm","md","style","backgroundColor","paddingTop","paddingBottom","className","alignContent","direction","Typography","variant","fontWeight","color","marginTop","marginBottom","Button","size","borderRadius","textTransform","onClick","NiveauAcces","stagiaire","push","DEMANDE","Image","src","imgDemande","fluid","alt","width","imgOffre","entreprise","styled","div","CardDernieresAnnonces","cardType","undefined","auteur","setAuteur","useEffect","getAuteur","Auteur","data-testid","Card","display","justifyContent","flexDirection","height","CardHeader","title","Titre","subheader","NomEntreprise","Ville","getAuteurNom","CardContent","alignItems","Description","justify","Logo","getLogo","CardActions","name","pathname","state","DerniersAnnonces","offresDemandes","setOffresDemandes","getOffresDemandes","filter","Supprime","Type","Valide","sort","b","DateParution","splice","length","textAlign","lg","spacing","map","OffresVedettes","offres","setOffres","getOffres","offre","Vedette","position","xl","Accueil","APropos","Container","fontSize","apropos1","rounded","apropos2","apropos3","padding","apropos4","PrivateRoute","rest","token","Cookies","get","to","ProtectedLogin","Confidentialite","Footer","location","useLocation","includes","ProtectedDashboardRoutes","DashboardCardDemande","demande","updateDemande","setUpdate","setUpdatingOffreDemande","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","offreDemandeUpdated","update","handleSupprimer","borderTop","borderBottom","icon","faUserGraduate","Prenom","Nom","Ecole","ProgrammesSuivi","DateDebut","DateFin","startIcon","faEdit","faTimes","DashboardCardOffre","updateOffre","faUserTie","admin","FormControlLabel","control","Switch","checked","onChange","label","DashboardAccueil","demandes","setDemandes","getDemandes","faLevelDownAlt","top","DashboardDemandes","recherche","setRecherche","TextField","e","target","InputProps","endAdornment","InputAdornment","toLowerCase","SelectRegion","selectedId","regions","setRegions","selectedRegion","setSelectedRegion","getRegions","Name","handleChange","event","find","FormControl","minWidth","defaultValue","required","select","fullWidth","margin","MenuItem","SelectRemuneration","selected","React","remuneration","setRemuneration","index","SelectSecteur","secteurs","setSecteurs","selectedSecteur","setSelectedsecteur","getsecteurs","maxWidth","whiteSpace","overflow","textOverflow","SelectStagiaire","stagiaires","setStagiaires","selectedStagiaire","setSelectedStagiaire","getstagiaires","Entreprise","NomComplet","DashboardEditDemande","setDemande","setUpdatingDemande","handleSave","preventDefault","demandeUpdated","DureeSemaines","onSubmit","SecteurActivite","Region","utils","DateFnsUtils","autoOk","inputVariant","format","InputAdornmentProps","differenceInWeeks","placeholder","NombreHeuresSemaine","remu","Remuneration","multiline","rows","CompetencesAcquises","InformationsSuplementaires","AutresFormations","SelectEntreprise","entreprises","setEntreprises","selectedEntreprise","setSelectedEntreprise","getEntreprises","DashboardEditOffre","setOffre","setUpdatingOffre","handleChangeCheck","OffreUpdated","component","EmploiApresStage","inputProps","CompetencesRecherches","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","useStyles","makeStyles","createStyles","formControl","chips","flexWrap","chip","noLabel","input","border","DashboardProfil","classes","secteursActivites","setSecteursActivites","setUpdatingUser","getSecteursActivites","getUser","Field","key","handleChangeTextField","pattern","getTitres","ids","titres","userEdited","PremierConnexion","userUpdated","Adresse","Courriel","Telephone","SiteWeb","CV","MessageMotivation","InputLabel","Select","labelId","multiple","SecteursActivites","Input","renderValue","Chip","PostesStagiaires","endIcon","DashboardEditUsers","Actif","DashBoardFicheUser","handleEdit","faUserNinja","DashboardNouveauUser","setUpdatingUtilisateur","setAddedUtilisateur","error","setError","lastLocation","useLastLocation","password","confirmation","nom","prenom","email","showPassword","showConfirmation","nomEntreprise","values","setValues","prop","handleMouseDownPassword","handleCreation","newUser","MotdePasse","utilisateurAdded","FormLabel","ButtonGroup","disableElevation","FormHelperText","htmlFor","OutlinedInput","IconButton","aria-label","onMouseDown","edge","Visibility","VisibilityOff","labelWidth","DashboardNouvelleDemande","SecteursActivite","DureeStage","TypeStage","dif","toString","demandeAdded","Number","DescriptionPosteRecherche","AutresInformations","Communications","EnvoyeParID","Message","NbMessages","newOffre","DashboardNouvelleOffre","offreAdded","DashboardOffres","vedette","setVedette","Checkbox","DashboardSecteurs","edit","setEdit","oldValue","setOldValue","setUpdatingRegion","setAddingRegion","add","setAdd","newRegion","handleAddRegion","regionAdded","FormGroup","Table","TableHead","TableRow","TableCell","align","TableBody","colSpan","autoFocus","Tooltip","stopPropagation","hover","regionOldValue","handleEditChange","regionUpdated","setUpdatingSecteur","setAddingSecteur","newSecteur","handleAddSecteurActivite","secteurAdded","secteurOldValue","secteurUpdated","DashBoardUsersCard","supprimer","usersType","DashboardCandidats","utilisateurs","setUtilisateurs","getUtilisateurs","users","getFullName","DashboardContent","path","DashBoardUsers","DashboardRegions","DashboardFicheUser","DashboardHeader","logout","profil","anchorEl","setAnchorEl","matchesXS","matchesSM","handleClose","faPlus","Box","getUserName","userAccessLevel","getAccessLevel","Avatar","charAt","getInitials","currentTarget","faAngleDown","keepMounted","open","Boolean","onClose","ListItemIcon","faUser","ListItemText","primary","faSignOutAlt","Badge","overlap","faBell","menuItems","accueil","faHome","link","accessLevel","faArrowAltCircleRight","faArrowAltCircleLeft","candidats","admins","faMapMarkedAlt","faBriefcase","Dashboard","menuItemSelected","setMenuItemSelected","minHeight","List","ListItem","button","boxSizing","borderLeft","paddingLeft","disableGutters","disableTypography","DashboardEditProfil","ListRegions","selectedRegionId","dense","ListSecteurs","selectedSecteurId","setSelectedSecteur","DetailsAnnonces","setSelectedSecteurID","setSelectedRegionID","Breadcrumbs","separator","Header","imageURL","imgSize","backgroundUrl","marginLeft","marginRight","InputBase","props","Login","login","addedUtilisateur","handleClickShowPassword","handleConnection","set","faSignInAlt","Divider","NousJoindre","bgContact","action","ListOffresDemandes","selectedSecteurID","selectedRegionID","OffresDemandes","toUpperCase","slice","FormSubmittedMerci","App","useLayoutEffect","window","scrollTo","remove","handleConnectionfromCookie","BGImage","SMALLER","BIG","exact","from","limit","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.9d5a7405.chunk.js","sourcesContent":["\r\nexport enum Size {\r\n    SMALL = 400,\r\n    BIG = 600,\r\n    SMALLER = 300,\r\n  }\r\n  \r\n  export enum Appel {\r\n    DEMANDE = 'demande',\r\n    OFFRE = 'offre'\r\n  }\r\n\r\n  export enum Menu {\r\n    accueil = 'Accueil',\r\n    offres = 'Offres de stage',\r\n    demandes = 'Demandes de stage',\r\n    candidats = 'Candidats',\r\n    entreprises = 'Entreprises',\r\n    profil = 'Profil',\r\n    regions = 'Regions',\r\n    secteurs = \"Secteurs d'activité\",\r\n    admins = 'Administrateurs'\r\n  }\r\n\r\n  export enum AccessLevel {\r\n    stagiaire = 111,\r\n    entreprise = 333,\r\n    admin = 999\r\n  }\r\n\r\n","import { OffresDemandesType, RegionsType, SecteursActiviteType, UtilisateursType } from './Types';\r\n\r\n\r\nconst ENDPOINT='https://apiestage.herokuapp.com/api/'\r\n\r\nexport const fetchOffresDemandes = async (): Promise<OffresDemandesType[]> => {\r\n  const data = await (await fetch(ENDPOINT+\"offreDemande\")).json();\r\n  return data;\r\n};\r\n\r\nexport const updateOffreDemande = async (offreDemande: OffresDemandesType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  //</string>console.log(offreDemande);\r\n  const {_id, ...offreDemandeToEdit} = offreDemande;\r\n\r\n  var updated= await fetch(ENDPOINT+ \"offreDemande/\"+ offreDemande._id, {\r\n    method: 'put', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(offreDemandeToEdit) // Envoie du data en format JSON \r\n   })\r\n    \r\n\r\n    return updated.json();\r\n}\r\n\r\nexport const addOffreDemande = async (OffreDemande: OffresDemandesType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  //console.log(OffreDemande);\r\n  const {_id, ...offreDemandeToAdd} = OffreDemande;\r\n  let added='';\r\n  fetch(ENDPOINT+ \"offreDemande/\", {\r\n    method: 'post', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(offreDemandeToAdd) // Envoie du data en format JSON \r\n   })\r\n    .then(response => {\r\n      response.json();\r\n    })\r\n    .then(data => console.log(data)) // Manipuler les données récupérées, si nous voulons en faire quelque chose\r\n    .catch(err => console.log(err))\r\n\r\n    return added;\r\n}\r\n\r\nexport const fetchRegions = async (): Promise<RegionsType[]> => {\r\n  const data = await (await fetch(ENDPOINT+\"regions\")).json();\r\n  return data;\r\n};\r\n\r\nexport const fetchRegion = async (id: string): Promise<RegionsType> => {\r\n  const data = await (await fetch(ENDPOINT+\"regions/\"+id)).json();\r\n  return data;\r\n  \r\n};\r\n\r\nexport const updateRegion = async (region: RegionsType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  //console.log(region);\r\n  const {_id, ...regionToEdit} = region;\r\n  let updated='';\r\n  fetch(ENDPOINT+ \"regions/\"+ region._id, {\r\n    method: 'put', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(regionToEdit) // Envoie du data en format JSON \r\n   })\r\n    .then(response => {\r\n      response.json();\r\n     // updated='updated'\r\n     // return updated;\r\n    })\r\n    .then(data => console.log(data)) // Manipuler les données récupérées, si nous voulons en faire quelque chose\r\n    .catch(err => console.log(err))\r\n\r\n    return updated;\r\n}\r\n\r\nexport const addRegion = async (region: RegionsType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  console.log(region);\r\n  const {_id, ...regionToAdd} = region;\r\n  let added=''\r\n  fetch(ENDPOINT+ \"regions/\"+ region._id, {\r\n    method: 'post', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(regionToAdd) // Envoie du data en format JSON \r\n   })\r\n    .then(response => {\r\n      response.json();\r\n      added='added'\r\n      return added;\r\n    })\r\n    .then(data => console.log(data)) // Manipuler les données récupérées, si nous voulons en faire quelque chose\r\n    .catch(err => console.log(err))\r\n\r\n    return added;\r\n}\r\n\r\nexport const fetchSecteursActivite = async (): Promise<SecteursActiviteType[]> => {\r\n  const data = await (await fetch(ENDPOINT+\"secteurs\")).json();\r\n  return data;\r\n};\r\n\r\nexport const updateSecteurActivite = async (secteur: SecteursActiviteType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  console.log(secteur);\r\n  const {_id, ...secteurToEdit} = secteur;\r\n  let updated=''\r\n  fetch(ENDPOINT+ \"secteurs/\"+ secteur._id, {\r\n    method: 'put', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(secteurToEdit) // Envoie du data en format JSON \r\n   })\r\n    .then(response => {\r\n      response.json();\r\n      //updated='updated'\r\n      //return updated;\r\n    })\r\n    .then(data => console.log(data)) // Manipuler les données récupérées, si nous voulons en faire quelque chose\r\n    .catch(err => console.log(err))\r\n\r\n    return updated;\r\n}\r\n\r\nexport const addSecteurActivite = async (secteur: SecteursActiviteType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  console.log(secteur);\r\n  const {_id, ...secteurToAdd} = secteur;\r\n  let added=''\r\n  fetch(ENDPOINT+ \"secteurs/\"+secteur._id, {\r\n    method: 'post', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(secteurToAdd) // Envoie du data en format JSON \r\n   })\r\n    .then(response => {\r\n      response.json();\r\n      added='added'\r\n      return added;\r\n    })\r\n    .then(data => console.log(data)) // Manipuler les données récupérées, si nous voulons en faire quelque chose\r\n    .catch(err => console.log(err))\r\n\r\n    return added;\r\n}\r\n\r\n\r\nexport const fetchUtilisateurs = async (): Promise<UtilisateursType[]> => {\r\n  const data = await (await fetch(ENDPOINT+\"utilisateurs\")).json();\r\n  return data;\r\n  \r\n};\r\n\r\nexport const fetchUtilisateur = async (id: string): Promise<UtilisateursType> => {\r\n  const data = await (await fetch(ENDPOINT+\"utilisateurs/\"+id)).json();\r\n  return data;\r\n  \r\n};\r\n\r\n\r\nexport const updateUtilisateur = async (user: UtilisateursType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  const {_id, ...userToEdit} = user;\r\n  let updated=''\r\n  fetch(ENDPOINT+ \"utilisateurs/\"+user._id, {\r\n    method: 'put', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu  \r\n    },\r\n    body: JSON.stringify(userToEdit) // Envoie du data en format JSON \r\n   })\r\n    .then(response => {\r\n      response.json();\r\n      updated='updated'\r\n      return updated;\r\n    })\r\n    .then(data => console.log(data)) // Manipuler les données récupérées, si nous voulons en faire quelque chose\r\n    .catch(err => console.log(err))\r\n\r\n    return updated;\r\n}\r\n\r\nexport const addUtilisateur = async (utilisateur: UtilisateursType) : Promise<string> => {\r\n  //const {currentIndustry, ...filteredObject} = myObject;\r\n  console.log(utilisateur);\r\n  const {_id, ...utilisateurToAdd} = utilisateur;\r\n  let added=''\r\n  fetch(ENDPOINT+ \"utilisateurs/\"+ utilisateur._id, {\r\n    method: 'post', // Méthode elle-même\r\n    headers: {\r\n     'Content-type': 'application/json; charset=UTF-8' // Indique le contenu \r\n    },\r\n    body: JSON.stringify(utilisateurToAdd) // Envoie du data en format JSON \r\n   })\r\n    .then(response => {\r\n      response.json();\r\n      added='added'\r\n      return added;\r\n    })\r\n    .then(data => console.log(data)) // Manipuler les données récupérées, si nous voulons en faire quelque chose\r\n    .catch(err => console.log(err))\r\n\r\n    return added;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/demande.ba6633a2.jpg\";","export default __webpack_public_path__ + \"static/media/offre.343d1d6c.jpg\";","//fonctions callback de connexion et déconnexion\r\nconst dashboardAuth={\r\n    signIn (cb:()=> void){\r\n        setTimeout(cb,100);\r\n    },\r\n    signOut (cb:()=> void){\r\n        setTimeout(cb,100);\r\n    },\r\n};\r\n\r\nexport default dashboardAuth;","import { useState } from 'react';\r\n\r\nimport { UtilisateursType } from '../../Types';\r\nimport dashboardAuth from './dashboardAuth';\r\n\r\nexport interface IUseAuthProvider {\r\n    signIn: (user: UtilisateursType) => void;\r\n    signOut: () => void;\r\n    user: null | UtilisateursType;\r\n}\r\n\r\n//Provider d'authentication\r\nconst useAuthProvider =() : IUseAuthProvider =>{\r\n    const [user, setUser] = useState<null |UtilisateursType>(null);\r\n\r\n    \r\n\r\n    const signIn = (user: UtilisateursType) =>{\r\n        dashboardAuth.signIn(()=>{\r\n            setUser(user);\r\n            //history.push('/dashboard');\r\n            \r\n        })\r\n    };\r\n    const signOut = () =>{\r\n        dashboardAuth.signOut(()=>{\r\n            setUser(null);\r\n            //Cookies.remove(user);\r\n        })\r\n    };\r\n\r\n    return {\r\n        user,\r\n        signIn, \r\n        signOut\r\n    }\r\n};\r\n\r\nexport default useAuthProvider;","import { createContext } from 'react';\r\n\r\nimport { IUseAuthProvider } from './useAuthProvider';\r\nimport useAuthProvider from './useAuthProvider';\r\n\r\nexport const AuthContext = createContext<IUseAuthProvider | null>(null);\r\n\r\n//Provider d'authentication\r\nconst AuthProvider: React.FC = ({ children }) => {\r\n    const auth = useAuthProvider();\r\n    return <AuthContext.Provider value={auth}> {children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthProvider;","import { useContext } from 'react';\r\n\r\nimport { AuthContext } from './AuthProvider';\r\n\r\n//context authentication\r\nconst useAuth=()=> useContext(AuthContext);\r\nexport default useAuth;","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { useHistory } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nimport { AccessLevel, Appel } from '../Enum';\r\nimport imgDemande from '../images/demande.jpg';\r\nimport imgOffre from '../images/offre.jpg';\r\nimport useAuth from './auth/useAuth';\r\n\r\n\r\n\r\ntype Props = {\r\n    type: Appel,\r\n    toast?:()=>void\r\n};\r\n\r\n\r\n\r\nconst AppelAction: React.FC<Props> =({type, toast})=>{\r\n    const history = useHistory();\r\n    const auth = useAuth();\r\n    //MediaQueries\r\n    const theme = useTheme();\r\n    const matchesMD = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const handlePublierOffre=()=>{\r\n       if(auth?.user && auth?.user?.NiveauAcces !== AccessLevel.stagiaire){\r\n        history.push('/dashboard/newOffre')\r\n       }  else if(auth?.user && auth?.user?.NiveauAcces === AccessLevel.stagiaire){\r\n        console.log('here')\r\n\r\n        toast && toast();\r\n        }\r\n        else{\r\n            console.log('here')\r\n\r\n            toast && toast();\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const handlePublierDemande=()=>{\r\n        if(auth?.user && auth?.user?.NiveauAcces !== AccessLevel.entreprise){\r\n            history.push('/dashboard/NewDemande');\r\n        } else if(auth?.user && auth?.user?.NiveauAcces === AccessLevel.entreprise){\r\n            toast && toast();\r\n        }\r\n        else{\r\n            console.log('here')\r\n            toast && toast();\r\n            history.push('/login');\r\n        }\r\n     }\r\n\r\n    return(\r\n        <Wrapper >\r\n        <Grid container>\r\n            {type===Appel.OFFRE ?  \r\n            <Grid item  xs={12} sm={12} md={6}  \r\n                style={{backgroundColor: '#4d6d81', paddingTop: matchesMD? '20px': '0',paddingBottom: matchesMD? '20px': '0'}} \r\n                className='zoneText'>\r\n                \r\n                <Grid container  alignContent='center' direction='column'>\r\n                    <Grid item xs={9} >\r\n                        <Typography variant={matchesMD? 'h4': 'h3'} style={{fontWeight: 'bold', color: 'white'}}>Pourquoi publier une offre de stage?</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={9} style={{marginTop: '5px', marginBottom: '15px'}}>\r\n                        <Typography style={{color: 'Gainsboro'}}>Lorem Ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={9} style={{marginBottom: '25px'}}>\r\n                        <li><span>Lorem Ipsum dolor sit amet</span></li>\r\n                        <li><span>Consectetur adipiscing elit</span></li>\r\n                        <li><span>Ut enim ad minim veniam</span></li>\r\n                    </Grid>\r\n                    <Grid item xs={9} >\r\n                        <Button variant=\"contained\" size=\"medium\"  style={{borderRadius: '0',textTransform: 'none'}}\r\n                        onClick={handlePublierOffre}\r\n                        >\r\n                                Publier une offre de stage maintenant!\r\n                        </Button>\r\n                    </Grid>\r\n                       \r\n                </Grid>\r\n            </Grid>\r\n            : null}\r\n            \r\n            <Grid item  xs={12} sm={12} md={6} >\r\n            {\r\n                type===Appel.DEMANDE ?\r\n                <Image src={imgDemande} fluid alt=\"demande de stage\" style={{width: '100%'}}/> :\r\n                <Image src={imgOffre} fluid alt=\"offre de stage\" style={{width: '100%'}}/> \r\n            }\r\n            </Grid>\r\n            {type===Appel.DEMANDE ?  \r\n            <Grid item xs={12} sm={12} md={6} style={{backgroundColor: '#4d6d81', paddingTop: matchesMD? '20px': '0',paddingBottom: matchesMD? '20px': '0'}} \r\n            className='zoneText'>\r\n                    <Grid container alignContent='center' direction='column'>\r\n                        <Grid item xs={9}>\r\n                            <Typography variant={matchesMD? 'h4': 'h3'} style={{fontWeight: 'bold', color: 'white'}}>Pourquoi publier une demande de stage?</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={9} style={{marginTop: '5px', marginBottom: '15px'}} >\r\n                            <Typography style={{color: 'Gainsboro'}}>Lorem Ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={9}  style={{marginBottom: '25px'}}>\r\n                            <li><span>Lorem Ipsum dolor sit amet</span></li>\r\n                            <li><span>Consectetur adipiscing elit</span></li>\r\n                            <li><span>Ut enim ad minim veniam</span></li>\r\n                        </Grid>\r\n                        <Grid item xs={9} >\r\n                            <Button variant=\"contained\" size=\"medium\" style={{borderRadius: '0',textTransform: 'none'}}\r\n                            onClick={handlePublierDemande}\r\n                            >\r\n                                    Publier une demande de stage maintenant!\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n            </Grid>\r\n            : null}\r\n        </Grid>\r\n        \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default AppelAction;\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.zoneText{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    \r\n}\r\n\r\nli { color: dodgerblue; } /* bullet */\r\nli span { color: white; } /* text */\r\n\r\nbutton{\r\n    background-color: dodgerblue;\r\n    color: white;\r\n}\r\n\r\nbutton:hover{\r\n    color: black;\r\n}\r\n    \r\n`","import { Button, Card, CardActions, CardContent, CardHeader, Grid, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateur } from '../Api';\r\nimport { Appel } from '../Enum';\r\nimport { OffresDemandesType, UtilisateursType } from '../Types';\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n    type: Appel,\r\n    offreDemande?: OffresDemandesType |undefined,\r\n    cardType?: string\r\n};\r\n\r\n\r\nconst CardDernieresAnnonces: React.FC<Props> =({type,offreDemande,cardType})=>{\r\n    const [auteur, setAuteur] = useState<UtilisateursType | undefined>(undefined);\r\n    const history= useHistory();\r\n\r\n    useEffect(()=>{\r\n        offreDemande && getAuteur(offreDemande.Auteur);\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n      //fetch l'auteur dans l'api\r\n    const getAuteur = async (id: string) => {\r\n        let auteur : UtilisateursType| undefined = await fetchUtilisateur(id);\r\n        //console.log(auteur);\r\n        setAuteur(auteur);\r\n    }\r\n\r\n   //retourne le nom d'entreprise si c'est une offre sinon ça retourne la ville de la demande de stage\r\n    const getAuteurNom = (auteur:UtilisateursType)=>{\r\n        let auteurNom = type==='offre' ? auteur.NomEntreprise : auteur.Ville;\r\n        return auteurNom;\r\n    }\r\n\r\n    //retourne le logo de l'entreprise\r\n    const getLogo = (auteur:UtilisateursType)=>{\r\n        return auteur.Logo;\r\n    }\r\n    \r\n    return(\r\n        <div data-testid='CardDerniersAnnonces'>\r\n        <Wrapper className='card' >\r\n            \r\n            {offreDemande!==undefined && \r\n            <Card  style={{display: 'flex',justifyContent: 'space-between', flexDirection: 'column', height: '100%', width:'100%'}}>\r\n                <CardHeader \r\n                    title={offreDemande.Titre}\r\n                    subheader={auteur? getAuteurNom(auteur) : null}\r\n                />\r\n                <CardContent>\r\n                    <Grid container alignItems='center'>\r\n                        <Grid item xs={type===Appel.OFFRE && cardType!== 'mini' ? 8:12}>\r\n                            <Typography className='descriptionEllipsis'>\r\n                                {offreDemande.Description}\r\n                            </Typography> \r\n                        </Grid >\r\n                        { type===Appel.OFFRE && cardType!== 'mini' &&\r\n                        <Grid item xs={12} sm={12} md={4}>\r\n                            <Grid container justify='center' >\r\n                                {auteur && <Typography variant='h2'>{getLogo(auteur)}</Typography>}\r\n                            </Grid>\r\n                        </Grid>\r\n                        }\r\n                    </Grid>\r\n                    \r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button \r\n                        className='actionbutton1 button' \r\n                        variant=\"contained\" \r\n                        size=\"medium\"\r\n                        name='buttonDetails'\r\n                        onClick={()=>history.push({\r\n                            pathname: type===Appel.OFFRE ? '/accueil/offre/'+offreDemande._id : '/accueil/demande/'+offreDemande._id ,\r\n                            state: {data: offreDemande}\r\n                        })}\r\n                    >\r\n                        Détails\r\n                    </Button>\r\n                    <Button className='actionbutton2 button'  variant=\"contained\" size=\"medium\" name='buttonPostuler' >\r\n                        {type===Appel.OFFRE? 'Postuler' : 'Contacter candidat'}\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n            }\r\n        </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDernieresAnnonces;\r\n\r\nexport const Wrapper = styled.div`\r\nwidth: 100%;\r\n\r\n.actionbutton1{\r\n    color: dodgerblue;\r\n    background-color: white;\r\n} \r\n\r\n.actionbutton2 {\r\n    color: white;\r\n    background-color: dodgerblue;\r\n}\r\n.button {\r\n    text-transform: none;\r\n    border-radius: 0px;\r\n}\r\n\r\n.descriptionEllipsis{\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2; //Limite le text à 2 lignes\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.MuiTypography-h2{\r\n    font-weight: bold\r\n}\r\n\r\n`","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchOffresDemandes } from '../Api';\r\nimport { Appel } from '../Enum';\r\nimport { OffresDemandesType } from '../Types';\r\nimport CardDernieresAnnonces from './CardDernieresAnnonces';\r\n\r\n\r\ntype Props = {\r\n    type: Appel,\r\n};\r\n\r\nconst DerniersAnnonces: React.FC<Props> =({type})=>{\r\n    const history= useHistory();\r\n\r\n    const [offresDemandes, setOffresDemandes] = useState<OffresDemandesType[]>([]);\r\n    \r\n    useEffect(()=>{\r\n        getOffresDemandes();\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n\r\n      //fetch les offres/demandes dans l'api\r\n    const getOffresDemandes = async () => {\r\n        let offresDemandes : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        \r\n        // Filtre les offres valides\r\n        offresDemandes = offresDemandes.filter(offreDemande=> offreDemande.Supprime===false && offreDemande.Type===type && offreDemande.Valide );\r\n        // Trié par date\r\n        offresDemandes.sort((a, b) => (a.DateParution < b.DateParution) ? 1 : -1);\r\n         // Garde juste les 4 offre vedettes les plus récentes\r\n         offresDemandes.splice(4,offresDemandes.length-4);\r\n\r\n        console.log(offresDemandes);\r\n        setOffresDemandes(offresDemandes);  \r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Grid container direction='column' alignItems=\"center\" style={{textAlign:'center', paddingTop: '50px'}}>\r\n                {type===Appel.OFFRE ?\r\n                <Grid item xs={10} sm={8} md={6} lg={4}>\r\n                    <Typography variant=\"h4\">Tu es à la recherche de ton stage de fin d'etudes?</Typography>\r\n                </Grid> :\r\n                <Grid item xs={10} sm={8} md={6} lg={4}>\r\n                    <Typography variant=\"h4\">Votre futur stagiaire se trouve ici.</Typography>\r\n                </Grid>\r\n                }    \r\n                <Grid item xs={10} sm={8} md={6} lg={3}>\r\n                    <Typography style={{color: 'darkgray'}}>Lorem Ipsum dolor sit amet, consectetur adipiscing elit, \r\n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justify='center' >\r\n                <Grid item xs={11} lg={9} style={{marginTop: '50px'}}>\r\n                    <Grid container spacing={2} justify='center'>\r\n                {offresDemandes.length>0 &&\r\n                    offresDemandes.map(offreDemande=>(\r\n                        <Grid item xs={12} sm={6} md={4} lg={3} key={offreDemande._id}>\r\n                            <Grid container style={{height: '100%'}}>\r\n                                <CardDernieresAnnonces type={type} offreDemande={offreDemande} cardType='mini'/>\r\n                            </Grid>\r\n                        </Grid>\r\n                ))\r\n                }\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        \r\n            <Grid container justify='center' style={{marginTop: '50px',paddingBottom: '50px'}}>\r\n                <Grid item>\r\n                    <Button variant=\"contained\" size=\"medium\" color=\"secondary\" style={{borderRadius: '0',textTransform: 'none'}}\r\n                    onClick={()=>{\r\n                        history.push('/accueil/'+type+'s');\r\n                    }}\r\n                    >\r\n                    {type===Appel.OFFRE? 'Voir toutes les offres de stage' : 'Voir tous les candidats'} \r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DerniersAnnonces;\r\n\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color: WhiteSmoke;\r\n    \r\n`","import { Grid, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchOffresDemandes } from '../Api';\r\nimport { Appel } from '../Enum';\r\nimport { OffresDemandesType } from '../Types';\r\nimport CardDernieresAnnonces from './CardDernieresAnnonces';\r\n\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\n//section offre vedettes\r\nconst OffresVedettes: React.FC<Props> =()=>{\r\n    const [offres, setOffres] = useState<OffresDemandesType[]>([]);\r\n    \r\n    useEffect(()=>{\r\n        getOffres();\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getOffres = async () => {\r\n        let offres : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        // Filtre les offres, valides et vedettes\r\n        offres = offres.filter(offre=> offre.Supprime===false && offre.Type==='offre' && offre.Valide && offre.Vedette);\r\n        // Trié par date\r\n        offres.sort((a, b) => (a.DateParution < b.DateParution) ? 1 : -1);\r\n        // Garde juste les 4 offre vedettes les plus récentes\r\n        offres.splice(4,offres.length-4);\r\n        console.log(offres);\r\n        setOffres(offres);  \r\n    }\r\n    \r\n    return(\r\n        <Wrapper >\r\n\r\n            <Grid container style={{position: 'relative'}} justify='center'>\r\n            <div className=\"corner-ribbon top-right sticky golden\" >VEDETTE</div>\r\n\r\n                <Grid item>\r\n                    <Grid container  justify='center' >\r\n                        <Grid item xs={6} sm={8}>\r\n                            <Typography variant='h3' className='title'>Offres de stage</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify='center' >\r\n                        <Grid item xs={11} lg={9}>\r\n                            <Grid container spacing={2} alignItems='stretch' justify='center'>\r\n                                {offres.length>0 && offres.map(offre=>(\r\n                                    <Grid item key={offre._id} xs={12} sm={6} md={3} lg={3} xl={3} style={{display: 'flex'}}>\r\n                                        <CardDernieresAnnonces type={Appel.OFFRE}  offreDemande={offre} cardType='mini'/>\r\n                                    </Grid>\r\n                                ))}\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n       </Wrapper>\r\n    )\r\n}\r\n\r\nexport default OffresVedettes;\r\n\r\nexport const Wrapper = styled.div`\r\nbackground-color: #4d6d81;\r\npadding-bottom: 50px;\r\noverflow: hidden;\r\n.title{\r\n    color: #e1e1e1;\r\n    font-weight: bold;\r\n    padding-top: 50px;\r\n    padding-bottom: 50px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n}\r\n.corner-ribbon.top-right{\r\n  top: 25px;\r\n  right: -50px;\r\n  left: auto;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n  overflow: hidden;\r\n}\r\n\r\n.corner-ribbon{\r\n  width: 200px;\r\n  background: #e43;\r\n  position: absolute;\r\n  top: 25px;\r\n  left: -50px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  letter-spacing: 1px;\r\n  color: #f0f0f0;\r\n  font-weight: bold;\r\n  transform: rotate(-45deg);\r\n  -webkit-transform: rotate(-45deg);\r\n}\r\n\r\n.corner-ribbon.golden {\r\n    background: radial-gradient(ellipse farthest-corner at right bottom, #FEDB37 20%, #FDB931 25%, #9f7928 60%, #8A6E2F 50%, transparent 20%), \r\n    radial-gradient(ellipse farthest-corner at left top, #FFFFFF 5%, #FFFFAC 15%, #D1B464 35%, #5d4a1f 95%, #5d4a1f 90%);\r\n}\r\n\r\n`","\r\n\r\nimport { Appel } from '../Enum';\r\nimport AppelAction from './AppelAction';\r\nimport DerniersAnnonces from './DerniersAnnonces';\r\nimport OffresVedettes from './OffresVedettes';\r\n\r\ntype Props = {\r\n    toast:(toastType: string)=> any\r\n};\r\n\r\nconst Accueil: React.FC<Props> =({toast})=>{\r\n\r\n    return(\r\n        <div data-testid=\"accueil-1\">\r\n            <OffresVedettes />\r\n            <DerniersAnnonces type={Appel.OFFRE}/> \r\n            <AppelAction type={Appel.OFFRE} toast={toast('offre')}/>\r\n            <DerniersAnnonces type={Appel.DEMANDE}/> \r\n            <AppelAction type={Appel.DEMANDE} toast={toast('demande')}/> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accueil;","export default __webpack_public_path__ + \"static/media/apropos1.8c2860e5.jpg\";","export default __webpack_public_path__ + \"static/media/apropos2.2ed51f7e.jpg\";","export default __webpack_public_path__ + \"static/media/apropos3.2a7285aa.jpg\";","export default __webpack_public_path__ + \"static/media/apropos4.5c5c4159.jpg\";","import { Container, Grid, Typography } from '@material-ui/core';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport apropos1 from '../images/apropos1.jpg';\r\nimport apropos2 from '../images/apropos2.jpg';\r\nimport apropos3 from '../images/apropos3.jpg';\r\nimport apropos4 from '../images/apropos4.jpg';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\nconst APropos: React.FC<Props> =()=>{\r\n    return(\r\n        <Container>\r\n            <Grid container style={{marginTop: '50px'}}>\r\n                <Grid item xs={5}>\r\n                    <Typography id='apropos-1' variant='h1' style={{fontWeight: 'bold'}}><GestureIcon style={{fontSize: '5rem'}} />eStage</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <p id='apropos-1'>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2} style={{marginTop: '50px'}}>\r\n                <Grid item xs={4}>\r\n                    <Grid container direction='column' spacing={4}>\r\n                        <Grid item>\r\n                            <Image src={apropos1} rounded fluid/>\r\n\r\n                        </Grid>\r\n                        <Grid item style={{textAlign: 'center'}}><Typography variant='h5' style={{fontWeight: 'bold'}}>FORCES AVENIR</Typography></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet. </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <Grid container direction='column' spacing={4}>\r\n                        <Grid item> <Image src={apropos2} rounded fluid /></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}><Typography variant='h5' style={{fontWeight: 'bold'}}>CENTRE AIDE</Typography></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet. </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <Grid container direction='column' spacing={4}>\r\n                        <Grid item> <Image src={apropos3} rounded fluid/></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}><Typography variant='h5' style={{fontWeight: 'bold'}}>FONDATION RÉNO-JOUET</Typography></Grid>\r\n                        <Grid item style={{textAlign: 'center'}}>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet. </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style={{marginTop: '50px',marginBottom: '50px'}} >\r\n                <Grid item xs={12} className='dashBackgroundColor' style={{padding: '50px', color:'white'}} >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>     \r\n                            <Typography variant='h5'>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \r\n                            Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n                            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</p>   \r\n                         </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <Image src={apropos4} rounded fluid/>\r\n                        </Grid>\r\n                        <Grid item xs={6} style={{backgroundColor: '#404040', color: 'white',padding: '50px', display: 'flex', alignItems:'center'}}>\r\n                            <Typography variant='h5'> Donec magna dolor, venenatis ac hendrerit eget, gravida vulputate arcu. Nullam mollis eros quis nulla dapibus sagittis. \r\n                            Morbi tortor nisi, volutpat et nulla ac, vulputate aliquet erat. Sed sit amet augue arcu.</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>    \r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default APropos;","import Cookies from 'js-cookie';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nimport useAuth from './useAuth';\r\n\r\ninterface PrivateRouteProps extends RouteProps { \r\n\r\n}\r\n\r\n\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({...rest}) => { \r\nconst auth = useAuth();\r\n//console.log(auth?.user);\r\n\r\nconst token = Cookies.get('connected');\r\n\r\n//Private route utilisé pour le dashboard - si pas d'utilisateur connecté redirectionne vers login sinon ça continue son chemin \r\n    if (auth?.user === null && !token) return <Redirect to=\"/login\" /> \r\n    else return (\r\n            <Route {...rest} />\r\n        )\r\n    \r\n};\r\n\r\nexport default PrivateRoute;","import { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nimport useAuth from './useAuth';\r\n\r\ninterface ProtectedLoginProps extends RouteProps { \r\n\r\n}\r\n\r\nconst ProtectedLogin: React.FC<ProtectedLoginProps> = ({...rest}) => {\r\n     \r\nconst auth = useAuth();\r\n//console.log(auth?.user);\r\n\r\n// utilisé quand on essaye d'acceder au composant login, si utilisateur la route redirectionne vers le dashboard sinon ça va vers login\r\nif (auth?.user !== null) {\r\n       return <Redirect to=\"/dashboard/\" />;\r\n}\r\nreturn (\r\n        <Route {...rest} />\r\n    )\r\n    \r\n};\r\n\r\nexport default ProtectedLogin;","import { Container, Typography } from '@material-ui/core';\r\n\r\n\r\ntype Props = {\r\n    \r\n};\r\n//page statique\r\nconst Confidentialite: React.FC<Props> =()=>{\r\n    return(\r\n        <Container className='politique'>\r\n            <Typography variant='h3' >Politique et confidentialité!</Typography>  \r\n            <p>\r\n                Lorem ipsum odor amet, consectetuer adipiscing elit. Ac purus in massa egestas mollis varius;\r\n                dignissim elementum. Mollis tincidunt mattis hendrerit dolor eros enim, nisi ligula ornare.\r\n                Hendrerit parturient habitant pharetra rutrum gravida porttitor eros feugiat. Mollis elit\r\n                sodales taciti duis praesent id. Consequat urna vitae morbi nunc congue.\r\n            </p>\r\n            <p>\r\n                Non etiam tempor id arcu magna ante eget. Nec per posuere cubilia cras porttitor condimentum\r\n                orci suscipit. Leo maecenas in tristique, himenaeos elementum placerat. Taciti rutrum nostra,\r\n                eget cursus velit ultricies. Quam molestie tellus himenaeos cubilia congue vivamus ultricies.\r\n                Interdum praesent ut penatibus fames eros ad consectetur sed.\r\n            </p>\r\n            <ul>\r\n                <li>\r\n                    Leo maecenas in tristique\r\n                </li>\r\n                <li>\r\n                Taciti rutrum nostra,\r\n                eget cursus velit ultricies.\r\n                </li>\r\n                <li>\r\n                Mollis elit\r\n                sodales taciti duis praesent id.\r\n                </li>\r\n                <li>\r\n                Non etiam tempor id arcu magna ante eget.\r\n                </li>\r\n            </ul>        \r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit tenetur minus quisquam dolores unde dolor natus cumque, tempore velit, ex vero eum quia inventore, necessitatibus dicta ut sint quaerat blanditiis?\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis incidunt aliquid assumenda ab, dicta, totam ut quibusdam voluptas error dolorem dolorum. Deserunt similique sequi nam accusantium quia harum exercitationem numquam?\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe minima, quos provident quo recusandae sit. Illo rem culpa, sint laborum dolorum dolores reiciendis quaerat odio ipsum recusandae quidem fugit asperiores.\r\n            \r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Porro blanditiis quisquam vitae odit. Dolore magni nam architecto optio exercitationem ducimus nostrum dolorum, asperiores veniam officia consequuntur, eius aperiam consectetur eaque.\r\n                Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quod nam et praesentium alias beatae mollitia rem eos consequuntur fuga nemo, tenetur quisquam nisi neque. Doloribus eaque debitis minus velit cumque.\r\n            </p>\r\n            <p>\r\n                Lorem, ipsum dolor sit amet consectetur adipisicing elit. Animi, quod neque. Sunt, nemo non, iure harum repudiandae esse consequatur hic ab perspiciatis officiis, culpa accusantium fugiat velit magnam molestiae a!\r\n            </p>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default Confidentialite;","import { Grid, Typography } from '@material-ui/core';\r\nimport Cookies from 'js-cookie';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport useAuth from './auth/useAuth';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\nconst Footer: React.FC<Props> =()=>{\r\n    const location = useLocation(); \r\n    const token = Cookies.get('connected');\r\n\r\n    const auth = useAuth();\r\n    return(\r\n        <Wrapper location={location}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={3} lg={3} xl={3}>\r\n                    <Typography>© 2021 <Link to=\"/accueil\" className='eStage'>eStage</Link> - Projet de Synthèse - Eric Martins</Typography>  \r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={9} lg={9} xl={9}>\r\n                    <Grid container justify='flex-end'>\r\n                        <Grid item className='item'>\r\n                            <Typography>\r\n                                <Link to=\"/accueil\" style={{fontWeight: location.pathname=== \"/accueil\" ? 'bold': 'normal' }}>\r\n                                    Accueil\r\n                                </Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item className='item'>\r\n                            <Typography>\r\n                                <Link to=\"/apropos\" style={{fontWeight: location.pathname=== \"/apropos\" ? 'bold': 'normal' }}>\r\n                                    À propos\r\n                                </Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item className='item'>\r\n                            <Typography>\r\n                                <Link to=\"/confidentialite\" style={{fontWeight: location.pathname=== \"/confidentialite\" ? 'bold': 'normal' }}>\r\n                                    Confidentialité\r\n                                </Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item className='item'>\r\n                            <Typography>\r\n                                <Link to=\"/contact\" style={{fontWeight: location.pathname=== \"/contact\" ? 'bold': 'normal' }}>\r\n                                    Nous Joindre\r\n                                </Link>\r\n                                </Typography>\r\n                        </Grid>\r\n                        {\r\n                        !location.pathname.includes(\"/dashboard\") && token &&\r\n                            <Grid item className='item'>{auth?.user !== null ? <Typography><Link to=\"/dashboard\" style={{color: 'dodgerblue'}}>Dashboard</Link></Typography> :null}</Grid>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\nexport const Wrapper = styled.div<{location: any}>`\r\n    \r\n    padding: 30px 50px 30px 50px;\r\n    background-color: WhiteSmoke;\r\n    a{\r\n        color: black\r\n    }\r\n    a:hover{\r\n        font-weight: bold !important;\r\n        text-decoration: none;\r\n    }\r\n    .eStage{\r\n        color:  #3e99df;\r\n    }\r\n    ${({ location }) => location.pathname.includes(\"/dashboard\") && `\r\n    background: #3e99df;\r\n    color: white;\r\n    a{\r\n        color: white\r\n    }\r\n    .eStage{\r\n        color:  black;\r\n    }\r\n  `}\r\n\r\n  .item{\r\n      margin-left: 20px\r\n  }\r\n    \r\n`","import Cookies from 'js-cookie';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\n//import useAuth from './useAuth';\r\n\r\ninterface ProtectedDashboardProps extends RouteProps { \r\n\r\n}\r\n\r\nconst ProtectedDashboardRoutes: React.FC<ProtectedDashboardProps> = ({...rest}) => {\r\n     \r\n//const auth = useAuth();\r\n//console.log(auth?.user);\r\n\r\nconst token = Cookies.get('connected');\r\n\r\nif (!token ) {\r\n       return <Redirect to=\"/accueil\"></Redirect>;\r\n}\r\nreturn (\r\n        <Route {...rest} />\r\n    )\r\n    \r\n};\r\n\r\nexport default ProtectedDashboardRoutes;","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { faEdit, faTimes, faUserGraduate } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, CardActions, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateur, updateOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType, UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n    demande: OffresDemandesType,\r\n    type?: 'attente' | undefined\r\n    updateDemande: ()=> void\r\n};\r\n\r\n\r\n\r\nconst DashboardCardDemande: React.FC<Props> =({demande, type,updateDemande})=>{\r\n    const [auteur, setAuteur] = useState<UtilisateursType | undefined>(undefined);\r\n    const [update, setUpdate]= useState<String>('');\r\n    const [updatingOffreDemande, setUpdatingOffreDemande] = useState(true);\r\n    const auth = useAuth();\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        getAuteur(demande.Auteur);\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n      //cherche l'auteur de la demande\r\n    const getAuteur = async (id: string) => {\r\n        let auteur : UtilisateursType| undefined = await fetchUtilisateur(id);\r\n        //console.log(auteur);\r\n        setAuteur(auteur);\r\n    }\r\n\r\n    //formatation de la date au format YYYY-MM-dd\r\n    function formatDate(date:Date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    const getAuteurNom = (auteur:UtilisateursType)=>{\r\n        return (auteur.Prenom+\" \"+auteur.Nom)\r\n    }\r\n\r\n    //mise à jour de la demande\r\n    async function offreDemandeUpdated(offreDemande:OffresDemandesType) {\r\n        try {\r\n            const update=await updateOffreDemande(offreDemande);\r\n            setUpdatingOffreDemande(true);\r\n            setUpdate(update);  \r\n            updateDemande();\r\n        \r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingOffreDemande(false);\r\n            \r\n        }\r\n      }\r\n\r\n      //suppression de la demande\r\n    const handleSupprimer = () =>{\r\n        demande.Supprime=true;\r\n        offreDemandeUpdated(demande);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Card style={{borderTop: '5px solid #3e99df', backgroundColor: '#F0F0F0', \r\n            marginBottom: '20px', padding: '10px',position: 'relative'}}>\r\n            {demande.Valide===false && type!=='attente' && <div className=\"corner-ribbon top-right sticky red\">Pas validé</div>}\r\n                <CardContent>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} >\r\n                            <Grid container justify='space-between' style={{borderBottom: '2px solid black'}}>\r\n                                <Grid item>\r\n                                    <Grid container spacing={2}> \r\n                                        <Grid item style={{paddingBottom: '0px'}}><FontAwesomeIcon icon={faUserGraduate} size=\"2x\"  /></Grid>\r\n                                        <Grid item><Typography variant='h5' style={{fontWeight: 'bold'}}>{demande.Titre}</Typography></Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                   <b>Publié le:</b> {formatDate(demande.DateParution)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Grid container>\r\n                                <Grid item xs={12} md={type!=='attente' ? 7: 12}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                           {\r\n                                           auth?.user?.NiveauAcces!==AccessLevel.entreprise && auteur? getAuteurNom(auteur) : null\r\n                                           }\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Ville:</b> {demande.Ville}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Établissement scolaire:</b>  {auteur? auteur.Ecole : null}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {type!=='attente' &&\r\n                                <Grid item xs={12} md={5}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Formation:</b> {demande.ProgrammesSuivi}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Début:</b> {formatDate(demande.DateDebut)}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Fin:</b> {formatDate(demande.DateFin)}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {demande.Description}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify='space-between'>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\"   \r\n                                style={{textTransform: 'none', borderRadius: '0'}}>\r\n                                Détails\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {type==='attente' ?\r\n                            <Grid container spacing={1}>\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\" size=\"small\" \r\n                                    style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#fa6980', color: 'white'}}\r\n                                    onClick={handleSupprimer}\r\n                                    >\r\n                                        Refuser\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button \r\n                                        variant=\"outlined\" \r\n                                        size=\"small\"  \r\n                                        style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#72a84a', color: 'white'}}\r\n                                        onClick={()=>{\r\n                                            demande.Valide=true;\r\n                                            offreDemandeUpdated(demande);\r\n                                        }}\r\n                                    >\r\n                                        Acepter\r\n                                    </Button>\r\n                                </Grid>\r\n                                </Grid>\r\n                            :\r\n                            auth?.user?.NiveauAcces!==AccessLevel.entreprise && \r\n                                <Grid container spacing={1}>\r\n                                    <Grid item>\r\n                                        <Button variant=\"outlined\" size=\"small\" \r\n                                        startIcon={  <FontAwesomeIcon icon={faEdit} color=\"green\"/>}\r\n                                        style={{textTransform: 'none', borderRadius: '0'}}\r\n                                        onClick={()=>history.push({\r\n                                            pathname: '/dashboard/edit/demande/'+demande._id,\r\n                                            state: {data: demande}\r\n                                        })}\r\n                                        >\r\n                                            Modifier\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button \r\n                                            variant=\"outlined\" \r\n                                            size=\"small\"  \r\n                                            startIcon={<FontAwesomeIcon icon={faTimes} color=\"red\"/>}\r\n                                            style={{textTransform: 'none', borderRadius: '0'}}\r\n                                            onClick={handleSupprimer}\r\n                                        >\r\n                                            Supprimer\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card> \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashboardCardDemande;\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.corner-ribbon.top-right{\r\n  top: 25px;\r\n  right: -60px;\r\n  left: auto;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n}\r\n\r\n\r\n.corner-ribbon{\r\n  width: 200px;\r\n  background: #e43;\r\n  position: absolute;\r\n  top: 25px;\r\n  left: -50px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  letter-spacing: 1px;\r\n  color: #f0f0f0;\r\n  transform: rotate(-45deg);\r\n  -webkit-transform: rotate(-45deg);\r\n}\r\n.corner-ribbon.blue{background: #39d;}\r\n.corner-ribbon.white{background: #f0f0f0; color: #555;}\r\n.corner-ribbon.black{background: #333;}\r\n.corner-ribbon.grey{background: #999;}\r\n.corner-ribbon.blue{background: #39d;}\r\n.corner-ribbon.green{background: #2c7;}\r\n.corner-ribbon.turquoise{background: #1b9;}\r\n.corner-ribbon.purple{background: #95b;}\r\n.corner-ribbon.red{background: #e43;}\r\n.corner-ribbon.orange{background: #e82;}\r\n.corner-ribbon.yellow{background: #ec0;}\r\n`","import { faEdit, faTimes, faUserTie } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, CardActions, CardContent, FormControlLabel, Grid, Switch, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateur, updateOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType, UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n    offre: OffresDemandesType\r\n    type?: 'attente' | undefined\r\n    updateOffre: ()=>void\r\n};\r\n\r\n\r\n\r\nconst DashboardCardOffre: React.FC<Props> =({offre,type, updateOffre})=>{\r\n    const history = useHistory();\r\n\r\n    const [auteur, setAuteur] = useState<UtilisateursType | undefined>(undefined);\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [update, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingOffreDemande, setUpdatingOffreDemande] = useState(true);\r\n    const auth = useAuth();\r\n\r\n    useEffect(()=>{\r\n        getAuteur(offre.Auteur);\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n      \r\n\r\n    const getAuteur = async (id: string) => {\r\n        let auteur : UtilisateursType| undefined = await fetchUtilisateur(id);\r\n        //console.log(auteur);\r\n        setAuteur(auteur);\r\n    }\r\n\r\n    function formatDate(date:Date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    const getAuteurNom = (auteur:UtilisateursType)=>{\r\n        return (auteur.NomEntreprise)\r\n    }\r\n\r\n    async function offreDemandeUpdated(offreDemande:OffresDemandesType) {\r\n        try {\r\n            const update=await updateOffreDemande(offreDemande);\r\n            setUpdatingOffreDemande(true);\r\n            setUpdate(update); \r\n             \r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingOffreDemande(false);\r\n            updateOffre();\r\n        }\r\n      }\r\n    \r\n      const handleVedette =()=>{\r\n        offre.Vedette=!offre.Vedette;\r\n        offreDemandeUpdated(offre);\r\n    }\r\n\r\n    const handleSupprimer =()=>{\r\n        offre.Supprime=true;\r\n        offreDemandeUpdated(offre);\r\n    }\r\n\r\n    const handleValider  =()=>{\r\n        offre.Valide=true;\r\n        offreDemandeUpdated(offre);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n\r\n            <Card style={{borderTop: '5px solid #aab14a', \r\n            backgroundColor: '#F0F0F0', marginBottom: '20px', padding: '10px',position: 'relative'}} >\r\n             {offre.Valide===false && type!=='attente' && <div className=\"corner-ribbon top-right sticky red\">Pas validé</div>}\r\n                <CardContent>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} >\r\n                            <Grid container justify='space-between' style={{borderBottom: '2px solid black'}}>\r\n                                <Grid item>\r\n                                    <Grid container spacing={2}> \r\n                                        <Grid item style={{paddingBottom: '0px'}}><FontAwesomeIcon icon={faUserTie} size=\"2x\"  /></Grid>\r\n                                        <Grid item><Typography variant='h5' style={{fontWeight: 'bold'}}>{offre.Titre}</Typography></Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>   \r\n                                    <b>Publié le:</b> {formatDate(offre.DateParution)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Grid container>\r\n                                <Grid item xs={type!=='attente' ? 7: 12}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                           {auteur? getAuteurNom(auteur) : null}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Ville:</b> {offre.Ville}\r\n                                        </Grid>\r\n                                        {type==='attente' &&\r\n                                        <Grid item xs={12} style={{marginTop: '1.5rem'}}>\r\n                                        </Grid>\r\n                                        }\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {type!=='attente' &&\r\n                                <Grid item xs={5}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Début:</b> {formatDate(offre.DateDebut)}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <b>Fin:</b> {formatDate(offre.DateFin)}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {offre.Description}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify='space-between'>\r\n                        <Grid item >\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\"   \r\n                                style={{textTransform: 'none', borderRadius: '0'}}>\r\n                                Détails\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        {type==='attente' ?\r\n                            <Grid container spacing={1}>\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\" size=\"small\" \r\n                                    style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#fa6980', color: 'white'}}\r\n                                    onClick={handleSupprimer}\r\n                                    >\r\n                                        Refuser\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button \r\n                                        variant=\"outlined\" \r\n                                        size=\"small\"  \r\n                                        style={{textTransform: 'none', borderRadius: '0', backgroundColor: '#72a84a', color: 'white'}}\r\n                                        onClick={handleValider}\r\n                                    >\r\n                                        Acepter\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            :\r\n                            auth?.user?.NiveauAcces!==AccessLevel.stagiaire && \r\n                            <Grid container spacing={1} >\r\n                                {auth?.user?.NiveauAcces===AccessLevel.admin && \r\n                                <Grid item>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                        <Switch\r\n                                            checked={offre.Vedette}\r\n                                            onChange={handleVedette}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                        }\r\n                                        label=\"Vedette\"\r\n                                    />\r\n                                </Grid>\r\n                                }\r\n                                <Grid item>\r\n                                    <Button variant=\"outlined\" size=\"small\" \r\n                                    startIcon={  <FontAwesomeIcon icon={faEdit} color=\"green\"/>}\r\n                                    style={{textTransform: 'none', borderRadius: '0'}}\r\n                                    onClick={()=>history.push({\r\n                                        pathname: '/dashboard/edit/offre/'+offre._id,\r\n                                        state: {data: offre}\r\n                                    })}\r\n                                    >\r\n                                        Modifier\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button \r\n                                        variant=\"outlined\" \r\n                                        size=\"small\"  \r\n                                        startIcon={<FontAwesomeIcon icon={faTimes} color=\"red\"/>}\r\n                                        style={{textTransform: 'none', borderRadius: '0'}}\r\n                                        onClick={handleSupprimer}\r\n                                    >\r\n                                        Supprimer\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card> \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashboardCardOffre;\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.corner-ribbon.top-right{\r\n  top: 25px;\r\n  right: -50px;\r\n  left: auto;\r\n  transform: rotate(45deg);\r\n  -webkit-transform: rotate(45deg);\r\n}\r\n\r\n\r\n.corner-ribbon{\r\n  width: 200px;\r\n  background: #e43;\r\n  position: absolute;\r\n  top: 25px;\r\n  left: -50px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  letter-spacing: 1px;\r\n  color: #f0f0f0;\r\n  transform: rotate(-45deg);\r\n  -webkit-transform: rotate(-45deg);\r\n}\r\n\r\n.corner-ribbon.red{background: #e43;}\r\n\r\n`","import { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchOffresDemandes } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport DashboardCardDemande from './DashboardCardDemande';\r\nimport DashboardCardOffre from './DashboardCardOffre';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\nconst DashboardAccueil: React.FC<Props> =()=>{\r\n    const auth = useAuth();\r\n\r\n    const [offres, setOffres] = useState<OffresDemandesType[]>([]);\r\n    const [demandes, setDemandes] = useState<OffresDemandesType[]>([]);\r\n\r\n    useEffect(()=>{\r\n        getDemandes();\r\n        getOffres();\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n      //cherche les demandes dans l'api\r\n    const getDemandes = async () => {\r\n        let demandes : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        demandes = demandes.filter(demande=> demande.Supprime===false && demande.Type==='demande' && demande.Valide===false);\r\n        //console.log(demandes);\r\n        setDemandes(demandes);  \r\n    }\r\n\r\n    //cherche les offres dans l'api\r\n    const getOffres = async () => {\r\n        let offres : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        offres = offres.filter(offre=> offre.Supprime===false && offre.Type==='offre' && offre.Valide===false);\r\n        console.log(offres);\r\n        setOffres(offres);  \r\n    }\r\n\r\n   \r\n    //affiche les offres et demandes à être validés par l'admin\r\n    return(\r\n        <> {auth?.user?.NiveauAcces === AccessLevel.admin ?\r\n           <Grid container spacing={2}>\r\n                { (demandes.length>0 || offres.length>0)?\r\n                <Grid item xs={12}>\r\n                    <Typography variant='h3'> \r\n                        En attende de validation \r\n                    </Typography>\r\n                </Grid> :\r\n                <Grid item xs={12}>\r\n                    <Typography variant='h3'> \r\n                        Rien à valider\r\n                    </Typography>\r\n                </Grid>\r\n                }\r\n                {demandes.length>0 ?\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container alignItems='center' spacing={2}> \r\n                        <Grid item>\r\n                            <Typography variant={'h6'}>Demandes de stage</Typography>\r\n                        </Grid>\r\n                        <Grid item style={{position: 'relative'}}>\r\n                            <FontAwesomeIcon icon={faLevelDownAlt}  size='lg' style={{position: 'absolute', top: '10px'}}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                            demandes.map(demande=>(\r\n                                <DashboardCardDemande demande={demande} type='attente' key={demande._id} updateDemande={getDemandes} />\r\n                            ))\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> :null\r\n                }\r\n                {offres.length>0 ?\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container alignItems='center' spacing={2}> \r\n                        <Grid item>\r\n                            <Typography variant={'h6'}>Offres de stage</Typography>\r\n                        </Grid>\r\n                        <Grid item style={{position: 'relative'}}>\r\n                            <FontAwesomeIcon icon={faLevelDownAlt}  size='lg'  style={{position: 'absolute', top: '10px'}}/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                            offres.map(offre=>(\r\n                                <DashboardCardOffre offre={offre} type='attente' key={offre._id} updateOffre={getOffres}/>            \r\n                            ))\r\n                            }\r\n                        </Grid>\r\n                    </Grid> \r\n                </Grid> :\r\n                null\r\n                }\r\n            </Grid>:\r\n            <Grid item xs={12}>\r\n            <Typography variant='h4'>{auth?.user && <><b>Bonjour</b> {auth?.user.Prenom + \" \" + auth?.user.Nom +'!'}</>}</Typography>\r\n            </Grid> \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardAccueil;","import { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Grid, InputAdornment, TextField, Typography } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchOffresDemandes } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport DashboardCardDemande from './DashboardCardDemande';\r\n\r\ntype Props = {\r\n};\r\n\r\n\r\n\r\nconst DashboardDemandes: React.FC<Props> =()=>{\r\n    const auth = useAuth();\r\n    const [demandes, setDemandes] = useState<OffresDemandesType[]>([]);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n\r\n    useEffect(()=>{\r\n        getDemandes();\r\n      \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n      //cherche les demandes dans l'api\r\n    const getDemandes = async () => {\r\n        let demandes : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        //filtre les demandes qui ne sont pas supprimées\r\n        demandes = demandes.filter(demande=> demande.Supprime===false && demande.Type==='demande');\r\n        console.log(demandes);\r\n        //si stagiaire tu vois tes demandes\r\n        if(auth?.user?.NiveauAcces===AccessLevel.stagiaire){\r\n            demandes= demandes.filter(demande=> demande.Auteur===auth?.user?._id)\r\n        } \r\n        //si entreprises tu vois toutes les demandes validées\r\n        if(auth?.user?.NiveauAcces===AccessLevel.entreprise){\r\n            demandes= demandes.filter(demande=> demande.Valide===true)\r\n        } \r\n        setDemandes(demandes);  \r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n         <Grid container spacing={3} alignItems='center' justify='center' >\r\n                <Grid item>\r\n                    <TextField\r\n                        label=\"Rechercher\"\r\n                        onChange={(e)=>setRecherche(e.target.value)}\r\n                        InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                    <SearchIcon/>\r\n                            </InputAdornment>\r\n                        )\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n               \r\n             </Grid>\r\n         <Grid container alignItems='center' spacing={3} > \r\n            <Grid item xs={12}>    \r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <Typography variant={'h4'}> {auth?.user?.NiveauAcces===AccessLevel.stagiaire? 'Mes demandes de stage':'Demandes de stage'}</Typography>\r\n                    </Grid>\r\n                    <Grid item style={{position: 'relative'}}>\r\n                        <FontAwesomeIcon icon={faLevelDownAlt}  size='lg'  style={{position: 'absolute', top: '30px'}} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                {demandes ? \r\n                    demandes.map(demande =>(\r\n                        demande.Titre.toLowerCase().includes(recherche.toLowerCase())&&\r\n                        <DashboardCardDemande demande={demande} key={demande._id} updateDemande={()=>getDemandes()}/>\r\n                        \r\n                        )):null\r\n                    }\r\n            </Grid>\r\n        </Grid>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardDemandes;","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchRegions } from '../../Api';\r\nimport { RegionsType } from '../../Types';\r\n\r\ntype Props = {\r\n    selectedId?: string,\r\n    onChange: (region: RegionsType | undefined)=>void\r\n};\r\n\r\nconst SelectRegion: React.FC<Props> =({selectedId,onChange})=>{\r\n    const [regions, setRegions] = useState<RegionsType[]>([]);\r\n    const [selectedRegion, setSelectedRegion] = useState<string|undefined>(selectedId);\r\n\r\n    useEffect(()=>{\r\n        getRegions();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getRegions = async () => {\r\n        let regions : RegionsType[] | undefined = await fetchRegions();\r\n        regions = regions.filter(region=> region.Supprime===false);\r\n        regions.sort((a, b) => (a.Name > b.Name) ? 1 : -1);\r\n\r\n        setRegions(regions);  \r\n    }\r\n\r\n\r\n    const handleChange =(event: React.ChangeEvent<{ value: unknown }>)=>{\r\n        setSelectedRegion(event.target.value as string);\r\n        let region= regions.find(region=> region._id===event.target.value);\r\n        onChange(region);\r\n    }\r\n\r\n\r\n    return(\r\n        <div data-testid=\"region-1\">\r\n        {regions.length > 0?\r\n        <FormControl style={{minWidth: '200px'}} >\r\n            <TextField\r\n                variant=\"outlined\"\r\n                label=\"Region\"\r\n                id=\"selectRegion\"\r\n                defaultValue={selectedId}\r\n                required\r\n                select\r\n                fullWidth\r\n                value={selectedRegion||\"\"}\r\n                onChange={(event)=>handleChange(event)}\r\n                margin='dense'\r\n                \r\n            >\r\n                {\r\n                regions.map(region => (\r\n                    <MenuItem key={region._id} value={region._id}>{region.Name}</MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl> : null\r\n        }\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default SelectRegion;\r\n\r\n","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\n\r\ntype Props = {\r\n    selected?: string,\r\n    onChange: (secteur: string | undefined)=>void\r\n};\r\n\r\nconst SelectRemuneration: React.FC<Props> =({selected, onChange})=>{\r\n    const [remuneration, setRemuneration] = React.useState(selected||'');\r\n    const remunerations=['Oui', 'Non', 'À la discrétion de l’entreprise']\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setRemuneration(event.target.value as string);\r\n    onChange(event.target.value as string)\r\n  };\r\n\r\n    return(\r\n        <>\r\n        <FormControl style={{minWidth: '200px'}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                label=\"Rémunération\"\r\n                id=\"selectRemuneration\"\r\n                required\r\n                select\r\n                fullWidth\r\n                value={remuneration}\r\n                onChange={(event)=>handleChange(event)}\r\n                margin='dense'\r\n            >\r\n                {\r\n                remunerations.map((remuneration,index) => (\r\n                    <MenuItem key={index+remuneration} value={remuneration}>{remuneration}</MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl>\r\n\r\n      \r\n       </>\r\n    )\r\n}\r\n\r\nexport default SelectRemuneration;","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchSecteursActivite } from '../../Api';\r\nimport { SecteursActiviteType } from '../../Types';\r\n\r\ntype Props = {\r\n    selectedId?: string,\r\n    onChange: (secteur: SecteursActiviteType | undefined)=>void\r\n};\r\n\r\nconst SelectSecteur: React.FC<Props> =({selectedId,onChange})=>{\r\n    const [secteurs, setSecteurs] = useState<SecteursActiviteType[]>([]);\r\n    const [selectedSecteur, setSelectedsecteur] = useState<string|undefined>(selectedId);\r\n\r\n    useEffect(()=>{\r\n        getsecteurs();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getsecteurs = async () => {\r\n        let secteurs : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n        secteurs = secteurs.filter(secteur=> secteur.Supprime===false);\r\n        secteurs.sort((a, b) => (a.Titre > b.Titre) ? 1 : -1);\r\n\r\n        setSecteurs(secteurs);  \r\n    }\r\n\r\n\r\n    const handleChange =(event: React.ChangeEvent<{ value: unknown }>)=>{\r\n        setSelectedsecteur(event.target.value as string);\r\n        let secteur= secteurs.find(secteur=> secteur._id===event.target.value);\r\n        onChange(secteur);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        {secteurs.length > 0?\r\n        <FormControl style={{minWidth: '200px', maxWidth: '350px'}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                select\r\n                label=\"Secteur\"\r\n                id=\"selectsecteur\"\r\n                defaultValue={selectedId}\r\n                value={selectedSecteur||\"\"}\r\n                onChange={(event)=>handleChange(event)}\r\n                required\r\n                margin='dense'\r\n\r\n            >\r\n                {\r\n                secteurs.map(secteur => (\r\n                    <MenuItem key={secteur._id} value={secteur._id}><div style={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>{secteur.Titre}</div></MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl> : null\r\n        }\r\n       </>\r\n    )\r\n}\r\n\r\nexport default SelectSecteur;\r\n","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchUtilisateurs } from '../../Api';\r\nimport { UtilisateursType } from '../../Types';\r\n\r\ntype Props = {\r\n    selectedId?: string,\r\n    onChange: (stagiaire: UtilisateursType | undefined)=>void\r\n};\r\n\r\nconst SelectStagiaire: React.FC<Props> =({selectedId,onChange})=>{\r\n    const [stagiaires, setStagiaires] = useState<UtilisateursType[]>([]);\r\n    const [selectedStagiaire, setSelectedStagiaire] = useState<string|undefined>(selectedId);\r\n\r\n    useEffect(()=>{\r\n        getstagiaires();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getstagiaires = async () => {\r\n        let stagiaires : UtilisateursType[] | undefined = await fetchUtilisateurs();\r\n        stagiaires = stagiaires.filter(stagiaire=> stagiaire.Supprime===false && stagiaire.Entreprise===false && stagiaire.NiveauAcces!==999);\r\n        stagiaires.sort((a, b) => (a.Nom > b.Nom) ? 1 : -1);\r\n\r\n        setStagiaires(stagiaires);  \r\n    }\r\n\r\n\r\n    const handleChange =(event: React.ChangeEvent<{ value: unknown }>)=>{\r\n        setSelectedStagiaire(event.target.value as string);\r\n        let stagiaire= stagiaires.find(stagiaire=> stagiaire._id===event.target.value);\r\n        onChange(stagiaire);\r\n    }\r\n\r\n    const NomComplet =(stagiaire:UtilisateursType )=>{\r\n        return stagiaire.Prenom+\" \"+stagiaire.Nom;\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {stagiaires.length > 0?\r\n        <FormControl style={{minWidth: '200px'}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                select\r\n                label=\"Stagiaire\"\r\n                id=\"selectstagiaire\"\r\n                required\r\n                defaultValue={selectedId}\r\n                value={selectedStagiaire||\"\"}\r\n                onChange={(event)=>handleChange(event)}\r\n                margin='dense'\r\n\r\n            >\r\n                {\r\n                stagiaires.map(stagiaire => (\r\n                    <MenuItem key={stagiaire._id} value={stagiaire._id}>{NomComplet(stagiaire)}</MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl> : null\r\n        }\r\n       </>\r\n    )\r\n}\r\n\r\nexport default SelectStagiaire;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { differenceInWeeks } from 'date-fns';\r\nimport { useState } from 'react';\r\n\r\nimport { updateOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\nimport SelectRemuneration from '../Selects/SelectRemuneration';\r\nimport SelectSecteur from '../Selects/SelectSecteur';\r\nimport SelectStagiaire from '../Selects/SelectStagiaire';\r\n\r\ntype Props = {\r\n    history: any\r\n};\r\n\r\nconst DashboardEditDemande: React.FC<Props> =({history})=>{\r\n    const auth = useAuth();\r\n    const [demande, setDemande]=useState<OffresDemandesType>(history.location.state.data) \r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingDemande, setUpdatingDemande] = useState(true);\r\n  \r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDemande({ ...demande, [event.target.name]: event.target.value });   \r\n    };\r\n    \r\n    //sauvegarde les changements  \r\n    const handleSave = async (e:any)=>{\r\n        e.preventDefault();\r\n        demandeUpdated();\r\n    }\r\n   \r\n    //mise à jour de la demande\r\n    async function demandeUpdated() {\r\n        try {\r\n            setUpdatingDemande(true);\r\n            const update=await updateOffreDemande(demande);\r\n          setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingDemande(false);\r\n            history.push('/dashboard/demandes')\r\n\r\n        }\r\n      }\r\n\r\n      console.log(demande.DureeSemaines)\r\n\r\n    return(\r\n        <form onSubmit={(e)=>handleSave(e)}>\r\n        <Grid container spacing={2} alignItems='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h4'>Créer une demande de stage</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Titre\"\r\n                        label=\"Titre\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='Titre'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.Titre}\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item>\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectStagiaire onChange={(selected)=>setDemande({ ...demande, Auteur: selected?._id||'' })} selectedId={demande.Auteur}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            <Grid item >\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectSecteur onChange={(selected)=>setDemande({ ...demande, SecteurActivite: selected?._id ||'' })} selectedId={demande.SecteurActivite}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={10}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Ville\"\r\n                        label=\"Ville\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='Ville'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.Ville}\r\n                    />\r\n            </Grid>\r\n            <Grid item>\r\n                <SelectRegion onChange={(selected)=>setDemande({ ...demande, Region: selected?._id||''  })} selectedId={demande.Region}/>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de début\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={demande.DateDebut}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>{\r\n                            var date: Date|null= selected;\r\n                            setDemande({ ...demande, \r\n                                DateDebut: selected || new Date(), \r\n                                DureeSemaines: differenceInWeeks( new Date(demande?.DateFin), date || new Date())\r\n                            }); \r\n                        }}\r\n                        margin='dense'\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de fin\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={demande.DateFin}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>{\r\n                            var date: Date|null= selected;\r\n                            setDemande({ ...demande, \r\n                                DateFin: selected || new Date(), \r\n                                DureeSemaines: differenceInWeeks(date || new Date(), new Date(demande?.DateDebut))\r\n                            }); \r\n                        }}\r\n                        margin='dense'\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"input-duree\"\r\n                    placeholder=\"Durée en semaines\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    margin='dense'\r\n                    type='text'\r\n                    //defaultValue={demande.DureeSemaines.toString()+ ' semaines'}\r\n                    value={demande.DureeSemaines+ ' semaines'}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-heures\"\r\n                        label=\"Nombre d'heures par semaine\"\r\n                        type='number'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='NombreHeuresSemaine'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.NombreHeuresSemaine}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                    <SelectRemuneration onChange={(remu)=>setDemande({...demande, Remuneration: remu||''})} selected={demande.Remuneration}/>\r\n            </Grid>\r\n           \r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Description poste recherche\"\r\n                    required\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    name='Description'\r\n                    onChange={handleChange}\r\n                    margin='dense'\r\n                    defaultValue={demande.Description}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Programmes suivis\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='ProgrammesSuivi'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.ProgrammesSuivi}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Competences acquises\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        name='CompetencesAcquises'\r\n                        required\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n                        defaultValue={demande.CompetencesAcquises}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Informations suplementaires\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        name='InformationsSuplementaires'\r\n                        rows={3}\r\n                        onChange={handleChange}\r\n                        defaultValue={demande.InformationsSuplementaires}\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Autres formations\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        name='AutresFormations'\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange}\r\n                        defaultValue={demande.AutresFormations}\r\n\r\n                    />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Grid container justify='flex-start' spacing={2}>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Sauvegarder la demande</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            onClick={()=>history.push('/dashboard/demandes')}\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Annuler</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> \r\n            </Grid>\r\n        </Grid>                  \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardEditDemande;\r\n","import { FormControl, MenuItem, TextField } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchUtilisateurs } from '../../Api';\r\nimport { UtilisateursType } from '../../Types';\r\n\r\ntype Props = {\r\n    selectedId?: string,\r\n    onChange: (entreprise: UtilisateursType | undefined)=>void\r\n};\r\n\r\nconst SelectEntreprise: React.FC<Props> =({selectedId,onChange})=>{\r\n    const [entreprises, setEntreprises] = useState<UtilisateursType[]>([]);\r\n    const [selectedEntreprise, setSelectedEntreprise] = useState<string|undefined>(selectedId);\r\n\r\n    useEffect(()=>{\r\n        getEntreprises();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getEntreprises = async () => {\r\n        let entreprises : UtilisateursType[] | undefined = await fetchUtilisateurs();\r\n        entreprises = entreprises.filter(entreprise=> entreprise.Supprime===false && entreprise.Entreprise);\r\n        entreprises.sort((a, b) => (a.NomEntreprise > b.NomEntreprise) ? 1 : -1);\r\n\r\n        setEntreprises(entreprises);  \r\n    }\r\n\r\n\r\n    const handleChange =(event: React.ChangeEvent<{ value: unknown }>)=>{\r\n        setSelectedEntreprise(event.target.value as string);\r\n        let entreprise= entreprises.find(entreprise=> entreprise._id===event.target.value);\r\n        onChange(entreprise);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        {entreprises.length > 0?\r\n        <FormControl style={{minWidth: '200px'}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                label=\"Entreprise\"\r\n                select\r\n                fullWidth\r\n                defaultValue={selectedId}\r\n                id=\"selectEntreprise\"\r\n                value={selectedEntreprise||\"\"}\r\n                onChange={(event)=>handleChange(event)}\r\n                required\r\n                margin='dense'\r\n\r\n            >\r\n                {\r\n                entreprises.map(entreprise => (\r\n                    <MenuItem key={entreprise._id} value={entreprise._id}>{entreprise.NomEntreprise}</MenuItem>\r\n                ))\r\n                }\r\n            </TextField> \r\n        </FormControl> : null\r\n        }\r\n       </>\r\n    )\r\n}\r\n\r\nexport default SelectEntreprise;\r\n\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { differenceInWeeks } from 'date-fns';\r\nimport { useState } from 'react';\r\n\r\nimport { updateOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectEntreprise from '../Selects/SelectEntreprise';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\nimport SelectSecteur from '../Selects/SelectSecteur';\r\n\r\ntype Props = {\r\n    history: any\r\n};\r\n\r\n\r\n\r\nconst DashboardEditOffre: React.FC<Props> =({history})=>{\r\n    const auth = useAuth();\r\n    const [offre, setOffre]=useState<OffresDemandesType>(history.location.state.data) \r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingOffre, setUpdatingOffre] = useState(true);\r\n   \r\n    //changements des fields\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setOffre({ ...offre, [event.target.name]: event.target.value });   \r\n    }\r\n\r\n    //changements des boutons switch \r\n    const handleChangeCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setOffre({ ...offre, [event.target.name]: event.target.checked });\r\n    }; \r\n\r\n    //sauvegarde l'offre\r\n    const handleSave = async (e:any)=>{\r\n        e.preventDefault();\r\n        OffreUpdated();\r\n    }\r\n    \r\n    //mise à jour de l'offre\r\n    async function OffreUpdated() {\r\n        try {\r\n            setUpdatingOffre(true);\r\n            const update=await updateOffreDemande(offre);\r\n          setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingOffre(false);\r\n            history.push('/dashboard/offres')\r\n\r\n        }\r\n      }\r\n  \r\n    return(\r\n    <form onSubmit={(e)=>handleSave(e)}>\r\n        <Grid container spacing={3} alignItems='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h4'>Édition offre de stage</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Titre\"\r\n                        label=\"Titre\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        defaultValue={offre.Titre}\r\n                        name='Titre'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item>\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectEntreprise onChange={(selected)=>setOffre({ ...offre, Auteur: selected?._id || '' })} selectedId={offre.Auteur}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            <Grid item >\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectSecteur onChange={(selected)=>setOffre({ ...offre, SecteurActivite: selected?._id || ''})} selectedId={offre.SecteurActivite}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={10}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Ville\"\r\n                        label=\"Ville\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        name='Ville'\r\n                        defaultValue={offre.Ville}\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item>\r\n                <SelectRegion onChange={(selected)=>setOffre({ ...offre, Region: selected?._id||'' })} selectedId={offre.Region}/>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de début\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={offre.DateDebut}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>{\r\n                            var date: Date|null= selected;\r\n                            setOffre({ ...offre, \r\n                                DateDebut: selected || new Date(), \r\n                                DureeSemaines: differenceInWeeks( new Date(offre?.DateFin), date || new Date())\r\n                            }); \r\n                        }}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de fin\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={offre.DateFin}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>{\r\n                            var date: Date|null= selected;\r\n                            setOffre({ ...offre, \r\n                                DateFin: selected || new Date(), \r\n                                DureeSemaines: differenceInWeeks(date || new Date(), new Date(offre?.DateDebut))\r\n                            }); \r\n                        }}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"input-duree\"\r\n                    placeholder=\"Durée en semaines\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    type='string'\r\n                    value={offre.DureeSemaines+ ' semaines'}\r\n                    margin='dense'\r\n\r\n                />\r\n            </Grid>\r\n        \r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-heures\"\r\n                        label=\"Nombre d'heures par semaine\"\r\n                        type='number'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        defaultValue={offre.NombreHeuresSemaine}\r\n                        name='NombreHeuresSemaine'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={5}> \r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}><b>Possibilité d'emploi aprés le stage?</b> </Grid>\r\n                    <Grid item> Non</Grid>\r\n                    <Grid item>\r\n                        <Switch\r\n                                    checked={offre.EmploiApresStage}\r\n                                    onChange={handleChangeCheck}\r\n                                    name=\"EmploiApresStage\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                        </Grid>\r\n                    <Grid item>Oui</Grid>\r\n                </Grid>    \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Description\"\r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue={offre.Description}\r\n                    variant=\"outlined\"\r\n                    name='Description'\r\n                    onChange={handleChange}\r\n                    margin='dense'\r\n\r\n                />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Competences recherches\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        defaultValue={offre.CompetencesRecherches}\r\n                        name='CompetencesRecherches'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Informations suplementaires\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        name='InformationsSuplementaires'\r\n                        defaultValue={offre.InformationsSuplementaires}\r\n                        rows={3}\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Rémunération\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        defaultValue={offre.Remuneration}\r\n                        name='Remuneration'\r\n                        onChange={handleChange}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item > \r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}><b>Offre de stage vedette?</b> </Grid>\r\n                    <Grid item> Non</Grid>\r\n                    <Grid item>\r\n                        <Switch\r\n                                    checked={offre.Vedette}\r\n                                    onChange={handleChangeCheck}\r\n                                    name=\"Vedette\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                        </Grid>\r\n                    <Grid item>Oui</Grid>\r\n                </Grid>    \r\n            </Grid>\r\n            }\r\n            <Grid item xs={12}>\r\n                <Grid container justify='flex-start' spacing={2}>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Sauvegarder l'offre</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            onClick={()=>history.push('/dashboard/offres')}\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Annuler</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> \r\n            </Grid>\r\n        </Grid>                  \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardEditOffre;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable array-callback-return */\r\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Input from '@material-ui/core/Input';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchSecteursActivite, fetchUtilisateur, updateUtilisateur } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { SecteursActiviteType, UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\n\r\ntype Props = {\r\n    history:any,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: '45vw',\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 250,\r\n      maxWidth: '45vw',\r\n    },\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    input: {\r\n        \"&:invalid\": {\r\n          border: \"red solid 2px\"\r\n        }\r\n      }\r\n  }),\r\n);\r\n\r\n\r\nconst DashboardProfil: React.FC<Props> =({history})=>{\r\n\r\nconst classes = useStyles();\r\nconst auth = useAuth();\r\n\r\nconst [user, setUser] = useState<UtilisateursType|null>(null);\r\n\r\nconst [secteursActivites, setSecteursActivites] = useState<SecteursActiviteType[]>([]);\r\nconst [update, setUpdate]= useState<String>('');\r\nconst [updatingUser, setUpdatingUser] = useState(true);\r\n\r\nuseEffect(()=>{\r\n    getSecteursActivites();\r\n    getUser();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n  \r\n  //cherche l'user dans la database\r\n  const getUser= async()=>{\r\n    let id='';\r\n    if(auth?.user!==undefined && auth?.user!==null)\r\n    id = auth?.user._id;\r\n    let user : UtilisateursType | undefined = await fetchUtilisateur(id);\r\n    //console.log(user);\r\n    setUser(user);\r\n} \r\n\r\n//cherche les secteurs d'activité\r\nconst getSecteursActivites = async () => {\r\n    let secteursActivites : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n    setSecteursActivites(secteursActivites);\r\n}\r\n\r\nconst Field = (defaultValue: string, label: string, key: string) => {\r\n    return (\r\n        <TextField\r\n            name={key}\r\n            fullWidth\r\n            id={\"input-\"+label}\r\n            label={label}\r\n            variant=\"outlined\"\r\n            onChange={handleChangeTextField}\r\n            defaultValue={defaultValue}\r\n            margin='dense'\r\n            required\r\n            type={label==='Téléphone'? \"tel\" : label==='Courriel'? 'email' :'text'}\r\n            inputProps={{ className: classes.input,pattern: label==='Téléphone'? \"[0-9]{3}[0-9]{3}[0-9]{4}\": null }}\r\n        />\r\n    )\r\n}\r\n\r\n//changements des textfields (onChange)\r\nconst handleChangeTextField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if(user)\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n    \r\n}\r\n\r\n//retourne les titres des secteurs pour le select\r\nconst getTitres =(ids: string[])=>{\r\n    let titres: string[]=[];\r\n    secteursActivites.map(secteur=> {\r\n        ids.map(id=>{\r\n            if(secteur._id===id)\r\n            titres.push(secteur.Titre);\r\n        })\r\n    })\r\n    return titres;\r\n}\r\n\r\n//sauvergarde les changements\r\nconst handleSave = async (e:any)=>{\r\n    e.preventDefault();\r\n    if(user){\r\n        let userEdited=user;\r\n        userEdited.PremierConnexion=false;\r\n        setUser(userEdited);\r\n\r\n    }\r\n    console.log(user)\r\n    userUpdated();\r\n}\r\n\r\n//mise à jour de l'utilisateur\r\nasync function userUpdated() {\r\n    try {\r\n        if(user) {\r\n        setUpdatingUser(true);\r\n        const update=await updateUtilisateur(user);\r\n        setUpdate(update);\r\n        }\r\n    } catch (e) {\r\n    } finally {\r\n        setUpdatingUser(false);\r\n        history.push({\r\n            pathname: \"/dashboard/update\",\r\n            state: {data: user}\r\n        }); \r\n\r\n    }\r\n  }\r\n\r\n return(\r\n         user?\r\n            <div> \r\n                <form onSubmit={(e)=>handleSave(e)}>\r\n            <Grid container spacing={2}>\r\n                {user.Entreprise?\r\n                <Grid item xs={2}> \r\n                    {Field(user.NomEntreprise, \"Nom de l'entreprise\",'NomEntreprise')}\r\n                </Grid>\r\n                : null}\r\n                <Grid item xs={3}>\r\n                    {Field(user.Prenom, user.Entreprise? 'Prénom de la personne responsable': 'Prénom','Prenom' )}\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    {Field(user.Nom, user.Entreprise? 'Nom de la personne responsable': 'Nom', 'Nom')}    \r\n                </Grid>\r\n                {user.Entreprise?\r\n                <Grid item xs={2}>\r\n                    {Field(user.Logo, \"Logo\", 'Logo')}\r\n                </Grid>\r\n                : null}\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={3}> \r\n                    {Field(user.Adresse, \"Adresse\",'Adresse')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    {Field(user.Ville, \"Ville\", 'Ville')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <SelectRegion selectedId={user.Region} onChange={(region)=>setUser({ ...user, Region: region?._id as string })} />\r\n                    \r\n                </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={3}> \r\n                    {Field(user.Courriel, \"Courriel\", 'Courriel')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    {Field(user.Telephone, \"Téléphone\", 'Telephone')}\r\n                </Grid>\r\n                { user.NiveauAcces !== AccessLevel.admin?\r\n                <Grid item xs={3}>\r\n                    {Field(user.SiteWeb, \"Site web\", 'SiteWeb')}\r\n                </Grid> :null\r\n                }\r\n        </Grid>\r\n        { !user.Entreprise && user.NiveauAcces !== AccessLevel.admin?\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        name='Ecole'\r\n                        fullWidth\r\n                        id=\"input-Ecole\"\r\n                        label='École'\r\n                        variant=\"outlined\"\r\n                        defaultValue={user.Ecole}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12}> \r\n                    <TextField\r\n                        name='CV'\r\n                        fullWidth\r\n                        id=\"input-CV\"\r\n                        label=\"CV\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows='6'\r\n                        defaultValue={user.CV}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        name='MessageMotivation'\r\n                        fullWidth\r\n                        id=\"input-MessageMotivation\"\r\n                        label='Message de motivation'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows='6'\r\n                        defaultValue={user.MessageMotivation}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n        </Grid> :null\r\n        }\r\n         { user.Entreprise?\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-mutiple-chip-label\">Secteurs d'activités</InputLabel>\r\n                        <Select\r\n                        labelId=\"demo-mutiple-chip-label\"\r\n                        id=\"demo-mutiple-chip\"\r\n                        multiple\r\n                        value={user.SecteursActivites}\r\n                        onChange={(e)=>{\r\n                            console.log(e.target.value);\r\n                            setUser({ ...user, SecteursActivites: e.target.value as string[] })                      \r\n                        }}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={(selected) => (\r\n                            <div className={classes.chips}>\r\n                            {(getTitres(selected as string[]) as string[]).map((value) => (\r\n                                <Chip key={value} label={value} className={classes.chip}/>\r\n                            ))}\r\n                            </div>\r\n                        )}\r\n                        MenuProps={MenuProps}\r\n                        >\r\n                        {secteursActivites.map((secteur) => (\r\n                            <MenuItem key={secteur._id} value={secteur._id}>\r\n                                {secteur.Titre}     \r\n                            </MenuItem>\r\n                        ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                        {Field(user.PostesStagiaires, \"Types de postes sensibles à accueillir des stagiaires\", 'PostesStagiaires')}\r\n                </Grid>\r\n               \r\n        </Grid> :null\r\n        }\r\n        <Grid container justify='flex-end' spacing={2} direction='row-reverse'>\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<SaveIcon/>}\r\n                    size=\"small\"\r\n                    type='submit'\r\n                >\r\n                    Save\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={()=>{\r\n                        history.push(\"/dashboard/update\");\r\n\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n        </form>\r\n    </div>:null\r\n    )\r\n}\r\n\r\nexport default DashboardProfil;","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable array-callback-return */\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    Switch,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Input from '@material-ui/core/Input';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchSecteursActivite, updateUtilisateur } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { SecteursActiviteType, UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\n\r\ntype Props = {\r\n    history: any\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: '45vw',\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 250,\r\n      maxWidth: '45vw',\r\n    },\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    input: {\r\n        \"&:invalid\": {\r\n          border: \"red solid 2px\"\r\n        }\r\n      }\r\n  }),\r\n);\r\n\r\n\r\nconst DashboardEditUsers: React.FC<Props> =({history})=>{\r\n\r\nconst classes = useStyles();\r\n  \r\nconst [user, setUser] = useState<UtilisateursType>(history.location.state.data);\r\nconst [secteursActivites, setSecteursActivites] = useState<SecteursActiviteType[]>([]);\r\nconst [update, setUpdate]= useState<String>('');\r\nconst [updatingUser, setUpdatingUser] = useState(true);\r\nconst auth = useAuth();\r\n\r\nuseEffect(()=>{\r\n    getSecteursActivites();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n  \r\n\r\n\r\nconst getSecteursActivites = async () => {\r\n    let secteursActivites : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n    setSecteursActivites(secteursActivites);\r\n}\r\n\r\nconst Field = (defaultValue: string, label: string, key: string) => {\r\n    return (\r\n        <TextField\r\n            name={key}\r\n            fullWidth\r\n            id={\"input-\"+label}\r\n            label={label}\r\n            variant=\"outlined\"\r\n            onChange={handleChangeTextField}\r\n            defaultValue={defaultValue}\r\n            margin='dense'\r\n            type={label==='Téléphone'? \"tel\" : label==='Courriel'? 'email' :'text'}\r\n            inputProps={{ className: classes.input,pattern: label==='Téléphone'? \"[0-9]{3}[0-9]{3}[0-9]{4}\": null }}\r\n        />\r\n    )\r\n}\r\n// onChange des textfields\r\nconst handleChangeTextField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n    \r\n}\r\n// onChange des textfields\r\nconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, [event.target.name]: event.target.checked });\r\n};\r\n\r\n//retourne les titres des secteurs\r\nconst getTitres =(ids: string[])=>{\r\n    let titres: string[]=[];\r\n    secteursActivites.map(secteur=> {\r\n        ids.map(id=>{\r\n            if(secteur._id===id)\r\n            titres.push(secteur.Titre);\r\n        })\r\n    })\r\n    return titres;\r\n}\r\n\r\nconst handleSave = async ()=>{\r\n    userUpdated();\r\n}\r\n\r\n//mise à jour de l'utilisateur\r\nasync function userUpdated() {\r\n    try {\r\n        setUpdatingUser(true);\r\n        const update=await updateUtilisateur(user);\r\n      setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setUpdatingUser(false);\r\n        history.location.pathname==='/dashboard/profil'? history.push(\"/dashboard/accueil\") :\r\n        user.NiveauAcces === 333? history.push('/dashboard/entreprises'):user.NiveauAcces === 111?\r\n        history.push('/dashboard/candidats'): history.push('/dashboard/admins');\r\n    }\r\n  }\r\n\r\n return(\r\n        <>  { auth?.user?.NiveauAcces===AccessLevel.admin ?\r\n            <Grid container>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={user.Valide}\r\n                            onChange={handleChange}\r\n                            color=\"primary\"\r\n                            name=\"Valide\"\r\n                        /> \r\n                    }\r\n                    label=\"Validé\"\r\n                />  \r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={user.Actif}\r\n                            onChange={handleChange}\r\n                            color=\"primary\"\r\n                            name=\"Actif\"\r\n                        /> \r\n                    }\r\n                    label=\"Actif\"\r\n                /> \r\n            </Grid> :null\r\n            }\r\n            <Grid container spacing={2}>\r\n                {user.Entreprise?\r\n                <Grid item xs={2}> \r\n                    {Field(user.NomEntreprise, \"Nom de l'entreprise\",'NomEntreprise')}\r\n                </Grid>\r\n                : null}\r\n                <Grid item xs={3}>\r\n                    {Field(user.Prenom, user.Entreprise? 'Prénom de la personne responsable': 'Prénom','Prenom' )}\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    {Field(user.Nom, user.Entreprise? 'Nom de la personne responsable': 'Nom', 'Nom')}    \r\n                </Grid>\r\n                {user.Entreprise?\r\n                <Grid item xs={2}>\r\n                    {Field(user.Logo, \"Logo\", 'Logo')}\r\n                </Grid>\r\n                : null}\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={3}> \r\n                    {Field(user.Adresse, \"Adresse\",'Adresse')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    {Field(user.Ville, \"Ville\", 'Ville')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <SelectRegion selectedId={user.Region} onChange={(region)=>setUser({ ...user, Region: region?._id as string })}/>\r\n                </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={3}> \r\n                    {Field(user.Courriel, \"Courriel\", 'Courriel')}\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    {Field(user.Telephone, \"Téléphone\", 'Telephone')}\r\n                </Grid>\r\n                { user.NiveauAcces !== AccessLevel.admin?\r\n                <Grid item xs={3}>\r\n                    {Field(user.SiteWeb, \"Site web\", 'SiteWeb')}\r\n                </Grid> :null\r\n                }\r\n        </Grid>\r\n        { !user.Entreprise && user.NiveauAcces !== AccessLevel.admin?\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        name='Ecole'\r\n                        fullWidth\r\n                        id=\"input-Ecole\"\r\n                        label='École'\r\n                        variant=\"outlined\"\r\n                        defaultValue={user.Ecole}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12}> \r\n                    <TextField\r\n                        name='CV'\r\n                        fullWidth\r\n                        id=\"input-CV\"\r\n                        label=\"CV\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows='6'\r\n                        defaultValue={user.CV}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        name='MessageMotivation'\r\n                        fullWidth\r\n                        id=\"input-MessageMotivation\"\r\n                        label='Message de motivation'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows='6'\r\n                        defaultValue={user.MessageMotivation}\r\n                        margin='dense'\r\n                        onChange={handleChangeTextField}\r\n                        />\r\n                </Grid>\r\n        </Grid> :null\r\n        }\r\n         { user.Entreprise?\r\n        <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-mutiple-chip-label\">Secteurs d'activités</InputLabel>\r\n                        <Select\r\n                        labelId=\"demo-mutiple-chip-label\"\r\n                        id=\"demo-mutiple-chip\"\r\n                        multiple\r\n                        value={user.SecteursActivites}\r\n                        onChange={(e)=>{\r\n                            //console.log(e.target.value);\r\n                            setUser({ ...user, SecteursActivites: e.target.value as string[] })                      \r\n                        }}\r\n                        input={<Input id=\"select-multiple-chip\" />}\r\n                        renderValue={(selected) => (\r\n                            <div className={classes.chips}>\r\n                            {(getTitres(selected as string[]) as string[]).map((value) => (\r\n                                <Chip key={value} label={value} className={classes.chip}/>\r\n                            ))}\r\n                            </div>\r\n                        )}\r\n                        MenuProps={MenuProps}\r\n                        >\r\n                        {secteursActivites.map((secteur) => (\r\n                            <MenuItem key={secteur._id} value={secteur._id}>\r\n                                {secteur.Titre}     \r\n                            </MenuItem>\r\n                        ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                \r\n               \r\n        </Grid> :null\r\n        }\r\n        <Grid container justify='flex-end' spacing={2} direction='row-reverse'>\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<SaveIcon/>}\r\n                    size=\"small\"\r\n                    onClick={()=>handleSave()}\r\n                >\r\n                    Save\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={()=>{\r\n                        history.location.pathname==='/dashboard/profil'? history.push(\"/dashboard/accueil\") :\r\n                        user.NiveauAcces === 333? history.push('/dashboard/entreprises'):user.NiveauAcces === 111?\r\n                        history.push('/dashboard/candidats'): history.push('/dashboard/admins');\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default DashboardEditUsers;","import { faEdit, faLevelDownAlt, faTimes, faUserGraduate, faUserNinja, faUserTie } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { updateUtilisateur } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n  history: any\r\n};\r\n\r\nconst DashBoardFicheUser: React.FC<Props> =({history})=>{\r\n    const auth = useAuth();\r\n    const [user, ] = useState<UtilisateursType>(history.location.state.data);\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [update, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingUser, setUpdatingUser] = useState(true);\r\n\r\n    const handleEdit = (user: UtilisateursType) =>{\r\n\r\n        history.push({\r\n            pathname: '/dashboard/edit/user/'+user._id,\r\n            state: {data: user}\r\n        });\r\n    }\r\n\r\n    //mise à jour de l'utilisateur dans la DB après le delete (onClick)\r\n    async function userUpdated(user:UtilisateursType) {\r\n        try {\r\n            const update=await updateUtilisateur(user);\r\n            setUpdatingUser(true);\r\n            setUpdate(update); \r\n             \r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingUser(false);\r\n            history.push(user.NiveauAcces===AccessLevel.admin? '/dashboard/admins' :\r\n            user.NiveauAcces===AccessLevel.stagiaire? '/dashboard/candidats': '/dashboard/entreprises'\r\n            )\r\n        }\r\n      }\r\n    \r\n      //suppression (onClick) de l'utilisateur\r\n    const handleSupprimer =()=>{\r\n        user.Supprime=true;\r\n        userUpdated(user);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n          <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2} alignItems='flex-end'> \r\n                        <Grid item>\r\n                            <Typography variant='h4'>\r\n                                {user?.NiveauAcces===AccessLevel.entreprise?\"Fiche de l'entreprise!\":\r\n                                user?.NiveauAcces===AccessLevel.stagiaire ? 'Fiche du candidat': \"Fiche de l'administrateur\"\r\n                                \r\n                                }</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FontAwesomeIcon icon={faLevelDownAlt} size=\"lg\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                        <Button variant=\"contained\" size=\"small\" style={{color:'white',backgroundColor:'dimGray'}}\r\n                        onClick={()=>history.push(user.NiveauAcces===AccessLevel.admin? '/dashboard/admins' :\r\n                        user.NiveauAcces===AccessLevel.stagiaire? '/dashboard/candidats': '/dashboard/entreprises')}\r\n                        >\r\n                            Retour à la liste\r\n                        </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify='flex-end' spacing={1}>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" size=\"small\" \r\n                            onClick={()=>handleEdit(user)}\r\n                            startIcon={  <FontAwesomeIcon icon={faEdit} color=\"green\"/>}\r\n                            >\r\n                                Modifier\r\n                            </Button>\r\n                        </Grid>\r\n                        { user?._id !== auth?.user?._id &&\r\n                        <Grid item>\r\n                            <Button \r\n                                //onClick={supprimer}\r\n                                variant=\"outlined\" \r\n                                size=\"small\"  \r\n                                startIcon={<FontAwesomeIcon icon={faTimes} color=\"red\"/>}\r\n                                onClick={handleSupprimer}\r\n                            >\r\n                                Supprimer\r\n                            </Button>\r\n                        </Grid> \r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{borderTop: '5px solid #3e99df', marginTop: '20px', marginBottom: '20px', padding: '0'}}>\r\n                            <Grid container  style={{borderBottom: '2px solid black', marginTop: '15px'}}>\r\n                                <Grid item>\r\n                                    <Grid container spacing={2} > \r\n                                        <Grid item style={{paddingBottom: '0px'}}>\r\n                                            <FontAwesomeIcon \r\n                                            icon={user?.NiveauAcces===AccessLevel.stagiaire? faUserGraduate: user?.NiveauAcces===AccessLevel.entreprise ? faUserTie: faUserNinja} \r\n                                            size=\"2x\"  />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant='h5' style={{fontWeight: 'bold'}}>\r\n                                                {user?.Entreprise? user.NomEntreprise : user?.Prenom+\" \"+user?.Nom}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {user?.NiveauAcces===AccessLevel.stagiaire ?\r\n                        <>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Nom et prénom du stagiaire:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Prenom+\" \"+user?.Nom}\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Établissement scolaire:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Ecole}\r\n                        </Grid>\r\n                        </> : user?.NiveauAcces===AccessLevel.entreprise ?\r\n                        <>\r\n                            <Grid item xs={12} sm={4} className='background'>\r\n                                <b>Entreprise:</b>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} className='background'>\r\n                                {user?.NomEntreprise}\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12} sm={4} className='background'>\r\n                                <b>Prénom et nom de la personne responsable:</b>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} className='background'>\r\n                                {user?.Prenom+\" \"+user?.Nom}\r\n                            </Grid>\r\n                        </>:<>\r\n                             <Grid item xs={12} sm={4} className='background'>\r\n                                <b>Nom et prénom de l'administrateur:</b>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} className='background'>\r\n                                {user?.Prenom+\" \"+user?.Nom}\r\n                            </Grid>\r\n                        </>\r\n                        }\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b>Courriel:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Courriel}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b> Téléphone:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Telephone}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} className='background'>\r\n                            <b> Ville:</b>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} className='background'>\r\n                            {user?.Ville}\r\n                        </Grid>\r\n                    </Grid>\r\n  \r\n                </Grid>\r\n          </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashBoardFicheUser;\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.bold{\r\n    font-weight: bold\r\n}\r\n\r\n.background{\r\n    background-color: white;\r\n    border: 1px solid gainsboro\r\n}\r\n`","import {\r\n    Button,\r\n    ButtonGroup,\r\n    FormControl,\r\n    FormHelperText,\r\n    FormLabel,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLastLocation } from 'react-router-last-location';\r\n\r\nimport { addUtilisateur } from '../../Api';\r\nimport { UtilisateursType } from '../../Types';\r\n\r\ntype Props = {\r\n};\r\n\r\ninterface State {\r\n    password: string,\r\n    confirmation: string,\r\n    nom: string,\r\n    prenom: string,\r\n    email: string,\r\n    showPassword: boolean,\r\n    showConfirmation: boolean,\r\n    entreprise: boolean|undefined,\r\n    NiveauAcces: number,\r\n    nomEntreprise: string\r\n  }\r\n\r\n//Formulaire de création d'un nouveau utilisateur\r\nconst DashboardNouveauUser: React.FC<Props> =()=>{\r\n    const history= useHistory();\r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingUtilisateur, setUpdatingUtilisateur] = useState(true);\r\n    const [, setAddedUtilisateur] = useState(false);\r\n    const [error,setError] = useState<boolean>(false);\r\n    const lastLocation = useLastLocation();\r\n    const [values, setValues] = useState<State>({\r\n        password: '',\r\n        confirmation: '',\r\n        nom: '',\r\n        prenom: '',\r\n        email: '',\r\n        showPassword: false,\r\n        showConfirmation: false,\r\n        entreprise: lastLocation?.pathname==='/dashboard/entreprises'? true: false ,\r\n        NiveauAcces:lastLocation?.pathname==='/dashboard/candidats'? 111: lastLocation?.pathname==='/dashboard/entreprises'? 333:999 ,\r\n        nomEntreprise: ''\r\n      });\r\n\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n      };\r\n\r\n    const handleClickShowConfirmation = () => {\r\n    setValues({ ...values, showConfirmation: !values.showConfirmation });\r\n    };\r\n    \r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    const handleCreation= async (e:any)=>{\r\n        e.preventDefault();\r\n        setError(false);\r\n        let error=false;\r\n        if(values.confirmation!== values.password){\r\n            setError(true);\r\n            error=true;\r\n        } \r\n        if(values.entreprise === undefined){\r\n            setError(true);\r\n            error=true;\r\n        } \r\n\r\n       let newUser: UtilisateursType={\r\n           Prenom: values.prenom,\r\n           Nom: values.nom,\r\n           Courriel: values.email,\r\n           Entreprise: values.entreprise||false,\r\n           MotdePasse: values.password,\r\n           Valide: false,\r\n           Supprime: false,\r\n           Actif: true,\r\n           PremierConnexion: true,\r\n           NomEntreprise: values.nomEntreprise,\r\n           NiveauAcces:values.NiveauAcces,\r\n           _id:'',\r\n           Adresse: '',\r\n           Ville: '',\r\n           Region: '',\r\n           Logo:'',\r\n           Telephone:'',\r\n           SiteWeb:'',\r\n           CV:'',\r\n           MessageMotivation:'',\r\n           SecteursActivites: [],\r\n           Ecole:'',\r\n           PostesStagiaires:''\r\n        }\r\n\r\n        if(!error){\r\n            utilisateurAdded(newUser);\r\n        }\r\n\r\n    }\r\n\r\n    async function utilisateurAdded(newUser: UtilisateursType) {\r\n        try {\r\n            setUpdatingUtilisateur(true);\r\n            const update=await addUtilisateur(newUser)\r\n            setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingUtilisateur(false);\r\n            let NiveauAcces=values.NiveauAcces;\r\n            let valuesClear={\r\n                password: '',\r\n                confirmation: '',\r\n                nom: '',\r\n                prenom: '',\r\n                email: '',\r\n                showPassword: false,\r\n                showConfirmation: false,\r\n                entreprise: undefined,\r\n                NiveauAcces: 111,\r\n                nomEntreprise: ''\r\n            };\r\n            \r\n            setValues(valuesClear);\r\n            setAddedUtilisateur(true);\r\n            NiveauAcces===111? history.push('/dashboard/candidats'):NiveauAcces===333 ? history.push('/dashboard/entreprises'): history.push('/dashboard/admins');\r\n        }\r\n      }\r\n\r\n    return(\r\n    <form onSubmit={(e)=>handleCreation(e)}>\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} >\r\n                <Typography variant='h4'>\r\n                    Créer une compte {values.NiveauAcces===111? 'étudiant': \r\n                    values.NiveauAcces===333? 'entreprise': 'administrateur'}\r\n                </Typography> \r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Grid container spacing={2} >\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={2} alignItems='center'>\r\n                            <Grid item> <FormLabel>Type d'utilisateur?</FormLabel></Grid>\r\n                            <Grid item>\r\n                                <ButtonGroup disableElevation variant=\"contained\"  >\r\n                                    <Button \r\n                                    variant={values.NiveauAcces===333 ? 'contained' : 'outlined'}\r\n                                    style={{ textTransform: 'none'}} \r\n                                    color='primary'\r\n                                    onClick={()=>setValues({ ...values, entreprise: true,NiveauAcces: 333 })}\r\n                                    >\r\n                                        Une entreprise\r\n                                    </Button>\r\n                                    <Button \r\n                                    style={{textTransform: 'none'}}\r\n                                    variant={values.NiveauAcces===111  ? 'contained' : 'outlined'} \r\n                                    onClick={()=>setValues({ ...values, entreprise: false,NiveauAcces: 111 })}\r\n                                    color='primary'\r\n                                    >\r\n                                        Un étudiant\r\n                                    </Button>\r\n                                    <Button \r\n                                    style={{textTransform: 'none'}}\r\n                                    variant={values.NiveauAcces===999  ? 'contained' : 'outlined'} \r\n                                    onClick={()=>setValues({ ...values, entreprise: false,NiveauAcces: 999 })}\r\n                                    color='primary'\r\n                                    >\r\n                                        Un administrateur\r\n                                    </Button>\r\n                                </ButtonGroup>  \r\n                            </Grid>\r\n                            <Grid item>\r\n                            <FormHelperText \r\n                                error={error ? values.entreprise===undefined: error }>\r\n                                {error? values.entreprise===undefined ? 'Vous devez choisir une option!':null:null } \r\n                                </FormHelperText>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={2}>\r\n                            {values.entreprise &&\r\n                            <Grid item xs={12}>\r\n                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"input-nomEntreprise\"\r\n                                    label=\"Nom de l'entreprise\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={values.nomEntreprise}\r\n                                    required\r\n                                    onChange={handleChange('nomEntreprise')}\r\n\r\n                                />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            }\r\n                            <Grid item xs={6}>\r\n                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"input-prenom\"\r\n                                    label={values.entreprise?'Prénom de la personne responsable':'Prénom'}\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={values.prenom}\r\n                                    required\r\n                                    onChange={handleChange('prenom')}\r\n\r\n                                />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        id=\"input-nom\"\r\n                                        label={values.entreprise?'Nom de la personne responsable':'Nom'}\r\n                                        variant=\"outlined\"\r\n                                        defaultValue={values.nom}\r\n                                        required\r\n                                        onChange={handleChange('nom')}\r\n                                    />\r\n                                    </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl variant=\"outlined\" fullWidth required>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"input-courriel\"\r\n                                label=\"Courriel\"\r\n                                variant=\"outlined\"\r\n                                type='email'\r\n                                required\r\n                                onChange={handleChange('email')}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Mot de passe</InputLabel>\r\n                            <OutlinedInput\r\n                                fullWidth\r\n                                id=\"outlined-adornment-password\"\r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                onChange={handleChange('password')}\r\n                                required\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                    >\r\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                                labelWidth={110}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                            <InputLabel htmlFor=\"outlined-adornment-confirmation\">Confirmez le nouveau mot de passe</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                fullWidth\r\n                                id=\"outlined-adornment-confirmation\"\r\n                                type={values.showConfirmation ? 'text' : 'password'}\r\n                                value={values.confirmation}\r\n                                onChange={handleChange('confirmation')}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowConfirmation}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                    >\r\n                                    {values.showConfirmation ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                                labelWidth={300}\r\n                            />\r\n                        </FormControl>\r\n                        <FormHelperText \r\n                            error={error ? values.password!==values.confirmation: error }>\r\n                            {error? values.password!==values.confirmation ? 'Les mots de passe doivent être identiques!':null:null } \r\n                        </FormHelperText>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n            <Grid item xs={6}>\r\n                <Grid container justify='flex-start'>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Creér le compte</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>  \r\n            </Grid>\r\n        </Grid>                            \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardNouveauUser;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { differenceInWeeks } from 'date-fns';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLastLocation } from 'react-router-last-location';\r\n\r\nimport { addOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\nimport SelectRemuneration from '../Selects/SelectRemuneration';\r\nimport SelectSecteur from '../Selects/SelectSecteur';\r\nimport SelectStagiaire from '../Selects/SelectStagiaire';\r\n\r\ntype Props = {\r\n};\r\n\r\ninterface State {\r\n    Titre: string,\r\n    SecteursActivite: string|undefined,\r\n    Ville: string,\r\n    Region: string|undefined,\r\n    DateDebut: Date|null,\r\n    DateFin: Date|null,\r\n    Auteur:string|undefined,\r\n    DureeStage: string,\r\n    Description: string,\r\n    NombreHeuresSemaine: number|undefined,\r\n    ProgrammesSuivi:string,\r\n    CompetencesAcquises: string,\r\n    InformationsSuplementaires: string,\r\n    AutresFormations: string,\r\n    DateParution: Date, \r\n    DureeSemaines: number, \r\n    TypeStage: string,\r\n    Remuneration: string\r\n }\r\n\r\n//formulaire de création d'une nouvelle demande de stage\r\nconst DashboardNouvelleDemande: React.FC<Props> =()=>{\r\n    const history= useHistory();\r\n    const auth = useAuth();\r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingDemande, setUpdatingDemande] = useState(true);\r\n    const lastLocation = useLastLocation();\r\n\r\n    const [values, setValues] = useState<State>({\r\n        Titre: \"\",\r\n        SecteursActivite: undefined,\r\n        Ville: \"\",\r\n        Region: undefined,\r\n        DateDebut: null,\r\n        DateFin: null,\r\n        Auteur:auth?.user?.NiveauAcces===AccessLevel.stagiaire ? auth?.user._id: undefined,\r\n        DureeStage: \"\",\r\n        Description: \"\",\r\n        NombreHeuresSemaine: 0,\r\n        ProgrammesSuivi:\"\",\r\n        CompetencesAcquises: \"\",\r\n        InformationsSuplementaires: \"\",\r\n        AutresFormations: \"\",\r\n        DateParution: new Date(), \r\n        DureeSemaines: 0, \r\n        TypeStage: \"\",\r\n        Remuneration:\"\"\r\n      });\r\n\r\n   \r\n    \r\n\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        \r\n    };\r\n    \r\n   \r\n\r\n\r\n    const handleCreation= async (e:any)=>{\r\n        e.preventDefault();\r\n        console.log('created');\r\n        let dif;\r\n        if(values.DateFin!==null &&values.DateDebut!==null){\r\n        dif= differenceInWeeks(values?.DateFin,values?.DateDebut);\r\n        setValues({ ...values, DureeSemaines: dif,\r\n            DureeStage: dif?.toString()+\" semaines\" \r\n        });\r\n        }\r\n\r\n        //console.log(dif);\r\n\r\n        let nouvelleOffre: OffresDemandesType={\r\n            _id:'',\r\n            Titre: values.Titre,\r\n            Type: 'demande',\r\n            SecteurActivite: values.SecteursActivite || \"\",\r\n            Ville: values.Ville,\r\n            Region: values.Region ||\"\",\r\n            DateDebut: values.DateDebut || new Date(),\r\n            DateFin: values.DateFin|| new Date(),\r\n            DureeStage: dif?.toString()+\" semaines\",\r\n            Description: values.Description,\r\n            NombreHeuresSemaine: Number(values.NombreHeuresSemaine),\r\n            CompetencesRecherches: \"\",\r\n            EmploiApresStage: false,\r\n            InformationsSuplementaires: values.InformationsSuplementaires,\r\n            ProgrammesSuivi: values.ProgrammesSuivi,\r\n            AutresFormations: values.AutresFormations,\r\n            CompetencesAcquises: values.CompetencesAcquises,\r\n            DescriptionPosteRecherche: \"\",\r\n            Remuneration: \"\",\r\n            DateParution: values.DateParution,\r\n            AutresInformations: \"\",\r\n            Actif: true,\r\n            Supprime: false,\r\n            Valide: auth?.user?.NiveauAcces===AccessLevel.admin? true: false,\r\n            Communications:[{\r\n                Date: new Date(),\r\n                EnvoyeParID: \"\",\r\n                Message: \"\",\r\n                NbMessages: 1\r\n            }],\r\n            Auteur:  values.Auteur || '',\r\n            TypeStage: '',\r\n            DureeSemaines: dif||0,\r\n            Vedette: false\r\n        }\r\n        //console.log(nouvelleOffre)\r\n \r\n        demandeAdded(nouvelleOffre);\r\n       \r\n    }\r\n\r\n    async function demandeAdded(newOffre: OffresDemandesType) {\r\n        try {\r\n            const update=await addOffreDemande(newOffre);\r\n            setUpdatingDemande(true);\r\n            setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingDemande(false);\r\n            history.push(lastLocation?.pathname||'/dashboard/')\r\n        }\r\n      }\r\n\r\n    return(\r\n    <form onSubmit={(e)=>handleCreation(e)}>\r\n        <Grid container spacing={2} alignItems='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h4'>Créer une demande de stage</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Titre\"\r\n                        label=\"Titre\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('Titre')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item>\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectStagiaire onChange={(selected)=>setValues({ ...values, Auteur: selected?._id })}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            <Grid item >\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectSecteur onChange={(selected)=>setValues({ ...values, SecteursActivite: selected?._id })}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={10}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Ville\"\r\n                        label=\"Ville\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('Ville')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item>\r\n                <SelectRegion onChange={(selected)=>setValues({ ...values, Region: selected?._id })}/>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de début\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={values.DateDebut}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>setValues({ ...values, DateDebut: selected })}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de fin\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={values.DateFin}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>setValues({ ...values, DateFin: selected })}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"input-duree\"\r\n                    placeholder=\"Durée en semaines\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    margin='dense'\r\n                    type='string'\r\n                    value={(values.DateDebut && values.DateFin) ? \r\n                        differenceInWeeks(values?.DateFin,values?.DateDebut).toString() + \" semaines\" : \"0 semaines\"}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-heures\"\r\n                        label=\"Nombre d'heures par semaine\"\r\n                        type='number'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('NombreHeuresSemaine')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                    <SelectRemuneration onChange={(remu)=>setValues({...values, Remuneration: remu||''})}/>\r\n            </Grid>\r\n           \r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Description poste recherche\"\r\n                    required\r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue=\"\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange('Description')}\r\n                    margin='dense'\r\n\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Programmes suivis\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('ProgrammesSuivi')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Competences acquises\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('CompetencesAcquises')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Informations suplementaires\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange('InformationsSuplementaires')}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Autres formations\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange('AutresFormations')}\r\n                    />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Grid container justify='flex-start'>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Creér la demande</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> \r\n            </Grid>\r\n        </Grid>                  \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardNouvelleDemande;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { differenceInWeeks } from 'date-fns';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLastLocation } from 'react-router-last-location';\r\n\r\nimport { addOffreDemande } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport SelectEntreprise from '../Selects/SelectEntreprise';\r\nimport SelectRegion from '../Selects/SelectRegion';\r\nimport SelectSecteur from '../Selects/SelectSecteur';\r\n\r\ntype Props = {\r\n};\r\n\r\ninterface State {\r\n    Titre: string,\r\n    SecteursActivite: string|undefined,\r\n    Ville: string,\r\n    Region: string|undefined,\r\n    DateDebut: Date|null,\r\n    DateFin: Date|null,\r\n    Auteur:string|undefined,\r\n    DureeStage: string,\r\n    Description: string,\r\n    NombreHeuresSemaine: number|undefined,\r\n    CompetencesRecherches:string,\r\n    EmploiApresStage: boolean,\r\n    InformationsSuplementaires: string,\r\n    Remuneration: string,\r\n    DateParution: Date, \r\n    DureeSemaines: number,\r\n    Vedette: boolean\r\n  }\r\n\r\n//Formulaire de création d'une nouvelle offre\r\nconst DashboardNouvelleOffre: React.FC<Props> =()=>{\r\n    const history= useHistory();\r\n    const auth = useAuth();\r\n\r\n    const [, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingOffre, setUpdatingOffre] = useState(true);\r\n    const lastLocation = useLastLocation();\r\n\r\n    const [values, setValues] = useState<State>({\r\n        Titre: \"\",\r\n        SecteursActivite: undefined,\r\n        Ville: \"\",\r\n        Region: undefined,\r\n        DateDebut:null,\r\n        DateFin: null,\r\n        Auteur: auth?.user?.NiveauAcces===AccessLevel.entreprise ? auth?.user._id: undefined,\r\n        DureeStage: \"\",\r\n        Description: \"\",\r\n        NombreHeuresSemaine: 0,\r\n        CompetencesRecherches:\"\",\r\n        EmploiApresStage: false,\r\n        InformationsSuplementaires: \"\",\r\n        Remuneration: \"\",\r\n        DateParution: new Date(), \r\n        DureeSemaines: 0,\r\n        Vedette:false\r\n      });\r\n\r\n   \r\n    \r\n\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        \r\n    };\r\n    \r\n    const handleChangeCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n\r\n    const handleCreation= async (e:any)=>{\r\n        e.preventDefault();\r\n        console.log('created');\r\n        let dif;\r\n        if(values.DateFin!==null &&values.DateDebut!==null){\r\n        dif= differenceInWeeks(values?.DateFin,values?.DateDebut);\r\n        setValues({ ...values, DureeSemaines: dif,\r\n            DureeStage: dif?.toString()+\" semaines\" \r\n        });\r\n        }\r\n\r\n        //console.log(dif);\r\n\r\n        let nouvelleOffre: OffresDemandesType={\r\n            _id:'',\r\n            Titre: values.Titre,\r\n            Type: 'offre',\r\n            SecteurActivite: values.SecteursActivite || \"\",\r\n            Ville: values.Ville,\r\n            Region: values.Region ||\"\",\r\n            DateDebut: values.DateDebut || new Date(),\r\n            DateFin: values.DateFin|| new Date(),\r\n            DureeStage: dif?.toString()+\" semaines\",\r\n            Description: values.Description,\r\n            NombreHeuresSemaine: Number(values.NombreHeuresSemaine),\r\n            CompetencesRecherches: values.CompetencesRecherches,\r\n            EmploiApresStage: values.EmploiApresStage,\r\n            InformationsSuplementaires: values.InformationsSuplementaires,\r\n            ProgrammesSuivi: \"\",\r\n            AutresFormations: \"\",\r\n            CompetencesAcquises: \"\",\r\n            DescriptionPosteRecherche: \"\",\r\n            Remuneration: values.Remuneration,\r\n            DateParution: values.DateParution,\r\n            AutresInformations: \"\",\r\n            Actif: true,\r\n            Supprime: false,\r\n            Valide: auth?.user?.NiveauAcces===AccessLevel.admin? true: false,\r\n            Communications:[{\r\n                Date: new Date(),\r\n                EnvoyeParID: \"\",\r\n                Message: \"\",\r\n                NbMessages: 1\r\n            }],\r\n            Auteur:  values.Auteur || '',\r\n            TypeStage: '',\r\n            DureeSemaines: dif||0,\r\n            Vedette: values.Vedette\r\n        }\r\n        //console.log(nouvelleOffre)\r\n \r\n        offreAdded(nouvelleOffre);\r\n       \r\n    }\r\n\r\n    async function offreAdded(newOffre: OffresDemandesType) {\r\n        try {\r\n            const update=await addOffreDemande(newOffre);\r\n            setUpdatingOffre(true);\r\n            setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingOffre(false);\r\n            history.push(lastLocation?.pathname||'/dashboard/')\r\n        }\r\n      }\r\n\r\n    return(\r\n    <form onSubmit={(e)=>handleCreation(e)}>\r\n        <Grid container spacing={3} alignItems='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h4'>Créer une offre de stage</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Titre\"\r\n                        label=\"Titre\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('Titre')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item>\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectEntreprise onChange={(selected)=>setValues({ ...values, Auteur: selected?._id })}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n            <Grid item >\r\n                <Grid container alignItems='flex-end' spacing={2}>\r\n                    <Grid item>\r\n                        <SelectSecteur onChange={(selected)=>setValues({ ...values, SecteursActivite: selected?._id })}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={10}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Ville\"\r\n                        label=\"Ville\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('Ville')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item>\r\n                <SelectRegion onChange={(selected)=>setValues({ ...values, Region: selected?._id })}/>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de début\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={values.DateDebut}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>setValues({ ...values, DateDebut: selected })}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        label=\"Date de fin\"\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={values.DateFin}\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        onChange={(selected)=>setValues({ ...values, DateFin: selected })}\r\n                        margin='dense'\r\n\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"input-duree\"\r\n                    placeholder=\"Durée en semaines\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    value={(values.DateDebut && values.DateFin) ? \r\n                        differenceInWeeks(values.DateFin,values.DateDebut).toString() + \" semaines\" : \"0 semaines\"}\r\n                    margin='dense'\r\n\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={5}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-heures\"\r\n                        label=\"Nombre d'heures par semaine\"\r\n                        type='number'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('NombreHeuresSemaine')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={5}> \r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}><b>Possibilité d'emploi aprés le stage?</b> </Grid>\r\n                    <Grid item> Non</Grid>\r\n                    <Grid item>\r\n                        <Switch\r\n                                    checked={values.EmploiApresStage}\r\n                                    onChange={handleChangeCheck}\r\n                                    name=\"EmploiApresStage\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                        </Grid>\r\n                    <Grid item>Oui</Grid>\r\n                </Grid>    \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Description\"\r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue=\"\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange('Description')}\r\n                    required\r\n                />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-Competences\"\r\n                        label=\"Competences recherches\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('CompetencesRecherches')}\r\n                        margin='dense'\r\n\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Informations suplementaires\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange('InformationsSuplementaires')}\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"input-infos\"\r\n                        label=\"Rémunération\"\r\n                        type='text'\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        onChange={handleChange('Remuneration')}\r\n                    />\r\n            </Grid>\r\n            { auth?.user?.NiveauAcces===AccessLevel.admin&&\r\n            <Grid item > \r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}><b>Offre de stage vedette?</b> </Grid>\r\n                    <Grid item> Non</Grid>\r\n                    <Grid item>\r\n                        <Switch\r\n                                    checked={values.Vedette}\r\n                                    onChange={handleChangeCheck}\r\n                                    name=\"Vedette\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                        </Grid>\r\n                    <Grid item>Oui</Grid>\r\n                </Grid>    \r\n            </Grid>\r\n            }\r\n            <Grid item xs={12}>\r\n                <Grid container justify='flex-start'>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type='submit'\r\n                        >\r\n                            <Typography variant=\"subtitle1\">Creér l'offre</Typography>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid> \r\n            </Grid>\r\n        </Grid>                  \r\n    </form>\r\n    )\r\n}\r\n\r\nexport default DashboardNouvelleOffre;\r\n","import { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Checkbox, FormControlLabel, Grid, InputAdornment, TextField, Typography } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { fetchOffresDemandes } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { OffresDemandesType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport DashboardCardOffre from './DashboardCardOffre';\r\n\r\ntype Props = {\r\n};\r\n\r\n\r\n//Liste des offres de stage dans le dashboard\r\nconst DashboardOffres: React.FC<Props> =()=>{\r\n    const auth = useAuth();\r\n\r\n    const [offres, setOffres] = useState<OffresDemandesType[]>([]);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n    const [vedette, setVedette]= useState<boolean>(false);\r\n\r\n    useEffect(()=>{\r\n        getOffres(false);\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getOffres = async (vedette: boolean) => {\r\n        let offres : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        offres = offres.filter(offre=> offre.Supprime===false && offre.Type==='offre');\r\n\r\n        //si entreprise tu vois tes offres seulement\r\n        if(auth?.user?.NiveauAcces===AccessLevel.entreprise){\r\n            offres= offres.filter(offre=> offre.Auteur===auth?.user?._id)\r\n        }\r\n\r\n        if(vedette){\r\n            offres=offres.filter(offre=>offre.Vedette===true)\r\n        }\r\n        //si stagiaire tu vois toutes les offres validées\r\n        /* if(auth?.user?.NiveauAcces===AccessLevel.entreprise){\r\n            offres= offres.filter(offre=> offre.Valide===true)\r\n        }  */\r\n        //console.log(offres);\r\n        setOffres(offres);  \r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setVedette(!vedette);\r\n        getOffres(!vedette);\r\n      };\r\n   \r\n\r\n    return(\r\n        <>\r\n            <Grid container spacing={3} alignItems='center' justify='center' >\r\n                <Grid item>\r\n                        <TextField\r\n                            label=\"Rechercher\"\r\n                            onChange={(e)=>setRecherche(e.target.value)}\r\n                            InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                        <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n                {auth?.user?.NiveauAcces===AccessLevel.admin &&\r\n                <Grid item>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={vedette} onChange={(e)=>handleChange(e)} name=\"Vedette\" />}\r\n                        label=\"Vedette\"\r\n                    />\r\n                </Grid>\r\n                }\r\n             </Grid> \r\n         <Grid container alignItems='center' spacing={3} > \r\n            <Grid item xs={12}>    \r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <Typography variant={'h4'}>{auth?.user?.NiveauAcces===AccessLevel.entreprise? 'Mes offres de stage'\r\n                        :'Offres de stage'}</Typography>\r\n                    </Grid>\r\n                    <Grid item style={{position: 'relative'}}>\r\n                        <FontAwesomeIcon icon={faLevelDownAlt}  size='lg'  style={{position: 'absolute', top: '30px'}} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                {offres ? \r\n                    offres.map(offre =>(\r\n                        offre.Titre.toLowerCase().includes(recherche.toLowerCase())&&\r\n                        <DashboardCardOffre key={offre._id} offre={offre} updateOffre={()=>getOffres(vedette)}/>\r\n                        )):null\r\n                    }\r\n            </Grid>\r\n        </Grid>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardOffres;\r\n\r\n\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { addRegion, fetchRegions, updateRegion } from '../../Api';\r\nimport { RegionsType } from '../../Types';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\n//Liste des regions et respective crud dans le dashboard\r\n\r\nconst DashboardSecteurs: React.FC<Props> =()=>{\r\n    const [regions, setRegions] = useState<RegionsType[]>([]);\r\n    const [edit, setEdit] = useState<RegionsType | undefined >(undefined);\r\n    const [oldValue, setOldValue] = useState<string >('');\r\n    const [update, setUpdate]= useState<String>('');\r\n    const [updatingRegion, setUpdatingRegion] = useState(true);\r\n    const [addingRegion, setAddingRegion] = useState(true);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n    const [error, setError]= useState<boolean | undefined>(false);\r\n    const [add, setAdd]= useState<RegionsType | undefined>(undefined);\r\n    const [newRegion, setNewRegion]= useState<RegionsType>({\r\n        Actif: true,\r\n        Supprime: false,\r\n        Name:'',\r\n        _id:''\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getRegions();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    const getRegions = async () => {\r\n        let regions : RegionsType[] | undefined = await fetchRegions();\r\n        regions = regions.filter(region=> region.Supprime===false);\r\n        regions.sort((a, b) => (a.Name > b.Name) ? 1 : -1);\r\n\r\n        setRegions(regions);  \r\n    }\r\n\r\n    \r\n    async function regionUpdated(secteur: RegionsType) {\r\n    try {\r\n        setUpdatingRegion(true);\r\n        const update=await updateRegion(secteur);\r\n        setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setUpdatingRegion(false);\r\n        getRegions();\r\n    }\r\n  }\r\n\r\n  const handleEditChange=(edit: RegionsType| undefined, region: RegionsType| undefined)=>{\r\n    let regionOldValue: RegionsType| undefined = undefined;\r\n    if(edit!==undefined)\r\n    regionOldValue =regions.find(region=> region._id===edit._id);\r\n    if(regionOldValue){\r\n        regionOldValue.Name=oldValue;\r\n    }\r\n    if(region){\r\n        setEdit(region);\r\n    }\r\n  }\r\n\r\n  const handleAddRegion =(region: RegionsType)=>{\r\n    setAdd(undefined);\r\n    regionAdded(region);\r\n\r\n  }\r\n\r\n  async function regionAdded(region: RegionsType) {\r\n    try {\r\n        setAddingRegion(true);\r\n        const update=await addRegion(region);\r\n        setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setAddingRegion(false);\r\n        getRegions();\r\n    }\r\n  }\r\n\r\n    return(\r\n        <FormGroup >\r\n        <Grid container justify='center' style={{marginBottom: '100px'}}>\r\n            <Grid item style={{padding: '20px', backgroundColor: 'whitesmoke'}}>\r\n            <Grid container direction='column' spacing={3} alignItems='center' >\r\n                <Grid item>\r\n                        <TextField\r\n                            label=\"Rechercher\"\r\n                            onChange={(e)=>setRecherche(e.target.value)}\r\n                            InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container >\r\n                        <Grid item>\r\n                            {regions.length>0 ?\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align='left'><Typography variant='h6' style={{fontWeight:'bold'}}>Region</Typography></TableCell>\r\n                                        <TableCell align='center'><Typography variant='h6' style={{fontWeight:'bold'}}>Actions</Typography></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={add?1:2}>\r\n                                            { !add ?\r\n                                            <Button \r\n                                                variant=\"outlined\" \r\n                                                color=\"primary\"  \r\n                                                startIcon={<AddIcon />}\r\n                                                onClick={\r\n                                                   ()=> setAdd(newRegion)\r\n                                                }\r\n                                            >\r\n                                                Ajouter region\r\n                                            </Button> :\r\n                                            <TextField  \r\n                                                onChange={(e)=>{\r\n                                                    add.Name=e.target.value;\r\n                                                }}\r\n                                                id=\"standard-basic\" \r\n                                                label=\"Region\" \r\n                                                fullWidth\r\n                                                name={'Name'}\r\n                                                required\r\n                                                autoFocus\r\n                                                error={error}\r\n                                            />\r\n                                            }\r\n                                        </TableCell>\r\n                                        { add ?\r\n                                        <TableCell>\r\n                                            <Tooltip title='sauvegarder'>\r\n                                                <IconButton size=\"small\" type='submit' onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    add && add.Name !== '' ? handleAddRegion(add): console.log('not updated');\r\n                                                    add && add.Name !== '' ? setError(false) : setError(true);\r\n                                                    }}\r\n                                                >\r\n                                                    <SaveIcon style={{color:'seagreen'}}/>\r\n                                                </IconButton>\r\n                                            </Tooltip> \r\n                                            <Tooltip title='Annuler'>\r\n                                                <IconButton size=\"small\" \r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        setAdd(undefined);\r\n                                                    }}\r\n                                                >\r\n                                                    <CancelIcon style={{color: 'crimson'}}/>\r\n                                                </IconButton> \r\n                                            </Tooltip> \r\n                                        </TableCell> : null\r\n                                    }      \r\n                                    </TableRow>\r\n                                    { regions.map(region => (\r\n                                        region.Name.toLowerCase().includes(recherche.toLowerCase()) &&\r\n                                    <TableRow key={region._id} hover \r\n                                            style={{backgroundColor: edit===region? 'PowderBlue': 'inherit'}}>\r\n                                        <TableCell align='left'  >\r\n                                            {\r\n                                            edit===region?  \r\n                                            <TextField  \r\n                                                onChange={(e)=>{\r\n                                                    region.Name=e.target.value;\r\n                                                }}\r\n                                                id=\"standard-basic\" \r\n                                                defaultValue={region.Name} \r\n                                                label=\"Secteur\" \r\n                                                fullWidth\r\n                                                name={'Name'}\r\n                                                required\r\n                                                autoFocus\r\n                                                error={error}\r\n                                            />\r\n                                            :\r\n                                            region.Name\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell align='center'>\r\n                                            {edit===region? \r\n                                            <> \r\n                                                <Tooltip title='sauvegarder'>\r\n                                                    <IconButton size=\"small\" type='submit' onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        console.log(region.Name);\r\n                                                        region.Name !== '' ? updateRegion(region): console.log('not updated');\r\n                                                        region.Name !== '' ? setEdit(undefined) : setError(true);\r\n                                                        }}\r\n                                                    >\r\n                                                        <SaveIcon style={{color:'seagreen'}}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                                <Tooltip title='Annuler'>\r\n                                                    <IconButton size=\"small\" \r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            setEdit(undefined);\r\n                                                            region.Name=oldValue;\r\n                                                        }}\r\n                                                    >\r\n                                                        <CancelIcon style={{color: 'crimson'}}/>\r\n                                                    </IconButton> \r\n                                                </Tooltip> \r\n                                            </> : \r\n                                            <>\r\n                                                <Tooltip title='éditer'>\r\n                                                    <IconButton size=\"small\" \r\n                                                        onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                edit===region? setEdit(undefined) : \r\n                                                                handleEditChange(edit,region);\r\n                                                                setOldValue(region.Name);\r\n                                                            }}\r\n                                                    >\r\n                                                        <EditIcon style={{color:'#3e99df'}}/>\r\n                                                    </IconButton> \r\n                                                </Tooltip>\r\n                                                <Tooltip title='supprimer'>\r\n                                                    <IconButton size=\"small\" onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            region.Supprime=true;\r\n                                                            console.log(region.Supprime);\r\n                                                            regionUpdated(region);\r\n                                                        }}>\r\n                                                        <DeleteIcon style={{color: 'crimson'}}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </>\r\n                                            } \r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            :null\r\n                            }  \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        </FormGroup >\r\n    )\r\n}\r\n\r\nexport default DashboardSecteurs;","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { addSecteurActivite, fetchSecteursActivite, updateSecteurActivite } from '../../Api';\r\nimport { SecteursActiviteType } from '../../Types';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\n//Liste des secteurs et respective crud dans le dashboard\r\nconst DashboardSecteurs: React.FC<Props> =()=>{\r\n    const [secteursActivites, setSecteursActivites] = useState<SecteursActiviteType[]>([]);\r\n    const [edit, setEdit] = useState<SecteursActiviteType | undefined >(undefined);\r\n    const [oldValue, setOldValue] = useState<string >('');\r\n    const [update, setUpdate]= useState<String>('');\r\n    const [updatingSecteur, setUpdatingSecteur] = useState(true);\r\n    const [addingSecteur, setAddingSecteur] = useState(true);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n    const [error, setError]= useState<boolean | undefined>(false);\r\n    const [add, setAdd]= useState<SecteursActiviteType | undefined>(undefined);\r\n    const [newSecteur, setNewSecteur]= useState<SecteursActiviteType>({\r\n        Actif: true,\r\n        Supprime: false,\r\n        Titre:'',\r\n        _id:''\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getSecteursActivites();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n     \r\n      },[])\r\n\r\n    const getSecteursActivites = async () => {\r\n        let secteursActivites : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n        secteursActivites = secteursActivites.filter(secteur=> secteur.Supprime===false);\r\n        secteursActivites.sort((a, b) => (a.Titre > b.Titre) ? 1 : -1);\r\n\r\n        setSecteursActivites(secteursActivites);\r\n    }\r\n\r\n    \r\n    async function secteurUpdated(secteur: SecteursActiviteType) {\r\n    try {\r\n        setUpdatingSecteur(true);\r\n        const update=await updateSecteurActivite(secteur);\r\n        setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setUpdatingSecteur(false);\r\n        getSecteursActivites();\r\n    }\r\n  }\r\n\r\n  const handleEditChange=(edit: SecteursActiviteType| undefined, secteur: SecteursActiviteType| undefined)=>{\r\n    let secteurOldValue: SecteursActiviteType| undefined = undefined;\r\n    if(edit!==undefined)\r\n    secteurOldValue =secteursActivites.find(secteur=> secteur._id===edit._id);\r\n    if(secteurOldValue){\r\n        secteurOldValue.Titre=oldValue;\r\n    }\r\n    if(secteur){\r\n        setEdit(secteur);\r\n    }\r\n  }\r\n\r\n  const handleAddSecteurActivite =(secteur: SecteursActiviteType)=>{\r\n    setAdd(undefined);\r\n    secteurAdded(secteur);\r\n\r\n  }\r\n\r\n  async function secteurAdded(secteur: SecteursActiviteType) {\r\n    try {\r\n        setAddingSecteur(true);\r\n        const update=await addSecteurActivite(secteur);\r\n        setUpdate(update);\r\n    } catch (e) {\r\n    } finally {\r\n        setAddingSecteur(false);\r\n        getSecteursActivites();\r\n    }\r\n  }\r\n\r\n    return(\r\n        <FormGroup >\r\n        <Grid container justify='center' style={{marginBottom: '100px'}}>\r\n            <Grid item style={{padding: '20px', backgroundColor: 'whitesmoke'}}>\r\n            <Grid container direction='column' spacing={3} alignItems='center' >\r\n                <Grid item>\r\n                        <TextField\r\n                            label=\"Rechercher\"\r\n                            onChange={(e)=>setRecherche(e.target.value)}\r\n                            InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                        <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container >\r\n                        <Grid item>\r\n                            {secteursActivites.length>0 ?\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align='left'><Typography variant='h6' style={{fontWeight:'bold'}}>Secteur d'activité</Typography></TableCell>\r\n                                        <TableCell align='center'><Typography variant='h6' style={{fontWeight:'bold'}}>Actions</Typography></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={add?1:2}>\r\n                                            { !add ?\r\n                                            <Button \r\n                                                variant=\"outlined\" \r\n                                                color=\"primary\"  \r\n                                                startIcon={<AddIcon />}\r\n                                                onClick={\r\n                                                   ()=> setAdd(newSecteur)\r\n                                                }\r\n                                            >\r\n                                                Ajouter secteur d'activité\r\n                                            </Button> :\r\n                                            <TextField  \r\n                                                onChange={(e)=>{\r\n                                                    add.Titre=e.target.value;\r\n                                                }}\r\n                                                id=\"standard-basic\" \r\n                                                label=\"Secteur\" \r\n                                                fullWidth\r\n                                                name={'Titre'}\r\n                                                required\r\n                                                autoFocus\r\n                                                error={error}\r\n                                            />\r\n                                            }\r\n                                        </TableCell>\r\n                                        { add ?\r\n                                        <TableCell>\r\n                                            <Tooltip title='sauvegarder'>\r\n                                                <IconButton size=\"small\" type='submit' onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    add && add.Titre !== '' ? handleAddSecteurActivite(add): console.log('not updated');\r\n                                                    add && add.Titre !== '' ? setError(false) : setError(true);\r\n                                                    }}\r\n                                                >\r\n                                                    <SaveIcon style={{color:'seagreen'}}/>\r\n                                                </IconButton>\r\n                                            </Tooltip> \r\n                                            <Tooltip title='Annuler'>\r\n                                                <IconButton size=\"small\" \r\n                                                    onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        setAdd(undefined);\r\n                                                    }}\r\n                                                >\r\n                                                    <CancelIcon style={{color: 'crimson'}}/>\r\n                                                </IconButton> \r\n                                            </Tooltip> \r\n                                        </TableCell> : null\r\n                                    }      \r\n                                    </TableRow>\r\n                                    { secteursActivites.map(secteur => (\r\n                                        secteur.Titre.toLowerCase().includes(recherche.toLowerCase()) &&\r\n                                    <TableRow key={secteur._id} hover \r\n                                            style={{backgroundColor: edit===secteur? 'PowderBlue': 'inherit'}}>\r\n                                        <TableCell align='left'  >\r\n                                            {\r\n                                            edit===secteur?  \r\n                                            <TextField  \r\n                                                onChange={(e)=>{\r\n                                                    secteur.Titre=e.target.value;\r\n                                                }}\r\n                                                id=\"standard-basic\" \r\n                                                defaultValue={secteur.Titre} \r\n                                                label=\"Secteur\" \r\n                                                fullWidth\r\n                                                name={'Titre'}\r\n                                                required\r\n                                                autoFocus\r\n                                                error={error}\r\n                                            />\r\n                                            :\r\n                                            secteur.Titre\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell align='center'>\r\n                                            {edit===secteur? \r\n                                            <> \r\n                                                <Tooltip title='sauvegarder'>\r\n                                                    <IconButton size=\"small\" type='submit' onClick={(e) => {\r\n                                                        e.stopPropagation();\r\n                                                        console.log(secteur.Titre);\r\n                                                        secteur.Titre !== '' ? updateSecteurActivite(secteur): console.log('not updated');\r\n                                                        secteur.Titre !== '' ? setEdit(undefined) : setError(true);\r\n                                                        }}\r\n                                                    >\r\n                                                        <SaveIcon style={{color:'seagreen'}}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                                <Tooltip title='Annuler'>\r\n                                                    <IconButton size=\"small\" \r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            setEdit(undefined);\r\n                                                            secteur.Titre=oldValue;\r\n                                                        }}\r\n                                                    >\r\n                                                        <CancelIcon style={{color: 'crimson'}}/>\r\n                                                    </IconButton> \r\n                                                </Tooltip> \r\n                                            </> : \r\n                                            <>\r\n                                                <Tooltip title='éditer'>\r\n                                                    <IconButton size=\"small\" \r\n                                                        onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                edit===secteur? setEdit(undefined) : \r\n                                                                handleEditChange(edit,secteur);\r\n                                                                setOldValue(secteur.Titre);\r\n                                                            }}\r\n                                                    >\r\n                                                        <EditIcon style={{color:'#3e99df'}}/>\r\n                                                    </IconButton> \r\n                                                </Tooltip>\r\n                                                <Tooltip title='supprimer'>\r\n                                                    <IconButton size=\"small\" onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            secteur.Supprime=true;\r\n                                                            console.log(secteur.Supprime);\r\n                                                            secteurUpdated(secteur);\r\n                                                        }}>\r\n                                                        <DeleteIcon style={{color: 'crimson'}}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </>\r\n                                            } \r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            :null\r\n                            }  \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        </FormGroup >\r\n    )\r\n}\r\n\r\nexport default DashboardSecteurs;","import { faEdit, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, CardActions, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n    user: UtilisateursType;\r\n    usersType: string\r\n    supprimer :()=>void\r\n};\r\n\r\n//card pour les utilisateursa\r\nconst DashBoardUsersCard: React.FC<Props> =({user, supprimer,usersType})=>{\r\n    const history= useHistory();\r\n    const auth = useAuth();\r\n\r\n    const handleEdit = (user: UtilisateursType) =>{\r\n\r\n        history.push({\r\n            pathname: '/dashboard/edit/user/'+user._id,\r\n            state: {data: user}\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n          <Card variant=\"outlined\" className='card'  \r\n          onClick={()=>{history.push({\r\n              pathname:'/dashboard/ficheUser/'+user._id,\r\n              state: {data: user}\r\n                })}}   \r\n                style={{display: 'flex',justifyContent: 'space-between', flexDirection: 'column', height: '100%', width:'100%'}}   \r\n          >\r\n                <CardContent>\r\n                    <Typography variant='h5'>\r\n                        {usersType !== 'entreprises' ? user.Prenom+' '+user.Nom:\r\n                        user.NomEntreprise\r\n                        }\r\n                    </Typography>\r\n                    <Typography variant='subtitle1'  className='dashboardColor'>\r\n                        {user.Ecole}\r\n                    </Typography>\r\n                    <Typography variant='subtitle2'  className='dashboardColor'>\r\n                        {user.Ville}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify='center' spacing={2}>\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" size=\"small\" \r\n                            onClick={(event)=>{\r\n                                event.stopPropagation();\r\n                                event.preventDefault();\r\n                                handleEdit(user);\r\n                            }}\r\n                            startIcon={  <FontAwesomeIcon icon={faEdit} color=\"green\"/>}\r\n                            >\r\n                                Modifier\r\n                            </Button>\r\n                        </Grid>\r\n                        { auth?.user?._id!==user._id &&\r\n                        <Grid item>\r\n                            <Button \r\n                                onClick={(event)=>{\r\n                                        event.stopPropagation();\r\n                                        event.preventDefault();\r\n                                        supprimer();\r\n                                }}\r\n                                variant=\"outlined\" \r\n                                size=\"small\"  \r\n                                startIcon={<FontAwesomeIcon icon={faTimes} color=\"red\"/>}\r\n                            >\r\n                                Supprimer\r\n                            </Button>\r\n                        </Grid>\r\n                        }\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card> \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashBoardUsersCard;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n\r\nheight: 100%;\r\n.card{\r\n    text-align:center;\r\n \r\n}\r\n\r\n.card:hover{\r\n    background-color: #E8E8E8;\r\n    cursor: pointer;\r\n}\r\n\r\n`","import '../../App.sass';\r\n\r\nimport { Grid, InputAdornment, TextField } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateurs, updateUtilisateur } from '../../Api';\r\nimport { UtilisateursType } from '../../Types';\r\nimport DashBoardUsersCard from './DashBoardUsersCard';\r\n\r\ntype Props = {\r\n    usersType: string\r\n};\r\n\r\n//liste des utilisateurs\r\nconst DashboardCandidats: React.FC<Props> =({usersType})=>{\r\n\r\n    const [utilisateurs, setUtilisateurs] = useState<UtilisateursType[]>([]);\r\n    const [recherche, setRecherche]= useState<String>('');\r\n\r\n    useEffect(()=>{\r\n        getUtilisateurs();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    \r\n\r\n    const getUtilisateurs = async () => {\r\n        let users : UtilisateursType[] | undefined = await fetchUtilisateurs();\r\n        users =users.filter(user=> \r\n            user.NiveauAcces=== (usersType === 'candidats' ? 111: usersType === 'entreprises' ? 333 : 999 ) && user.Supprime=== false);\r\n        //console.log(usersType);\r\n        setUtilisateurs(users);\r\n    }\r\n    \r\n    const handleSupprimer = (user: UtilisateursType) => {\r\n        let users= utilisateurs;\r\n        user.Supprime=true;\r\n        users=users.filter(user=> user.Supprime=== false);\r\n        setUtilisateurs(users);\r\n        //console.log(utilisateurs);\r\n        updateUtilisateur(user);\r\n    }\r\n\r\n    const getFullName = (user: UtilisateursType) => {\r\n        return (user.Prenom+\" \"+user.Nom).toLowerCase();\r\n    }\r\n    \r\n    return(\r\n        <Wrapper>     \r\n            <Grid container direction='column' spacing={3} alignItems='center' >\r\n                <Grid item>\r\n                        <TextField\r\n                            data-testid=\"rechercheUsers\"\r\n                            placeholder=\"Rechercher\"\r\n                            onChange={(e)=>setRecherche(e.target.value)}\r\n                            InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                        <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        />\r\n                </Grid>\r\n             </Grid> \r\n            <Grid container spacing={2} className='dashboardContent' >\r\n            {utilisateurs.length > 0 ?\r\n                utilisateurs.map((user,index)=>( \r\n                    user.Supprime === false && \r\n                    (user?.NomEntreprise?.toLowerCase().includes(recherche?.toLowerCase()) || getFullName(user).includes(recherche?.toLowerCase())  )                \r\n                    ?\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={user._id} >\r\n                        <DashBoardUsersCard user={user} usersType={usersType} supprimer={()=>handleSupprimer(user)} />\r\n                    </Grid> \r\n                :null\r\n                ))\r\n                : \r\n                null\r\n                }\r\n            </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DashboardCandidats;\r\n\r\nexport const Wrapper = styled.div`\r\n \r\n\r\n    \r\n`","import { useHistory } from 'react-router';\r\nimport { LastLocationProvider } from 'react-router-last-location';\r\n\r\nimport ProtectedDashboardRoutes from '../auth/ProtectedDashboardRoutes';\r\nimport DashboardAccueil from './DashboardAccueil';\r\nimport DashboardDemandes from './DashboardDemandes';\r\nimport DashboardEditDemande from './DashboardEditDemande';\r\nimport DashboardEditOffre from './DashboardEditOffre';\r\nimport DashboardProfil from './DashboardEditProfil';\r\nimport DashboardEditUsers from './DashboardEditUsers';\r\nimport DashboardFicheUser from './DashboardFicheUser';\r\nimport DashboardNouveauUser from './DashboardNouveauUser';\r\nimport DashboardNouvelleDemande from './DashboardNouvelleDemande';\r\nimport DashboardNouvelleOffre from './DashboardNouvelleOffre';\r\nimport DashboardOffres from './DashBoardOffres';\r\nimport DashboardRegions from './DashboardRegions';\r\nimport DashboardSecteurs from './DashboardSecteurs';\r\nimport DashBoardUsers from './DashBoardUsers';\r\n\r\n\r\ntype Props = {\r\n};\r\n\r\n//Routage du contenu dans le dashboard\r\nconst DashboardContent: React.FC<Props> =()=>{\r\n    const history = useHistory();\r\n    //const auth = useAuth();\r\n    return(\r\n        <div  style={{backgroundColor: '#F8F8F8', padding: '20px'}}>  \r\n            <LastLocationProvider>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/accueil\"><DashboardAccueil/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/offres\"><DashboardOffres/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/demandes\"><DashboardDemandes/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/candidats\"><DashBoardUsers usersType='candidats'/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/entreprises\"><DashBoardUsers usersType='entreprises'/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/admins\"><DashBoardUsers usersType='admins'/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/profil\" ><DashboardProfil history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/secteurs\"><DashboardSecteurs/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/regions\"><DashboardRegions/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/newUser\"><DashboardNouveauUser/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/newOffre\"><DashboardNouvelleOffre/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/newDemande\"><DashboardNouvelleDemande/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/edit/user/:id\"><DashboardEditUsers history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/edit/offre/:id\"><DashboardEditOffre history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/edit/demande/:id\"><DashboardEditDemande history={history}/></ProtectedDashboardRoutes>\r\n                <ProtectedDashboardRoutes path=\"/dashboard/ficheUser/:id\"><DashboardFicheUser  history={history}/></ProtectedDashboardRoutes>\r\n            </LastLocationProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardContent;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { faAngleDown, faBell, faPlus, faSignOutAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    Avatar,\r\n    Badge,\r\n    Box,\r\n    Button,\r\n    Grid,\r\n    IconButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Cookies from 'js-cookie';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { fetchUtilisateur } from '../../Api';\r\nimport { AccessLevel } from '../../Enum';\r\nimport { UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\n\r\ntype Props = {\r\n    logout: () => void;\r\n    profil: () => void;\r\n};\r\n\r\nconst DashboardHeader: React.FC<Props> =({logout,profil})=>{\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const auth = useAuth();\r\n    const history= useHistory();\r\n\r\n\r\n    const [user, setUser] =  useState<UtilisateursType|null|undefined>(auth?.user);\r\n    const theme = useTheme();\r\n\r\n    //mediaQueries\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('xs'));\r\n    const matchesSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    //console.log(matchesSM);\r\n\r\n\r\n    useEffect(()=>{\r\n      getUser();\r\n      },[])\r\n\r\n    //cherche l'user connecté dans la DB/api\r\n    const getUser= async()=>{\r\n        const token = Cookies.get('connected');\r\n        //console.log(token);\r\n        \r\n        let user:UtilisateursType | undefined;\r\n        if(token)\r\n        user  = await fetchUtilisateur(token);\r\n       // console.log(user);\r\n        setUser(user);\r\n    } \r\n  \r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleProfil = () => {\r\n        handleClose();\r\n        profil();\r\n      };\r\n\r\n    //retourne le nom complet de l'utilisateur\r\n    const getUserName =()=> {\r\n        return user?.Prenom+ ' ' + user?.Nom;\r\n    }\r\n\r\n    //returne le niveau d'accès ou type d'utilisateur\r\n    const getAccessLevel =()=> {\r\n        const userAccessLevel = user?.NiveauAcces;\r\n        if(userAccessLevel === AccessLevel.admin)\r\n            return 'Admin';\r\n        else if (userAccessLevel === AccessLevel.entreprise)\r\n            return 'Entreprise';\r\n            else if (userAccessLevel === AccessLevel.stagiaire)\r\n            return 'Étudiant';\r\n     }\r\n\r\n     //retoure les initiales du prenon/nom\r\n     const getInitials =()=> {\r\n        const initialePrenom = user?.Prenom !== undefined ? user?.Prenom.charAt(0) : \"\";\r\n        const initialeNom = user?.Nom !== undefined ? user?.Nom.charAt(0) : \"\";\r\n\r\n        return initialePrenom + initialeNom;\r\n    }\r\n\r\n    return(\r\n        <Grid container alignItems='center'>\r\n            <Grid item xs={12} sm={12} md={6}>\r\n                { (history.location.pathname==='/dashboard/admins' \r\n                || history.location.pathname==='/dashboard/entreprises'\r\n                || history.location.pathname==='/dashboard/candidats') &&  auth?.user?.NiveauAcces === AccessLevel.admin?\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Button variant=\"outlined\" startIcon={<FontAwesomeIcon icon={faPlus}  size={matchesSM ? \"sm\": 'lg'}/>}\r\n                        style={{textTransform: 'none'}}\r\n                        onClick={()=>history.push('/dashboard/newUser')}\r\n                        >\r\n                            Nouveau utilisateur\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                :<Grid container spacing={2} justify={matchesSM? 'center':'flex-end'}>\r\n                    {(auth?.user?.NiveauAcces === AccessLevel.entreprise || auth?.user?.NiveauAcces === AccessLevel.admin) &&\r\n                    <Grid item>\r\n                        <Button variant=\"outlined\" startIcon={<FontAwesomeIcon icon={faPlus}  size={matchesSM ? \"sm\": 'lg'}/>}\r\n                        style={{textTransform: 'none'}}\r\n                        onClick={()=>history.push('/dashboard/newOffre')}\r\n                        >\r\n                            Offre de stage\r\n                        </Button>\r\n                    </Grid>\r\n                    }\r\n                    {(auth?.user?.NiveauAcces === AccessLevel.stagiaire || auth?.user?.NiveauAcces === AccessLevel.admin) &&\r\n                    <Grid item>\r\n                        <Button variant=\"outlined\" startIcon={<FontAwesomeIcon icon={faPlus}  size=\"lg\"/>}\r\n                        style={{textTransform: 'none'}}\r\n                        onClick={()=>history.push('/dashboard/newDemande')}\r\n                        >\r\n                            Demande de stage\r\n                        </Button>\r\n                    </Grid>\r\n                    }\r\n                </Grid>\r\n                }\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <Grid container justify={matchesXS? 'center':'flex-end'}>\r\n                    <Box>\r\n                        <Grid container spacing={1} alignItems='center'>\r\n                            <Grid item>\r\n                                <Grid container direction='column' alignItems='flex-end'>\r\n                                    <Typography variant=\"caption\" style={{textTransform: 'none', fontWeight: 'bold'}}>{getUserName()}</Typography> \r\n                                    <Typography variant=\"caption\" style={{textTransform: 'none', color: 'darkgray'}}>{getAccessLevel()}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Avatar>{getInitials()}</Avatar>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <IconButton onClick={handleClick}>\r\n                                    <FontAwesomeIcon icon={faAngleDown} color=\"darkgray\" />\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={handleProfil}>\r\n                                        <ListItemIcon>\r\n                                            <FontAwesomeIcon icon={faUser} color=\"#3e99df\" />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Profil\" />\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                    </MenuItem>\r\n                                    <MenuItem \r\n                                        onClick={logout}>\r\n                                        <ListItemIcon>\r\n                                            <FontAwesomeIcon icon={faSignOutAlt} color=\"#3e99df\" />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Déconnexion\" /> \r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={2}>\r\n                <Grid container justify={matchesXS?'center':matchesSM? 'flex-start':'flex-end'}>\r\n                    <Grid item>\r\n                        <IconButton>\r\n                            <Badge color=\"primary\" variant=\"dot\" overlap=\"circle\">\r\n                                <FontAwesomeIcon icon={faBell}  color=\"darkgray\"/>\r\n                            </Badge>  \r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton onClick={logout}>\r\n                            <FontAwesomeIcon icon={faSignOutAlt} color=\"darkgray\"/> \r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DashboardHeader;\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n    faArrowAltCircleLeft,\r\n    faArrowAltCircleRight,\r\n    faBriefcase,\r\n    faHome,\r\n    faMapMarkedAlt,\r\n    faSignOutAlt,\r\n    faUserGraduate,\r\n    faUserNinja,\r\n    faUserTie,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Grid, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateur } from '../../Api';\r\nimport { Menu } from '../../Enum';\r\nimport { UtilisateursType } from '../../Types';\r\nimport useAuth from '../auth/useAuth';\r\nimport Footer from '../Footer';\r\nimport DashboardContent from './DashBoardContent';\r\nimport DashboardEditProfil from './DashboardEditProfil';\r\nimport DashboardHeader from './DashBoardHeader';\r\n\r\n//items du menu, routes et permissions\r\nconst menuItems =[\r\n    {\r\n        name: Menu.accueil,\r\n        icon: faHome,\r\n        link: \"/dashboard/accueil\",\r\n        accessLevel: [111,333,999]\r\n    },\r\n    {\r\n        name: Menu.offres,\r\n        icon: faArrowAltCircleRight,\r\n        link: \"/dashboard/offres\",\r\n        accessLevel: [111,333,999]\r\n    },\r\n    {\r\n        name: Menu.demandes,\r\n        icon: faArrowAltCircleLeft,\r\n        link: \"/dashboard/demandes\",\r\n        accessLevel: [111,333,999]\r\n    },\r\n    {\r\n        name: Menu.candidats,\r\n        icon: faUserGraduate,\r\n        link: \"/dashboard/candidats\",\r\n        accessLevel: [999]\r\n    },\r\n    {\r\n        name: Menu.entreprises,\r\n        icon: faUserTie,\r\n        link: \"/dashboard/entreprises\",\r\n        accessLevel: [999]\r\n    },\r\n    {\r\n        name: Menu.admins,\r\n        icon: faUserNinja,\r\n        link: \"/dashboard/admins\",\r\n        accessLevel: [999]\r\n    },\r\n    {\r\n        name: Menu.regions,\r\n        icon: faMapMarkedAlt,\r\n        link: \"/dashboard/regions\",\r\n        accessLevel: [999]\r\n    },\r\n    {\r\n        name: Menu.secteurs,\r\n        icon: faBriefcase,\r\n        link: \"/dashboard/secteurs\",\r\n        accessLevel: [999]\r\n    }\r\n];\r\n\r\ntype Props = {\r\n    logout: () => void;\r\n};\r\n\r\n\r\n\r\nconst Dashboard: React.FC<Props> =({logout})=>{\r\n    const auth = useAuth();\r\n    const history= useHistory();\r\n    const [menuItemSelected, setMenuItemSelected] = useState('accueil');\r\n    const [user, setUser] =  useState<UtilisateursType|null|undefined>(auth?.user);\r\n    //MediaQueries\r\n    const theme = useTheme();\r\n    const matchesMD = useMediaQuery(theme.breakpoints.down('md'));\r\n    const matchesSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('xs'));\r\n    //console.log(matchesXS)\r\n\r\n\r\n    useEffect(()=>{\r\n        let location = history.location.pathname;\r\n        if (location === '/dashboard' || location === '/dashboard/') {\r\n         history.push('/dashboard/accueil');\r\n         location='/dashboard/accueil';\r\n        }\r\n        // eslint-disable-next-line array-callback-return\r\n        menuItems.map(item =>{\r\n            if (location === item.link) {\r\n             setMenuItemSelected(item.name);\r\n             history.push(location);\r\n            }         \r\n        })\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      getUser();\r\n      },[])\r\n\r\n      const getUser= async()=>{\r\n        let id='';\r\n        if(auth?.user!==undefined && auth?.user!==null)\r\n        id = auth?.user._id;\r\n        let user : UtilisateursType | undefined = await fetchUtilisateur(id);\r\n        //console.log(user);\r\n        setUser(user);\r\n    } \r\n\r\n    return(\r\n      \r\n       <Wrapper>\r\n            {user  &&\r\n            <Grid container>\r\n                \r\n                <Grid item xs={2}>\r\n                    <Grid container direction='column' \r\n                    style={{backgroundColor: '#3e99df', \r\n                    color: 'white', minHeight: '100vh', height: '100%', \r\n                    borderBottom:  '7px solid #a0c3da'}}\r\n                    >\r\n                        <Grid item style={{ padding: matchesSM? '0px' :matchesMD? '10px':'30px'}}>\r\n                            <Grid container justify='center' spacing={matchesSM? 0: 2} alignItems='center'>\r\n                                <Grid item>\r\n                                    <GestureIcon style={{color: 'white', fontSize: '3rem'}}/>\r\n                                </Grid>\r\n                                {matchesXS===false&&\r\n                                <Grid item>\r\n                                    <Typography variant={matchesSM? 'h6': matchesMD? 'h4': 'h3'} >eStage</Typography>\r\n                                </Grid>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item style={{ marginBottom: '60px', marginTop: '60px'}}>\r\n                            <List>\r\n                                {menuItems.map((item, index) => (\r\n                                    auth?.user ?\r\n                                    item.accessLevel.includes(auth?.user.NiveauAcces) ?\r\n                                        <ListItem  key={'Menu'+item.name+index} \r\n                                        button \r\n                                        onClick={()=>{\r\n                                            setMenuItemSelected(item.name);\r\n                                            history.push(item.link);\r\n                                        }}\r\n                                        style={{\r\n                                        boxSizing: 'border-box',\r\n                                        borderLeft: matchesSM? '0px': menuItemSelected === item.name ? '7px solid #a0c3da' : 'none', \r\n                                        backgroundColor:  menuItemSelected === item.name ? \"#4589b7\" : 'inherit',\r\n                                        paddingLeft:  matchesSM ?'0px': menuItemSelected !== item.name  ? '14px': '7px'\r\n                                        }}\r\n                                        disableGutters\r\n                                        className={'listItem'}\r\n                                    >\r\n                                        <Grid container alignItems='center' >\r\n                                            <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                                                <Grid container justify='center'  >\r\n                                                    <ListItemIcon style={{justifyContent: matchesMD?'center': 'flex-start'}} > \r\n                                                        <FontAwesomeIcon icon={item.icon}  size=\"lg\" color=\"white\" />\r\n                                                    </ListItemIcon>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            {matchesXS===false&&\r\n                                            <Grid item xs={12} sm={12} md={12} lg={9}>\r\n                                                <Grid container style={{textAlign:matchesMD?'center': 'left'}}>\r\n                                                    <ListItemText disableTypography\r\n                                                    style={{fontSize: matchesSM?'0.9em':'1.3em', flexWrap: 'wrap'}}\r\n                                                    >\r\n                                                    {\r\n                                                        item.name\r\n                                                    }\r\n                                                    </ListItemText >\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            }\r\n                                        </Grid>\r\n                                    </ListItem> : null :null\r\n                                    ))}\r\n                            </List>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <List >\r\n                                <ListItem className='listItem' button\r\n                                    disableGutters={matchesSM}\r\n                                    onClick={logout}\r\n                                >\r\n                                    <Grid container alignItems='center' justify='center'>\r\n                                            <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                                                <Grid container justify='center'  >\r\n                                                    <ListItemIcon style={{justifyContent: matchesMD?'center': 'flex-start'}}> \r\n                                                        <FontAwesomeIcon icon={faSignOutAlt} size=\"lg\" color=\"white\"/> \r\n                                                    </ListItemIcon>\r\n                                               </Grid>\r\n                                            </Grid>\r\n                                            {matchesXS===false&&\r\n                                                <Grid item xs={12} sm={12} md={12} lg={9}>\r\n                                                    <Grid container style={{textAlign:matchesMD?'center': 'left'}}>\r\n                                                        <ListItemText \r\n                                                        disableTypography\t\r\n                                                        style={{fontSize: matchesSM?'1em':'1.3em',flexWrap: 'wrap'}}>Déconnexion</ListItemText >\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                 }\r\n                                            </Grid>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Grid item xs={10} style={{position: 'relative'}}>\r\n                    \r\n                    <Grid container direction='column'  style={{padding: '30px', marginBottom: 'auto'}}>\r\n                        <Grid item>\r\n                            <DashboardHeader logout={logout} \r\n                                profil={()=>{\r\n                                            setMenuItemSelected('Profil');\r\n                                            history.push({\r\n                                                pathname: '/dashboard/profil',\r\n                                                state: { data: auth?.user}\r\n                                            });\r\n                                        }}\r\n                        />\r\n                        </Grid>\r\n                        {/*PREMIÈRE CONNEXION*/}\r\n                        <Grid item>\r\n                            {user && user.PremierConnexion ?\r\n                            <Grid container>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant='h4'>Première connexion - Veuillez compléter votre profil</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <DashboardEditProfil history={history}/>\r\n                                </Grid>\r\n                            </Grid> \r\n                            :\r\n                            <Grid container direction='column'>\r\n                                <Grid item xs>\r\n                                    <DashboardContent/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            }\r\n                            \r\n                        </Grid>\r\n                     \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> }\r\n            <Footer/>\r\n        </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n \r\n .listItem:hover{\r\n     background-color: #70aedd !important\r\n }\r\n    \r\n    \r\n`\r\n","import { Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchRegions } from '../Api';\r\nimport { RegionsType } from '../Types';\r\n\r\n\r\n\r\ntype Props = {\r\n    selectedRegionId: (id: string|undefined)=>void\r\n};\r\n\r\nconst ListRegions: React.FC<Props> =({selectedRegionId})=>{\r\n    const [regions, setRegions] = useState<RegionsType[]>([]);\r\n    const [selectedRegion, setSelectedRegion] = useState<RegionsType | undefined>(undefined);\r\n    selectedRegionId(selectedRegion?._id);\r\n    useEffect(()=>{\r\n        getRegions();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n     \r\n      },[])\r\n\r\n      //fetch regions dans l'api\r\n    const getRegions = async () => {\r\n        let regions : RegionsType[] | undefined = await fetchRegions();\r\n        regions = regions.filter(region=> region.Supprime===false);\r\n        regions.sort((a, b) => (a.Name > b.Name) ? 1 : -1);\r\n\r\n        setRegions(regions);\r\n    }\r\n    \r\n    return(\r\n        regions &&\r\n        <Wrapper>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={10}>\r\n                    <Grid container>\r\n                        <Grid item xs><Typography variant='h6' className='titleLine'>Regions</Typography></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <List >\r\n                        {\r\n                        regions?.map( region => (\r\n                            <ListItem \r\n                                className='listItem' \r\n                                button key={region._id} \r\n                                dense\r\n                                selected={selectedRegion?._id===region._id}\r\n                                onClick={()=>{selectedRegion?._id===region._id ? setSelectedRegion(undefined) :setSelectedRegion(region)}}\r\n                            >\r\n                                <ListItemText primary={region.Name} />\r\n                            </ListItem>\r\n                        ))\r\n                        }\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default ListRegions;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n.listItem{\r\n    background-color: #F0F0F0;\r\n    border-left: 7px solid #dcdcdc;\r\n    margin-bottom: 2px;\r\n}\r\n.listItem:hover{\r\n    background-color: #C0C0C0\r\n}\r\n.Mui-selected{\r\n    background-color: #C0C0C0 !important\r\n}\r\n\r\n.titleLine {\r\n    overflow: hidden;\r\n}\r\n\r\n\r\n.titleLine::after {\r\n    content: \" \";\r\n    display: inline-block;\r\n    height: 1em;\r\n    vertical-align: bottom;\r\n    width: 100%;\r\n    margin-right: -100%;\r\n    margin-left: 10px;\r\n    border-top: 8px solid #707070;\r\n}\r\n\r\n `","import { Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchSecteursActivite } from '../Api';\r\nimport { SecteursActiviteType } from '../Types';\r\n\r\n\r\n\r\ntype Props = {\r\n    selectedSecteurId: (id: string|undefined)=>void\r\n};\r\n\r\nconst ListSecteurs: React.FC<Props> =({selectedSecteurId})=>{\r\n    const [secteursActivites, setSecteursActivites] = useState<SecteursActiviteType[]>([]);\r\n    const [selectedSecteur, setSelectedSecteur] = useState<SecteursActiviteType | undefined>(undefined);\r\n    selectedSecteurId(selectedSecteur?._id);\r\n    useEffect(()=>{\r\n        getSecteursActivites();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n     \r\n      },[])\r\n    \r\n      //fetch les secteurs dans l'api\r\n    const getSecteursActivites = async () => {\r\n        let secteursActivites : SecteursActiviteType[] | undefined = await fetchSecteursActivite();\r\n        secteursActivites = secteursActivites.filter(secteur=> secteur.Supprime===false);\r\n        //trie par ordre alphabétique\r\n        secteursActivites.sort((a, b) => (a.Titre > b.Titre) ? 1 : -1);\r\n\r\n        setSecteursActivites(secteursActivites);\r\n    }\r\n    \r\n    return(\r\n        secteursActivites &&\r\n        <Wrapper>\r\n            <Grid container justify='center'>\r\n                <Grid item xs={10}>\r\n                    <Grid container >\r\n                        <Grid item xs><Typography variant='h6' className='titleLine'>Secteurs d'activité</Typography></Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                    <List >\r\n                        {\r\n                        secteursActivites?.map( secteur => (\r\n                            <ListItem \r\n                                className='listItem' \r\n                                button key={secteur._id} \r\n                                dense\r\n                                selected={selectedSecteur?._id===secteur._id}\r\n                                onClick={()=>{selectedSecteur?._id===secteur._id ? setSelectedSecteur(undefined) :setSelectedSecteur(secteur)}}\r\n                            >\r\n                                <ListItemText primary={secteur.Titre} />\r\n                            </ListItem>\r\n                        ))\r\n                        }\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default ListSecteurs;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n.listItem{\r\n    background-color: #F0F0F0;\r\n    border-left: 7px solid #dcdcdc;\r\n    margin-bottom: 2px;\r\n}\r\n.listItem:hover{\r\n    background-color: #C0C0C0\r\n}\r\n.Mui-selected{\r\n    background-color: #C0C0C0 !important\r\n}\r\n\r\n.titleLine {\r\n    overflow: hidden;\r\n}\r\n\r\n\r\n.titleLine::after {\r\n    content: \" \";\r\n    display: inline-block;\r\n    height: 1em;\r\n    vertical-align: bottom;\r\n    width: 100%;\r\n    margin-right: -100%;\r\n    margin-left: 10px;\r\n    border-top: 8px solid #707070;\r\n}\r\n\r\n `","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { Breadcrumbs, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchUtilisateur } from '../Api';\r\nimport { Appel } from '../Enum';\r\nimport { OffresDemandesType, UtilisateursType } from '../Types';\r\nimport AppelAction from './AppelAction';\r\nimport ListRegions from './ListRegions';\r\nimport ListSecteurs from './ListSecteurs';\r\n\r\ntype Props = {\r\n    history: any,\r\n    type: Appel\r\n};\r\n\r\nconst DetailsAnnonces: React.FC<Props> =({history, type})=>{\r\n    const [selectedSecteurID, setSelectedSecteurID] = useState<string | undefined>(undefined);\r\n    const [selectedRegionID, setSelectedRegionID] = useState<string | undefined>(undefined);\r\n    const [offreDemande, setOffreDemande]=useState<OffresDemandesType>(history.location.state.data);\r\n    const [auteur, setAuteur] = useState<UtilisateursType | undefined>(undefined);\r\n\r\n    useEffect(()=>{\r\n        getAuteur();\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n      //fetch l'auteur\r\n    const getAuteur = async () => {\r\n        let auteur : UtilisateursType|null = await fetchUtilisateur(offreDemande.Auteur);\r\n        setAuteur(auteur);  \r\n    }\r\n\r\n     //MediaQueries\r\n     const theme = useTheme();\r\n     const matchesMD = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n     //format date yyyy-mm-dd\r\n     function formatDate(date:Date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n\r\n    return(\r\n        <Wrapper>\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Grid container style={{padding: '50px'}} spacing={matchesMD? 4:0}>\r\n                    <Grid item xs={12} sm={12} md={8}>\r\n                        <Grid container direction='column' spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Breadcrumbs  separator={<NavigateNextIcon fontSize=\"small\" />}  aria-label=\"breadcrumb\">\r\n                                    <Link color=\"inherit\" to=\"/accueil\">\r\n                                        Accueil\r\n                                    </Link>\r\n                                    {type===Appel.OFFRE?\r\n                                    <Link color=\"inherit\" to=\"/accueil/offres\">{'Offres'}</Link> :\r\n                                    <Link color=\"inherit\" to=\"/accueil/demandes\">{'Demandes'}</Link>\r\n                                    }\r\n                                    <Typography color=\"textPrimary\">{offreDemande.Titre}</Typography>\r\n                                </Breadcrumbs>\r\n                            </Grid>                                \r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12} sm={12} md={5} lg={5}>\r\n                                        <Grid container  justify='center'\r\n                                        style={{height: '100%',display: 'flex', alignItems:'center',  border: '1px solid black',\r\n                                        padding: '15px', textAlign:'center'}}>\r\n                                            {auteur&&\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container >\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant='h4'>{auteur?.Entreprise? auteur?.Logo: auteur.Ecole}</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                    <Typography variant='h6'>{auteur?.Entreprise? auteur?.NomEntreprise: offreDemande.ProgrammesSuivi}</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.Ville}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            }\r\n                                        </Grid>    \r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={7} lg={7} >\r\n                                        <Grid container  style={{display: 'flex', alignItems:'center',  border: '1px solid black',padding: '15px'}}>\r\n                                            <Grid item>\r\n                                                <Grid container spacing={3}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant='h4'>{offreDemande.Titre}</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Grid container>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Date de parution: </b>{formatDate(offreDemande.DateParution)}</Grid>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Durée: </b>{offreDemande.DureeSemaines + ' semaines'}</Grid>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Date de début: </b>{formatDate(offreDemande.DateDebut)}</Grid>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Heures: </b>{offreDemande.NombreHeuresSemaine+'/semaine'}</Grid>\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Date de fin: </b>{formatDate(offreDemande.DateFin)}</Grid>\r\n                                                            { auteur?.Entreprise &&\r\n                                                            <Grid item xs={12} sm={6} md={12} lg={6}><b>Possibilité d'emploi: </b>{offreDemande.EmploiApresStage ? 'oui':'non'}</Grid>\r\n                                                            }\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Button variant=\"contained\" color=\"primary\" fullWidth className='button'>\r\n                                                            {type===Appel.OFFRE?'Postuler':'Contacter le candidat'}\r\n                                                        </Button> \r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{marginTop: '50px'}}>\r\n                                        <Grid container spacing={8}>\r\n                                        {auteur?.Entreprise ?\r\n                                            <>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography className='upperCaseTitle' variant='h4'>Description de l'offre de stage</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.Description}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography className='upperCaseTitle' variant='h4'>Compétences recherchées</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.CompetencesRecherches}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant='h4' className='upperCaseTitle'>À propos de l'entreprise</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.InformationsSuplementaires}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            </> : \r\n                                            <>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography className='upperCaseTitle' variant='h4'>Description de la demande de stage</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.Description}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography className='upperCaseTitle' variant='h4'>Compétences acquises</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.CompetencesAcquises}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Grid container spacing={1}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant='h4' className='upperCaseTitle'>Autres informations</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        {offreDemande.AutresInformations}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            </>\r\n                                            }\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>    \r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6} md={12} >\r\n                                <ListSecteurs selectedSecteurId={setSelectedSecteurID}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={12}>\r\n                                <ListRegions selectedRegionId={setSelectedRegionID}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <AppelAction type={offreDemande.Type === Appel.OFFRE ? Appel.DEMANDE: Appel.OFFRE}/>\r\n            </Grid>\r\n        </Grid>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default DetailsAnnonces;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    \r\n.button{\r\n    border-radius:0;\r\n    text-transform: none;\r\n}\r\n\r\n.upperCaseTitle{\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n}\r\n    \r\n`","import { Button, Grid, IconButton, InputBase, Typography } from '@material-ui/core';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport Cookies from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Appel } from '../Enum';\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n    imageURL: string;\r\n    imgSize: number;\r\n    logout: () => void;\r\n    recherche: (recherche:string) => void;\r\n}\r\n\r\n\r\nconst Header: React.FC<Props> =({imageURL,imgSize,logout, recherche})=>{\r\n    const history= useHistory();\r\n\r\n    const handleLogin =()=>{\r\n            history.push('/login');\r\n    }\r\n\r\n    const token = Cookies.get('connected');\r\n\r\n\r\n    return(\r\n    <Wrapper backgroundUrl={imageURL}>\r\n        <div className='filter'  style={{height: imgSize+\"px\" }}>\r\n            <Grid   container \r\n                    direction=\"row\"\r\n                    alignItems=\"center\"\r\n                    className=\"topBlock\"\r\n            >\r\n                <Grid item xl={3} lg={2} md={12} sm={12} xs={12}  style={{textAlign: 'center'}}>\r\n                    <Grid container justify='center' alignItems='center' >\r\n                        <IconButton onClick={()=>history.push('/accueil')}>\r\n                            <Grid item>\r\n                                <GestureIcon style={{color: 'white', fontSize: '3rem'}}/>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h3\" style={{color:'white'}}>eStage</Typography>\r\n                            </Grid>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xl={6} lg={5} md={6} sm={7} xs={12} >\r\n                    <Grid container \r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                    >\r\n                        <Grid item>\r\n                            <Button \r\n                            variant=\"contained\" \r\n                            size=\"medium\" \r\n                            style={{backgroundColor: 'limegreen', color: 'white', textTransform: 'none', marginTop: '10px'}}\r\n                            onClick={()=>history.push({\r\n                                pathname: '/accueil/offres',\r\n                                state: {type: Appel.OFFRE}\r\n                            \r\n                            })}\r\n                            >\r\n                                Trouvez votre stage\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item style={{marginLeft: '5px', marginTop: '10px'}}>\r\n                            <Button variant=\"contained\" size=\"medium\"  \r\n                            style={{backgroundColor: 'limegreen', color: 'white', textTransform: 'none'}}\r\n                            onClick={()=>history.push({\r\n                                pathname: '/accueil/demandes',\r\n                                state: {type: Appel.DEMANDE}\r\n                            })}\r\n                            >\r\n                                Trouvez votre futur stagiaire\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            \r\n                <Grid item xl={3} lg={5} md={6} sm={5} xs={12} style={{marginTop: '10px'}}>\r\n                    <Grid container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                               \r\n                        >\r\n                            <Grid item >\r\n                                {token ?\r\n                                (<>\r\n                                <Grid container spacing={1}  alignItems=\"center\">\r\n                                    \r\n                                    \r\n                                    <Grid item style={{marginTop: '10px'}}>\r\n                                        <Button variant=\"contained\" \r\n                                                size=\"medium\"  \r\n                                                style={{textTransform: 'none'}}\r\n                                                color='secondary'\r\n                                                onClick={logout}\r\n                                        >\r\n                                            Déconnexion\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </>\r\n                                ) \r\n                                :\r\n                                <Grid item style={{marginTop: '10px'}}>\r\n\r\n                                <Button variant=\"contained\" \r\n                                        size=\"medium\"  \r\n                                        style={{backgroundColor: 'white', color: 'dimgray', textTransform: 'none'}}\r\n                                        onClick={handleLogin}\r\n                                >\r\n                                    Connexion\r\n                                </Button>\r\n                                </Grid>\r\n                                }\r\n                                \r\n                                \r\n                            </Grid>\r\n                            <Grid item style={{marginLeft: '10px', marginRight: '10px', marginTop: '10px'}}>\r\n                            {token ? \r\n                                <Button variant=\"contained\" size=\"medium\" color='primary' style={{textTransform: 'none'}} \r\n                                onClick={()=>{history.push('/dashboard')}}>\r\n                                    Dashboard\r\n                                </Button>\r\n                            :    <Button variant=\"contained\" size=\"medium\"  \r\n                                    style={{backgroundColor: 'dimgray', color: 'white', textTransform: 'none'}}\r\n                                    onClick={()=>history.push('/register')}\r\n                                    >\r\n                                    Inscription\r\n                                </Button>\r\n                            }\r\n                            </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"center\"  className=\"centerBlock\">\r\n                <Grid item >\r\n                    <Grid container  \r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Grid item>\r\n                            <Typography variant=\"h3\" style={{color:'white', textAlign:'center', marginBottom: '20px'}}>Trouvez votre stage!</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                                <Grid container  alignItems=\"center\" \r\n                                style={{borderRadius: '0',textTransform: 'none', backgroundColor: 'white', padding: '5px', width: '50vw'}}>\r\n                                    <Grid item xl={9} lg={8} md={8} sm={7} xs={12}>\r\n                                        <InputBase \r\n                                            fullWidth\r\n                                            placeholder=\"Mot clé\"\r\n                                            onChange={(e)=>recherche(e.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xl={3} lg={4} md={4} sm={5} xs={12}>\r\n                                        <Button \r\n                                        data-testid=\"button-recherche\"\r\n                                        onClick={()=>history.push('/accueil/offres')}\r\n                                        fullWidth variant=\"contained\" color=\"primary\" style={{borderRadius: '0',textTransform: 'none'}}>\r\n                                            Rechercher\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    \r\n    </Wrapper>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\nexport const Wrapper = styled.div<{backgroundUrl: string}>`\r\n    background-image: url(${props => props.backgroundUrl});\r\n    background-size: cover;\r\n    background-repeat:no-repeat;\r\n    background-position:  center;\r\n    \r\n    \r\n    .filter{\r\n        background:rgba(0,0,0,0.6);\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding-top: 15px\r\n    }\r\n\r\n    .topBlock{\r\n        flex:1;\r\n        align-content: flex-start;\r\n\r\n    }\r\n    .centerBlock{\r\n       flex:2;\r\n       align-content: flex-start;\r\n\r\n    }\r\n    \r\n    \r\n`","import { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Container,\r\n    Divider,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport Cookies from 'js-cookie';\r\nimport { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { addUtilisateur, fetchUtilisateurs } from '../Api';\r\nimport { UtilisateursType } from '../Types';\r\nimport useAuth from './auth/useAuth';\r\n\r\ntype Props = {\r\n    login: boolean\r\n};\r\n\r\ninterface State {\r\n    password: string,\r\n    confirmation: string,\r\n    nom: string,\r\n    prenom: string,\r\n    email: string,\r\n    showPassword: boolean,\r\n    showConfirmation: boolean,\r\n    entreprise: boolean|undefined,\r\n    NiveauAcces: number,\r\n    nomEntreprise: string\r\n  }\r\n\r\n\r\n  //formulaires de login et création d'utilisateur\r\nconst Login: React.FC<Props> =({login})=>{\r\n    const [values, setValues] = useState<State>({\r\n        password: '',\r\n        confirmation: '',\r\n        nom: '',\r\n        prenom: '',\r\n        email: '',\r\n        showPassword: false,\r\n        showConfirmation: false,\r\n        entreprise: undefined,\r\n        NiveauAcces: 111,\r\n        nomEntreprise: ''\r\n      });\r\n    const [error,setError] = useState<boolean>(false);\r\n    const auth = useAuth();\r\n    const history = useHistory();\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [update, setUpdate]= useState<String>('');\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [updatingUtilisateur, setUpdatingUtilisateur] = useState(true);\r\n    const [addedUtilisateur, setAddedUtilisateur] = useState(false);\r\n\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n      };\r\n\r\n      const handleClickShowConfirmation = () => {\r\n        setValues({ ...values, showConfirmation: !values.showConfirmation });\r\n      };\r\n    \r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n      };\r\n\r\n    const handleConnection = async (e:any) => {\r\n        e.preventDefault();\r\n        //console.log('email:', values.email);\r\n        //console.log('password:', values.password);\r\n        const utilisateurs : UtilisateursType[] | undefined = await fetchUtilisateurs();\r\n        const utilisateur=utilisateurs.find(utilisateur => utilisateur.Courriel===values.email && utilisateur.MotdePasse===values.password);\r\n   \r\n        if (utilisateur) {\r\n           auth?.signIn(utilisateur);\r\n           Cookies.set('connected', utilisateur._id);  \r\n        }\r\n        \r\n    }\r\n\r\n    const handleCreation= async (e:any)=>{\r\n        e.preventDefault();\r\n        setError(false);\r\n\r\n    if(values.confirmation!== values.password){\r\n        setError(true);\r\n    } \r\n    if(values.entreprise === undefined){\r\n        setError(true);\r\n    } \r\n\r\n       let newUser: UtilisateursType={\r\n           Prenom: values.prenom,\r\n           Nom: values.nom,\r\n           Courriel: values.email,\r\n           Entreprise: values.entreprise||false,\r\n           MotdePasse: values.password,\r\n           Valide: false,\r\n           Supprime: false,\r\n           Actif: true,\r\n           PremierConnexion: true,\r\n           NomEntreprise: values.nomEntreprise,\r\n           NiveauAcces:values.NiveauAcces,\r\n           _id:'',\r\n           Adresse: '',\r\n           Ville: '',\r\n           Region: '',\r\n           Logo:'',\r\n           Telephone:'',\r\n           SiteWeb:'',\r\n           CV:'',\r\n           MessageMotivation:'',\r\n           SecteursActivites: [],\r\n           Ecole:'',\r\n           PostesStagiaires:''\r\n        }\r\n\r\n    if(!error){\r\n        utilisateurAdded(newUser);\r\n    }\r\n\r\n    }\r\n\r\n    async function utilisateurAdded(newUser: UtilisateursType) {\r\n        try {\r\n            setUpdatingUtilisateur(true);\r\n            const update=await addUtilisateur(newUser)\r\n            setUpdate(update);\r\n        } catch (e) {\r\n        } finally {\r\n            setUpdatingUtilisateur(false);\r\n            let values={\r\n                password: '',\r\n                confirmation: '',\r\n                nom: '',\r\n                prenom: '',\r\n                email: '',\r\n                showPassword: false,\r\n                showConfirmation: false,\r\n                entreprise: undefined,\r\n                NiveauAcces: 111,\r\n                nomEntreprise: ''\r\n            };\r\n            setValues(values);\r\n            console.log(values);\r\n            setAddedUtilisateur(true);\r\n        }\r\n      }\r\n\r\n\r\n    return(\r\n    <Wrapper>\r\n        <Container className='login'>\r\n                {login ?\r\n                <Grid container justify='center' spacing={4}>\r\n                    <Grid item xs={12}>\r\n                        <form onSubmit={(e)=>handleConnection(e)}>\r\n\r\n                        <Grid container spacing={4} >\r\n                            <Grid item xs={12} >\r\n                                <Typography variant='h3'>Connexion</Typography> \r\n                                <p>Bienvenue sur la plateforme de connexion et inscription de eStage.</p>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\" fullWidth required>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                id=\"input-courriel\"\r\n                                                label=\"Courriel\"\r\n                                                variant=\"outlined\"\r\n                                                type='email'\r\n                                                name='Courriel'\r\n                                                required\r\n                                                onChange={handleChange('email')}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                                            <InputLabel htmlFor=\"outlined-adornment-password\">Mot de passe</InputLabel>\r\n                                            <OutlinedInput\r\n                                                fullWidth\r\n                                                id=\"outlined-adornment-password\"\r\n                                                type={values.showPassword ? 'text' : 'password'}\r\n                                                value={values.password}\r\n                                                onChange={handleChange('password')}\r\n                                                endAdornment={\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                    >\r\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                                }\r\n                                                labelWidth={130}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                            <Grid item xs={12}>\r\n                                <Grid container justify='flex-end'>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"large\"\r\n                                            type='submit'\r\n                                            endIcon={<FontAwesomeIcon icon={faSignInAlt}  color=\"white\"/>}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\">Connexion</Typography>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>  \r\n                            </Grid>\r\n                        </Grid>\r\n                        </form>\r\n                    </Grid>  \r\n                    <Grid item xs={12}>\r\n                        <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify='center'>\r\n                                    <Grid item>\r\n                                        <Typography>Vous n'avez pas de compte?</Typography>\r\n                                    </Grid>\r\n                                </Grid>      \r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container justify='center'>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            className='buttonCreer'\r\n                                            variant=\"contained\"\r\n                                            size=\"large\"\r\n                                            onClick={()=>{\r\n                                                history.push('/register');\r\n                                                setAddedUtilisateur(false);\r\n                                            }}\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\">Créer votre compte</Typography>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid> \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                : \r\n                \r\n                <Grid container>\r\n                    {addedUtilisateur===false?\r\n                    <Grid item xs={12}>\r\n                        <form onSubmit={(e)=>handleCreation(e)}>\r\n                        <Grid container spacing={3} >\r\n                            <Grid item xs={12} >\r\n                                <Typography variant='h3'>Créez votre compte</Typography> \r\n                                <p>Informations</p>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={2} >\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container spacing={2} alignItems='center'>\r\n                                            <Grid item> <FormLabel>Vous êtes?</FormLabel></Grid>\r\n                                            <Grid item>\r\n                                                <ButtonGroup disableElevation variant=\"contained\"  >\r\n                                                    <Button \r\n                                                    variant={values.entreprise ? 'contained' : 'outlined'}\r\n                                                    style={{ textTransform: 'none'}} \r\n                                                    color='primary'\r\n                                                    onClick={()=>setValues({ ...values, entreprise: true,NiveauAcces: 333 })}\r\n                                                    >\r\n                                                        Une entreprise\r\n                                                    </Button>\r\n                                                    <Button \r\n                                                    style={{textTransform: 'none'}}\r\n                                                    variant={!values.entreprise&& values.entreprise!==undefined  ? 'contained' : 'outlined'} \r\n                                                    onClick={()=>setValues({ ...values, entreprise: false,NiveauAcces: 111 })}\r\n                                                    color='primary'\r\n                                                    >\r\n                                                        Un étudiant\r\n                                                    </Button>\r\n                                                </ButtonGroup>  \r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                            <FormHelperText \r\n                                                error={error ? values.entreprise===undefined: error }>\r\n                                                {error? values.entreprise===undefined ? 'Vous devez choisir une option!':null:null } \r\n                                                </FormHelperText>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container spacing={2}>\r\n                                            {values.entreprise &&\r\n                                            <Grid item xs={12}>\r\n                                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    id=\"input-nomEntreprise\"\r\n                                                    label=\"Nom de l'entreprise\"\r\n                                                    variant=\"outlined\"\r\n                                                    defaultValue={values.nomEntreprise}\r\n                                                    required\r\n                                                    onChange={handleChange('nomEntreprise')}\r\n\r\n                                                />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            }\r\n                                            <Grid item xs={6}>\r\n                                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    id=\"input-prenom\"\r\n                                                    label={values.entreprise?'Prénom de la personne responsable':'Prénom'}\r\n                                                    variant=\"outlined\"\r\n                                                    defaultValue={values.prenom}\r\n                                                    required\r\n                                                    onChange={handleChange('prenom')}\r\n\r\n                                                />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <FormControl variant=\"outlined\" fullWidth required>\r\n                                                    <TextField\r\n                                                        fullWidth\r\n                                                        id=\"input-nom\"\r\n                                                        label={values.entreprise?'Nom de la personne responsable':'Nom'}\r\n                                                        variant=\"outlined\"\r\n                                                        defaultValue={values.nom}\r\n                                                        required\r\n                                                        onChange={handleChange('nom')}\r\n                                                    />\r\n                                                    </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\" fullWidth required>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                id=\"input-courriel\"\r\n                                                label=\"Courriel\"\r\n                                                variant=\"outlined\"\r\n                                                type='email'\r\n                                                required\r\n                                                onChange={handleChange('email')}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                                            <InputLabel htmlFor=\"outlined-adornment-password\">Mot de passe</InputLabel>\r\n                                            <OutlinedInput\r\n                                                required\r\n                                                fullWidth\r\n                                                id=\"outlined-adornment-password\"\r\n                                                type={values.showPassword ? 'text' : 'password'}\r\n                                                value={values.password}\r\n                                                onChange={handleChange('password')}\r\n                                                endAdornment={\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                    >\r\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                                }\r\n                                                labelWidth={110}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControl variant=\"outlined\"  required fullWidth>\r\n                                            <InputLabel htmlFor=\"outlined-adornment-confirmation\">Confirmez le nouveau mot de passe</InputLabel>\r\n                                            <OutlinedInput\r\n                                                required\r\n                                                fullWidth\r\n                                                id=\"outlined-adornment-confirmation\"\r\n                                                type={values.showConfirmation ? 'text' : 'password'}\r\n                                                value={values.confirmation}\r\n                                                onChange={handleChange('confirmation')}\r\n                                                endAdornment={\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowConfirmation}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                    edge=\"end\"\r\n                                                    >\r\n                                                    {values.showConfirmation ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                                }\r\n                                                labelWidth={300}\r\n                                            />\r\n                                        </FormControl>\r\n                                        <FormHelperText \r\n                                            error={error ? values.password!==values.confirmation: error }>\r\n                                            {error? values.password!==values.confirmation ? 'Les mots de passe doivent être identiques!':null:null } \r\n                                        </FormHelperText>\r\n                                    </Grid>\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Grid container >\r\n                                    <Grid item>\r\n                                        <Link to='/login'>Vous avez déjà un compte ?</Link>\r\n                                    </Grid>\r\n                                </Grid>  \r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={6}>\r\n                                <Grid container justify='flex-end'>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"large\"\r\n                                            type='submit'\r\n                                        >\r\n                                            <Typography variant=\"subtitle1\">Creér le compte</Typography>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>  \r\n                            </Grid>\r\n                        </Grid>                            \r\n                        </form>\r\n                    </Grid> :\r\n                    <Grid container spacing={3} >\r\n                        <Grid item>\r\n                            <Typography>Votre compte a bien été crée!</Typography>              \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to='/login'>Voulez-vous vous connecter?</Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link onClick={()=>setAddedUtilisateur(false)} to='/register'>Voulez-vous vous créer une autre compte?</Link>\r\n                        </Grid>\r\n                    </Grid>   \r\n                    \r\n                    }\r\n                </Grid>\r\n                \r\n                \r\n                }\r\n        </Container>      \r\n    </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n.login {\r\n   padding: 60px;\r\n   margin-top: 50px;\r\n   margin-bottom: 50px;\r\n   border: 2px solid black;\r\n   border-left: 12px solid black;\r\n   border-right: 12px solid black;\r\n   background-color: WhiteSmoke\r\n\r\n}\r\n  \r\n  .buttonCreer{\r\n      background-color: #e48400;\r\n      color: white;\r\n  }\r\n  .buttonCreer:hover{\r\n      color: black;\r\n  }\r\n`","export default __webpack_public_path__ + \"static/media/contact.e5473735.jpg\";","import { Button, Container, Grid, TextField, Typography } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport styled from 'styled-components';\r\n\r\nimport bgContact from '../images/contact.jpg';\r\n\r\ntype Props = {\r\n    \r\n};\r\n\r\n\r\n//contact form ---formsubmit.co\r\nconst NousJoindre: React.FC<Props> =()=>{\r\n\r\n    return(\r\n      <Wrapper backgroundUrl={bgContact}>\r\n        <Container className='contact'>\r\n          <form action=\"https://formsubmit.co/eric.martins.01@edu.cegeptr.qc.ca\" method='post'>\r\n            <Grid container spacing={3} className='contactForm' >\r\n              <Grid item xs={12}>\r\n                <Typography variant='h3'>Nous joindre</Typography> \r\n                <p>Écrivez nous si vouz avez un problème, une question ou une sugestion.</p>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField id=\"outlined-basic\" label=\"Prénom\" variant=\"outlined\" fullWidth name='prenom'  required/>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField id=\"outlined-basic\" label=\"Nom\" variant=\"outlined\" fullWidth name='nom' required/>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField id=\"outlined-basic\" label=\"Courriel\" variant=\"outlined\" fullWidth  name='courriel' required type='email'/>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField id=\"outlined-basic\" label=\"Message\" variant=\"outlined\"  multiline rows='5' fullWidth name='message' required/>\r\n                <input type=\"hidden\" name=\"_next\" value=\"https://martins81-web.github.io/projet_synthese_ericmartins/merci\"/>\r\n                <input type=\"hidden\" name=\"_captcha\" value=\"false\"/>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<SendIcon/>}\r\n                    type='submit'\r\n                    \r\n                  >\r\n                    Envoyer\r\n                  </Button>\r\n              </Grid>\r\n            </Grid>\r\n            \r\n          </form>\r\n        </Container>\r\n      </Wrapper>\r\n    )\r\n}\r\n\r\nexport default NousJoindre;\r\n\r\nexport const Wrapper = styled.div<{backgroundUrl: string}>`\r\n    background-image: url(${props => props.backgroundUrl});\r\n    \r\n    \r\n    \r\n`","import { Grid } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchOffresDemandes } from '../Api';\r\nimport { Appel } from '../Enum';\r\nimport { OffresDemandesType } from '../Types';\r\nimport CardDernieresAnnonces from './CardDernieresAnnonces';\r\n\r\n\r\n\r\ntype Props = {\r\n    type: Appel\r\n    selectedSecteurID?: string| undefined, \r\n    selectedRegionID?:  string| undefined,\r\n    recherche: string\r\n};\r\n\r\nconst ListOffresDemandes: React.FC<Props> =({type, selectedSecteurID, selectedRegionID,recherche})=>{\r\n    const [offresDemandes, setOffresDemandes] = useState<OffresDemandesType[]>([]);\r\n    useEffect(()=>{\r\n        getOffresDemandes();\r\n       \r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n\r\n    \r\n    const getOffresDemandes = async () => {\r\n        let offresDemandes : OffresDemandesType[] | undefined = await fetchOffresDemandes();\r\n        // Filtre les offres valides\r\n        offresDemandes = offresDemandes.filter(offreDemande=> offreDemande.Supprime===false  && offreDemande.Valide );\r\n        // Trié par date\r\n        offresDemandes.sort((a, b) => (a.DateParution < b.DateParution) ? 1 : -1);\r\n        // Garde juste les 4 offre vedettes les plus récentes\r\n        //console.log(offresDemandes);\r\n        setOffresDemandes(offresDemandes);  \r\n    }\r\n    return(\r\n        <Grid container spacing={3}>\r\n            {offresDemandes.map( offreDemande => (\r\n                offreDemande.SecteurActivite.includes(selectedSecteurID||\"\") && offreDemande.Region.includes(selectedRegionID||\"\") &&\r\n                offreDemande.Titre.toLowerCase().includes(recherche.toLowerCase()) && offreDemande.Type===type &&\r\n                <Grid item xs={12} key={offreDemande._id}>\r\n                    <CardDernieresAnnonces type={type} offreDemande={offreDemande}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ListOffresDemandes;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    \r\n\r\n    \r\n`","import { Breadcrumbs, Grid, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Appel } from '../Enum';\r\nimport AppelAction from './AppelAction';\r\nimport ListOffresDemandes from './ListOffresDemandes';\r\nimport ListRegions from './ListRegions';\r\nimport ListSecteurs from './ListSecteurs';\r\n\r\ntype Props = {\r\n    type: Appel,\r\n    recherche: string\r\n};\r\n\r\n\r\n//lists offres/demandes\r\nconst OffresDemandes: React.FC<Props> =({type, recherche})=>{\r\n    const [selectedSecteurID, setSelectedSecteurID] = useState<string | undefined>(undefined);\r\n    const [selectedRegionID, setSelectedRegionID] = useState<string | undefined>(undefined);\r\n     //MediaQueries\r\n     const theme = useTheme();\r\n     const matchesMD = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return(\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Grid container style={{padding: '50px'}} spacing={matchesMD? 4:0}>\r\n                    <Grid item xs={12} sm={12} md={8}>\r\n                        <Grid container direction='column' spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Breadcrumbs  separator={<NavigateNextIcon fontSize=\"small\" />}  aria-label=\"breadcrumb\">\r\n                                    <Link color=\"inherit\" to=\"/accueil\">\r\n                                        Accueil\r\n                                    </Link>\r\n                                    <Typography color=\"textPrimary\">{type.toString().charAt(0).toUpperCase()+type.slice(1)+'s de stage'}</Typography>\r\n                                </Breadcrumbs>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <ListOffresDemandes type={type} selectedSecteurID={selectedSecteurID} selectedRegionID={selectedRegionID} recherche={recherche}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={6} md={12} >\r\n                                <ListSecteurs selectedSecteurId={setSelectedSecteurID}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={12}>\r\n                                <ListRegions selectedRegionId={setSelectedRegionID}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <AppelAction type={type === Appel.OFFRE ? Appel.DEMANDE: Appel.OFFRE}/>\r\n            </Grid>\r\n        </Grid>\r\n       \r\n    )\r\n}\r\n\r\nexport default OffresDemandes;\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    \r\n\r\n    \r\n`","export default __webpack_public_path__ + \"static/media/accueil.8666dc5f.jpg\";","import { Container, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ntype Props = {\r\n    \r\n};\r\n//page statique\r\nconst FormSubmittedMerci: React.FC<Props> =()=>{\r\n    return(\r\n        <Container className='politique'>\r\n            <Typography variant='h3' >Merci de nous contacter!</Typography>  \r\n            <Typography>Nous vous remercions de nous avoir contacté. </Typography>  \r\n            <Typography>Un de nos collègues communiquera avec vous dans les plus bref des délais!</Typography> \r\n            <Typography style={{marginBottom: '20px'}}><b>Passez une bonne journée!!</b></Typography>    \r\n            <Link to=\"/accueil\"  >Retourner à l'accueil</Link>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormSubmittedMerci;","import './App.sass';\n\nimport Cookies from 'js-cookie';\nimport { useEffect, useState } from 'react';\nimport { useLayoutEffect } from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nimport { fetchUtilisateurs } from './Api';\nimport Accueil from './components/Accueil';\nimport APropos from './components/APropos';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport ProtectedLogin from './components/auth/ProtectedLogin';\nimport useAuth from './components/auth/useAuth';\nimport Confidentialite from './components/Confidentialite';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport DetailsAnnonces from './components/DetailsAnnonces';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport NousJoindre from './components/NousJoindre';\nimport OffresDemandes from './components/OffresDemandes';\nimport { Appel, Size } from './Enum';\nimport BGImage from './images/accueil.jpg';\nimport { UtilisateursType } from './Types';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport FormSubmittedMerci from './components/formSubmittedMerci';\n\nfunction App() {\n  const [recherche, setRecherche]= useState<string>('');\n\n  const offre = () => toast.error(<p>Vous devez vous connecter en tant qu'<b>ENTREPRISE</b> pour pouvoir publier une offre de stage!</p>);\n  const demande = () => toast.error(<p>Vous devez vous connecter en tant que <b>STAGIAIRE</b> pour pouvoir publier une demande de stage!</p>);\n\n  const auth = useAuth();\n  const history = useHistory();\n  const location = useLocation(); \n  //console.log(location.pathname); \n\n  //Ça fait scrollToTop dans tous les changements de route \n  useLayoutEffect(() => {\n    if(location.pathname!=='/login' && location.pathname!=='/register')\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  const getImage = ()=>{\n    if(location.pathname === \"/accueil\")\n    return BGImage;\n    else return BGImage;\n  }\n\n  const logout = () => {\n    //console.log('logout');\n    Cookies.remove('connected');\n    auth?.signOut();\n    history.push('/accueil');\n  }\n\n  \n  useEffect(()=>{\n    handleConnectionfromCookie(); //appel de la fonction qui vérifie s'il y a un cookie de connection\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  //vérifie s'il y a un cookie de connexion et fait la connexion\n  const handleConnectionfromCookie = async () => {\n    const token = Cookies.get('connected');\n    //console.log(token);\n    const utilisateurs : UtilisateursType[] | undefined = await fetchUtilisateurs();\n    const utilisateur=utilisateurs.find(utilisateur => utilisateur._id === token);\n\n    if (utilisateur) {\n        auth?.signIn(utilisateur);\n        Cookies.set('connected', utilisateur._id);  \n    }\n  \n  }\n\n\n\n  return (\n    <>\n      {\n      !location.pathname.includes('/dashboard') && !location.pathname.includes('/premiereConnexion')  &&\n      <Header imageURL={getImage()} \n              imgSize={!location.pathname.includes('/merci') ?Size.BIG: Size.SMALLER}\n              logout={logout}\n              recherche={(recherche)=>setRecherche(recherche)}\n      />\n      } \n      <Switch>\n        <Redirect exact from=\"/dashboard/update\" to=\"/dashboard\"/>\n        <Redirect exact from=\"/\" to=\"/accueil\" />\n        <Route exact path=\"/accueil\"><Accueil toast={(type)=>type==='offre'? offre: demande} /></Route>\n        <Route path=\"/contact\" component={NousJoindre}/>\n        <Route path=\"/confidentialite\" component={Confidentialite}/>\n        <Route path=\"/apropos\" component={APropos}/>\n        <Route path=\"/accueil/offres\"><OffresDemandes type={Appel.OFFRE} recherche={recherche}/></Route>\n        <Route path=\"/accueil/offre/:id\"><DetailsAnnonces history={history} type={Appel.OFFRE}/></Route>\n        <Route path=\"/accueil/Demandes\"><OffresDemandes type={Appel.DEMANDE} recherche={recherche} /></Route>\n        <Route path=\"/accueil/demande/:id\"><DetailsAnnonces history={history} type={Appel.DEMANDE}/></Route> \n        <Route exact path=\"/merci\" component={FormSubmittedMerci}></Route>\n        <PrivateRoute path=\"/dashboard/\"><Dashboard logout={logout}/></PrivateRoute>\n        <ProtectedLogin path=\"/login\" ><Login login={true}/></ProtectedLogin>\n        <ProtectedLogin path=\"/register\" ><Login login={false}/></ProtectedLogin> \n      </Switch>\n      <ToastContainer limit={1}/>\n\n      {\n      !location.pathname.includes('/dashboard') && !location.pathname.includes('/premiereConnexion') &&< Footer/>\n      } \n      \n      \n    </>\n  );\n}\nexport default App;\n\n\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport AuthProvider from './components/auth/AuthProvider';\n\n\n\nReactDOM.render(\n <AuthProvider>\n      <Router basename=\"/projet_synthese_ericmartins/\">\n        <App />\n      </Router>\n  </AuthProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}